/*
 * Author       : 2demo1supertroninfotech
 * Generated on : 22-Apr-2024 03:19:15
 * Version      : 1.0
 */
 application "Freight Forwarding and Feeder Solution"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Dubai"
 	time format = "24-hr"
 	section Container_Movement_Tracking
	{
		displayname= "Container Movement Tracking"
		icon = "location-pin"
		pivottable Container_Movement_Tracking
		{ 
			displayname = "Container Movement Tracking"
			layout = 4
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1712753611193_New_Table_of_Container
							icon = "location-pin"				show all rows from New_Table_of_Container
				(
			Container_No  as "Container No"
			Container_Seal_Number  as "Container Seal Number"
			Container_Type  as "Container Type"
			Container_Size  as "Container Size"
			G_Wt  as "G.Wt"
			NetWt 
			DO_ID 
			Port_of_Loading  as "Port of Loading"
			Port_of_Discharge  as "Port of Discharge"
			Gate_Way_Airport  as "Gate Way Airport"
			Destination_Airport  as "Destination Airport"
			Place_of_Loading  as "Place of Loading"
			Place_of_Delivery  as "Place of Delivery"
			ETA 
			Arrived_On  as "Arrived On"
				)
		}
	}
	section Freight_Forwarding_CRM
	{
		displayname= "Freight Forwarding CRM"
		icon = "transportation-boat-front"
		default list SOFs
		{
			displayName = "SOFs"
   			hide = true
			show all rows from New_SOF    
			(
				Vessel_Name as "Vessel Name"
				Appointment
				New_Port
				Voyage_Number as "Voyage Number"
				Type_of_Call as "Type of Call"
				Date_sof as "Date"
				DETAILS1.Date_details as "DETAILS"
				AFT as "AFT (in M)"
				FWD as "FWD (in M)"
				FWD2 as "FWD (in M)"
				AFT2 as "AFT (in M)"
				FO as "FO (in MT)"
				DO as "DO (in MT)"
				FW as "FW (in MT)"
				FW2 as "FW (in MT)"
				FO2 as "FO (in MT)"
				DO2 as "DO (in MT)"
				TUGS_ON_ARRIVAL as "TUGS ON ARRIVAL"
				TUGS_ON_DEPARTURE as "TUGS ON DEPARTURE"
				STOPPAGES.Date1 as "STOPPAGES"
				NO_CARGO_OPERATIONS.Date2 as "NO CARGO OPERATIONS"
				Remarks1 as "Remarks"
				Master_Remarks1 as "Master Remarks"
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Vessel_Name as "Vessel Name"
							Appointment
							New_Port
							Voyage_Number as "Voyage Number"
							Type_of_Call as "Type of Call"
							Date_sof as "Date"
							DETAILS1.Date_details as "DETAILS"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Vessel_Name as "Vessel Name"
							Appointment
							New_Port
							Voyage_Number as "Voyage Number"
							Type_of_Call as "Type of Call"
							Date_sof as "Date"
							DETAILS1.Date_details as "DETAILS"
							AFT as "AFT (in M)"
							FWD as "FWD (in M)"
							FWD2 as "FWD (in M)"
							AFT2 as "AFT (in M)"
							FO as "FO (in MT)"
							DO as "DO (in MT)"
							FW as "FW (in MT)"
							FW2 as "FW (in MT)"
							FO2 as "FO (in MT)"
							DO2 as "DO (in MT)"
							TUGS_ON_ARRIVAL as "TUGS ON ARRIVAL"
							TUGS_ON_DEPARTURE as "TUGS ON DEPARTURE"
							STOPPAGES.Date1 as "STOPPAGES"
							NO_CARGO_OPERATIONS.Date2 as "NO CARGO OPERATIONS"
							Remarks1 as "Remarks"
							Master_Remarks1 as "Master Remarks"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Leads
		{
			displayName = "Leads"
			show all rows from New_Lead    
			(
				Company
				Email
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Lead_Status as "Lead Status"
				Mode_of_Shipment as "Mode of Shipment"
				Submode as "Sub Mode of Shipment"
				Cargo_Type as "Cargo Type"
				Shipment_Terms as "Shipment Terms"
				Container_Movement_Type as "Container Movement Type"
				Lead_Source as "Lead Source"
				Industry
				Freight_Prepaid_Collect as "Freight Prepaid / Collect"
				Include_Insurance as "Include Insurance"
				Value_of_Goods as "Value of Goods"
				No_of_Containers_Req as "No. of Containers Req."
				Container_Size as "Container Size"
				Is_Stackable as "Is Stackable ?"
				Gate_Way_Airport as "Gate Way Airport"
				Destination_Airport as "Destination Airport"
				ETD
				ETA
				TRN
				MFD_Required as "MFD Required"
				No_of_Employees as "No. of Employees"
				Photograph
				Website
				Annual_Revenue as "Annual Revenue"
				Rating
				USED_OR_NEW_INDICATOR as "USED OR NEW INDICATOR"
				Dangerous_Goods as "Dangerous Goods"
				Carrier_Vessel as "Carrier (Vessel)"
				Storage_Request_Code as "Storage Request Code"
				General_Description as "General Description"
				Groupage_Sub_Category as "Groupage Sub Category"
				Lead_Expiration_Date as "Lead Expiration Date"
				Type_of_Container as "Type of Container"
				Unit_of_Temperature as "Unit of Temperature"
				Message_Type as "Message Type"
				Rotaion_Number as "Rotaion Number"
				BOX_Partnering_Line_Code as "BOX / Partnering Line Code"
				BOX_Partnering_Agent_Code as "BOX/Partnering Agent Code"
				Manifest_Registration_Number as "Manifest Registration Number"
				Slac_Indicator as "Slac Indicator"
				Place_of_Delivery as "Place of Delivery"
				Place_of_Load as "Place of Load"
				Port_of_Loading as "Port of Loading"
				Port_of_Discharge as "Port of Discharge"
				IMO_Class as "IMO Class"
				Dangerous_Goods_indicator as "Dangerous Goods indicator"
				Storage_request_for_Dangerous_Goods as "Storage request for Dangerous Goods"
				UN_Number as "UN Number"
				Voyage_Number as "Voyage Number"
				Package_Code as "Package Code"
				Package_Description as "Package Description"
				Number_of_Package as "Number of Package"
				Street
				City
				State
				Shipper_Name as "Shipper Name"
				Shipper_Street as "Shipper Street"
				Shipper_State as "Shipper State"
				Shipper_City as "Shipper City"
				Shipper_Country as "Shipper Country"
				Shipper_Zip_Code as "Shipper Zip Code"
				Zip_Code as "Zip Code"
				Country
				Consignee_Name as "Consignee Name"
				Consignee_Street as "Consignee Street"
				Consignee_City as "Consignee City"
				Consignee_State as "Consignee State"
				Consignee_Zip_Code as "Consignee Zip Code"
				Consignee_Country as "Consignee Country"
				Description
				Min_Temp_of_Refrigeration as "Min Temp. of Refrigeration"
				Max_Temp_of_Refrigeration as "Max Temp. of Refrigeration"
				Lead_Owner as "Lead Owner"
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Is_Converted as "Is Converted ?"
				Account_ID as "Account ID"
				Mobile
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				If_Other_Industry_Pls_Specify as "If Other Industry Pls Specify"
				Vessel_Name as "Vessel Name"
			)
			options
			(
				icon = "users-2-a-add"
	 		)
			custom actions
			(
				"Convert"
				(
	  			workflow = Convert
				show action in view header = true
				show action in edit record menu = true
				confirmation before execution
				(
					message for individual record = "Do you want to convert this lead to account, contact and deal ?"
					confirm button text = "Yes"		
					cancel button text = "No"
				)
				)
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Company
							Is_Converted as "Is Converted ?"
							Email
							Phone_Number as "Phone"
							Lead_Status as "Lead Status"
							Mode_of_Shipment as "Mode of Shipment"
							Submode as "Sub Mode of Shipment"
							Package_Code as "Package Code"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						"Convert"
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Company
							Email
							Phone_Number as "Phone"
							Lead_Status as "Lead Status"
							Mode_of_Shipment as "Mode of Shipment"
							Submode as "Sub Mode of Shipment"
							Package_Code as "Package Code"
							Package_Description as "Package Description"
							Number_of_Package as "Number of Package"
							Street
							City
							State
							Shipper_Name as "Shipper Name"
							Shipper_Street as "Shipper Street"
							Shipper_State as "Shipper State"
							Shipper_City as "Shipper City"
							Shipper_Country as "Shipper Country"
							Shipper_Zip_Code as "Shipper Zip Code"
							Zip_Code as "Zip Code"
							Country
							Consignee_Name as "Consignee Name"
							Consignee_Street as "Consignee Street"
							Consignee_City as "Consignee City"
							Consignee_State as "Consignee State"
							Consignee_Zip_Code as "Consignee Zip Code"
							Consignee_Country as "Consignee Country"
							Description
							Min_Temp_of_Refrigeration as "Min Temp. of Refrigeration"
							Max_Temp_of_Refrigeration as "Max Temp. of Refrigeration"
							Lead_Owner as "Lead Owner"
							Name
							Is_Converted as "Is Converted ?"
							Account_ID as "Account ID"
							Mobile
							If_Other_Industry_Pls_Specify as "If Other Industry Pls Specify"
							Vessel_Name as "Vessel Name"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
			 			"Convert"
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Converted_Leads
		{
			displayName = "Converted Leads"
			show all rows from New_Lead  [Is_Converted == "Yes"]  
			(
				Lead_Owner as "Lead Owner"
				Company
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Lead_Status as "Lead Status"
				Mode_of_Shipment as "Mode of Shipment"
				Shipment_Terms as "Shipment Terms"
				Type_of_Container as "Type of Container"
				Unit_of_Temperature as "Unit of Temperature"
				BOX_Partnering_Line_Code as "BOX / Partnering Line Code"
				Slac_Indicator as "Slac Indicator"
				No_of_Containers_Req as "No. of Containers Req."
				Gate_Way_Airport as "Gate Way Airport"
				Place_of_Delivery as "Place of Delivery"
				ETA
				Is_Stackable as "Is Stackable ?"
				No_of_Employees as "No. of Employees"
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Website
				Industry
				Submode as "Sub Mode of Shipment"
				Freight_Prepaid_Collect as "Freight Prepaid / Collect"
				Max_Temp_of_Refrigeration as "Max Temp. of Refrigeration"
				Message_Type as "Message Type"
				BOX_Partnering_Agent_Code as "BOX/Partnering Agent Code"
				Include_Insurance as "Include Insurance"
				Value_of_Goods as "Value of Goods"
				Destination_Airport as "Destination Airport"
				Port_of_Loading as "Port of Loading"
				ETD
				Container_Movement_Type as "Container Movement Type"
				Annual_Revenue as "Annual Revenue"
				Photograph
				Email
				Lead_Source as "Lead Source"
				Cargo_Type as "Cargo Type"
				Groupage_Sub_Category as "Groupage Sub Category"
				Min_Temp_of_Refrigeration as "Min Temp. of Refrigeration"
				Lead_Expiration_Date as "Lead Expiration Date"
				Rotaion_Number as "Rotaion Number"
				Manifest_Registration_Number as "Manifest Registration Number"
				Container_Size as "Container Size"
				Place_of_Load as "Place of Load"
				Port_of_Discharge as "Port of Discharge"
				MFD_Required as "MFD Required"
				TRN
				Rating
				USED_OR_NEW_INDICATOR as "USED OR NEW INDICATOR"
				Dangerous_Goods_indicator as "Dangerous Goods indicator"
				Carrier_Vessel as "Carrier (Vessel)"
				Dangerous_Goods as "Dangerous Goods"
				Storage_request_for_Dangerous_Goods as "Storage request for Dangerous Goods"
				UN_Number as "UN Number"
				Voyage_Number as "Voyage Number"
				IMO_Class as "IMO Class"
				Storage_Request_Code as "Storage Request Code"
				General_Description as "General Description"
				Package_Code as "Package Code"
				Package_Description as "Package Description"
				Number_of_Package as "Number of Package"
				Street
				Country
				City
				Zip_Code as "Zip Code"
				State
				Shipper_Name as "Shipper Name"
				Shipper_City as "Shipper City"
				Shipper_Street as "Shipper Street"
				Shipper_Country as "Shipper Country"
				Shipper_State as "Shipper State"
				Shipper_Zip_Code as "Shipper Zip Code"
				Consignee_Name as "Consignee Name"
				Consignee_State as "Consignee State"
				Consignee_Street as "Consignee Street"
				Consignee_Zip_Code as "Consignee Zip Code"
				Consignee_City as "Consignee City"
				Consignee_Country as "Consignee Country"
				Description
			)
			options
			(
				icon = "users-2-home"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Lead_Owner as "Lead Owner"
							Company
							Phone_Number as "Phone"
							Lead_Status as "Lead Status"
							Mode_of_Shipment as "Mode of Shipment"
							Shipment_Terms as "Shipment Terms"
							Type_of_Container as "Type of Container"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Lead_Owner as "Lead Owner"
							Company
							Phone_Number as "Phone"
							Lead_Status as "Lead Status"
							Mode_of_Shipment as "Mode of Shipment"
							Shipment_Terms as "Shipment Terms"
							Type_of_Container as "Type of Container"
							Unit_of_Temperature as "Unit of Temperature"
							BOX_Partnering_Line_Code as "BOX / Partnering Line Code"
							Slac_Indicator as "Slac Indicator"
							No_of_Containers_Req as "No. of Containers Req."
							Gate_Way_Airport as "Gate Way Airport"
							Place_of_Delivery as "Place of Delivery"
							ETA
							Is_Stackable as "Is Stackable ?"
							No_of_Employees as "No. of Employees"
							Name
							Website
							Industry
							Submode as "Sub Mode of Shipment"
							Freight_Prepaid_Collect as "Freight Prepaid / Collect"
							Max_Temp_of_Refrigeration as "Max Temp. of Refrigeration"
							Message_Type as "Message Type"
							BOX_Partnering_Agent_Code as "BOX/Partnering Agent Code"
							Include_Insurance as "Include Insurance"
							Value_of_Goods as "Value of Goods"
							Destination_Airport as "Destination Airport"
							Port_of_Loading as "Port of Loading"
							ETD
							Container_Movement_Type as "Container Movement Type"
							Annual_Revenue as "Annual Revenue"
							Photograph
							Email
							Lead_Source as "Lead Source"
							Cargo_Type as "Cargo Type"
							Groupage_Sub_Category as "Groupage Sub Category"
							Min_Temp_of_Refrigeration as "Min Temp. of Refrigeration"
							Lead_Expiration_Date as "Lead Expiration Date"
							Rotaion_Number as "Rotaion Number"
							Manifest_Registration_Number as "Manifest Registration Number"
							Container_Size as "Container Size"
							Place_of_Load as "Place of Load"
							Port_of_Discharge as "Port of Discharge"
							MFD_Required as "MFD Required"
							TRN
							Rating
							USED_OR_NEW_INDICATOR as "USED OR NEW INDICATOR"
							Dangerous_Goods_indicator as "Dangerous Goods indicator"
							Carrier_Vessel as "Carrier (Vessel)"
							Dangerous_Goods as "Dangerous Goods"
							Storage_request_for_Dangerous_Goods as "Storage request for Dangerous Goods"
							UN_Number as "UN Number"
							Voyage_Number as "Voyage Number"
							IMO_Class as "IMO Class"
							Storage_Request_Code as "Storage Request Code"
							General_Description as "General Description"
							Package_Code as "Package Code"
							Package_Description as "Package Description"
							Number_of_Package as "Number of Package"
							Street
							Country
							City
							Zip_Code as "Zip Code"
							State
							Shipper_Name as "Shipper Name"
							Shipper_City as "Shipper City"
							Shipper_Street as "Shipper Street"
							Shipper_Country as "Shipper Country"
							Shipper_State as "Shipper State"
							Shipper_Zip_Code as "Shipper Zip Code"
							Consignee_Name as "Consignee Name"
							Consignee_State as "Consignee State"
							Consignee_Street as "Consignee Street"
							Consignee_Zip_Code as "Consignee Zip Code"
							Consignee_City as "Consignee City"
							Consignee_Country as "Consignee Country"
							Description
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Accounts
		{
			displayName = "Accounts"
			show all rows from New_Account    
			(
				Image
				Account_Owner as "Account Owner"
				Account_Name as "Account Name"
				Rating
				Account_Site as "Account Site"
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Account_Number as "Account Number"
				Website
				Account_Type as "Account Type"
				Ticker_Symbol as "Ticker Symbol"
				Industry
				Ownership
				Annual_Revenue as "Annual Revenue"
				Employees
				SIC_Code as "SIC Code"
				Cargo_Type as "Cargo Type"
				Shipment_Terms as "Shipment Terms"
				Groupage_Sub_Category as "Groupage Sub Category"
				Freight_Prepaid_Collect as "Freight Prepaid / Collect"
				Billing_Street as "Billing Street"
				Shipping_Street as "Shipping Street"
				Billing_City as "Billing City"
				Billing_State as "Billing State"
				Billing_Code as "Billing Code"
				Billing_Country as "Billing Country"
				Shipping_City as "Shipping City"
				Shipping_State as "Shipping State"
				Shipping_Code as "Shipping Code"
				Shipping_Country as "Shipping Country"
				Description
				Lead_ID as "Lead ID"
				Zoho_Books_Customer_ID
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Image
							Account_Owner as "Account Owner"
							Account_Name as "Account Name"
							Rating
							Account_Site as "Account Site"
							Phone_Number as "Phone"
							Zoho_Books_Customer_ID
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
						layout type = -2
		     			title = "Overview"
						fields
						(
							Image
							Account_Owner as "Account Owner"
							Account_Name as "Account Name"
							Rating
							Account_Site as "Account Site"
							Phone_Number as "Phone"
							Account_Number as "Account Number"
							Website
							Account_Type as "Account Type"
							Ticker_Symbol as "Ticker Symbol"
							Industry
							Ownership
							Annual_Revenue as "Annual Revenue"
							Employees
							SIC_Code as "SIC Code"
							Cargo_Type as "Cargo Type"
							Shipment_Terms as "Shipment Terms"
							Groupage_Sub_Category as "Groupage Sub Category"
							Freight_Prepaid_Collect as "Freight Prepaid / Collect"
							Billing_Street as "Billing Street"
							Shipping_Street as "Shipping Street"
							Billing_City as "Billing City"
							Billing_State as "Billing State"
							Billing_Code as "Billing Code"
							Billing_Country as "Billing Country"
							Shipping_City as "Shipping City"
							Shipping_State as "Shipping State"
							Shipping_Code as "Shipping Code"
							Shipping_Country as "Shipping Country"
							Description
							Lead_ID as "Lead ID"
						)
					)
					datablock4
					(
						layout type = -1
		     			title = "Contacts"
		     			related field = New_Contact.Account_Name
						fields
						(
							Contact_Image as "Contact Image"
							Contact_Owner as "Contact Owner"
							Contact_Name as "Contact Name"
							Vendor
							Department
							Mobile
							Assistant_Phone as "Assistant Phone"
							Skype_ID as "Skype ID"
							Lead_ID as "Lead ID"
							Lead_Source as "Lead Source"
							Account_Name as "Account Name"
							Phone_Number as "Phone"
							Assistant
							Email_Opt_Out as "Email Opt Out"
							Twitter
							Mailing_Street as "Mailing Street"
							Mailing_City as "Mailing City"
							Mailing_State as "Mailing State"
							Mailing_Zip as "Mailing Zip"
							Mailing_Country as "Mailing Country"
							Other_Street as "Other Street"
							Other_City as "Other City"
							Other_State as "Other State"
							Other_Zip as "Other Zip"
							Other_Country as "Other Country"
							Description
						)
					)
					datablock5
					(
						layout type = -1
		     			title = "Deals"
		     			related field = New_Deal.Account_Name
						fields
						(
							Deal_Image as "Deal Image"
							Deal_Owner as "Deal Owner"
							Deal_Name as "Deal Name"
							Closing_Date as "Closing Date"
							Stage
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Freight_Prepaid_Collect as "Freight Prepaid / Collect"
							Max_Temp_of_Refrigeration as "Max Temp. of Refrigeration"
							Rotaion_Number as "Rotaion Number"
							Unit_of_Temperature as "Unit of Temperature"
							Include_Insurance as "Include Insurance"
							No_of_Container_Reqd as "No of Container Reqd."
							Gate_Way_Airport as "Gate Way Airport"
							Destination_Airport as "Destination Airport"
							Port_of_Loading as "Port of Loading"
							Incoterms
							TRN
							Reason_for_Loss as "Reason for Loss"
							DO_Valid_Till_Date as "DO Valid Till Date"
							Amount
							Account_Name as "Account Name"
							Type_field as "Type"
							Mode_of_Shipment as "Mode of Shipment"
							Groupage_Sub_Category as "Groupage Sub Category"
							Shipment_Terms as "Shipment Terms"
							Min_Temp_of_Refrigeration as "Min Temp. of Refrigeration"
							BOX_Partnering_Line_Code as "BOX / Partnering Line Code"
							Manifest_Registration_Number as "Manifest Registration Number"
							Slac_Indicator as "Slac Indicator"
							Container_Movement_Type as "Container Movement Type"
							Place_of_Delivery as "Place of Delivery"
							Place_of_Loading as "Place of Loading"
							Port_of_Discharge as "Port of Discharge"
							Category_of_Shipment as "Category of Shipment"
							Expected_Revenue as "Expected Revenue"
							Vendor_Quote_Received as "Vendor Quote Received"
							Lead_ID
							Job_Card_No as "Job Card No."
							Probability as "Probability (%)"
							If_Other_Industry_Pls_Specify as "If Other Industry Pls Specify"
							Cargo_Type as "Cargo Type"
							Lead_Expiration_Date as "Lead Expiration Date"
							Message_Type as "Message Type"
							Type_of_Container as "Type of Container"
							BOX_Partnering_Agent_Code as "BOX/Partnering Agent Code"
							Value_of_Goods as "Value of Goods"
							Container_Size as "Container Size"
							Is_Stackable as "Is Stackable ?"
							ETA
							ETD
							Photograph
							MFD_Required as "MFD Required"
							Free_Days as "Free Days"
							USED_OR_NEW_INDICATOR as "USED OR NEW INDICATOR"
							Dangerous_Goods_indicator as "Dangerous Goods indicator"
							Carrier_Vessel as "Carrier (Vessel)"
							Voyage_Number as "Voyage Number"
							Dangerous_Goods as "Dangerous Goods"
							Storage_request_for_Dangerous_Goods as "Storage request for Dangerous Goods"
							UN_Number as "UN Number"
							General_Description as "General Description"
							IMO_Class as "IMO Class"
							Storage_Request_Code as "Storage Request Code"
							Package_Code as "Package Code"
							Dimension
							Package_Description as "Package Description"
							Number_of_Package as "Number of Package"
							BOL_Issuance as "BOL Issuance"
							Container_Loaded_On_Vessel as "Container Loaded On Vessel"
							Mount_On_Truck as "Mount On Truck"
							Import_Customs_Clearance as "Import Customs Clearance"
							Customs_Release as "Customs Release"
							Gate_Appointment_For_Container_Pickup as "Gate Appointment For Container Pickup"
							Truck_Arrival_At_Customer_Facility as "Truck Arrival At Customer Facility"
							Rail_Arrival as "Rail Arrival"
							Vessel_Berthing as "Vessel Berthing"
							Container_Discharged_From_Vessel as "Container Discharged From Vessel"
							Container_In_Yard as "Container In Yard"
							Delivery_Order_Issuance as "Delivery Order Issuance"
							Terminal_Release as "Terminal Release"
							Empty_Container_Returned as "Empty Container Returned"
							Unloaded_From_Rail as "Unloaded From Rail"
							Vessel_Berth_Booking as "Vessel Berth Booking"
							Truck_Gate_Out as "Truck Gate Out"
							Payment_to_Ocean_Liner_Drayage_Vendor as "Payment to Ocean Liner & Drayage Vendor"
							Additional_Pay_to_Ocean_liner_Clear_Container as "Additional Pay to Ocean liner & Clear Container"
							Container_Destuffed as "Container Destuffed"
							Cargo_Acceptance as "Cargo Acceptance"
							Shipper_Name as "Shipper Name"
							Shipper_State as "Shipper State"
							Shipper_Street as "Shipper Street"
							Shipper_Zip_Code as "Shipper Zip Code"
							Shipper_City as "Shipper City"
							Shipper_Country as "Shipper Country"
							Consignee_Name as "Consignee Name"
							Consignee_State as "Consignee State"
							Consignee_Street as "Consignee Street"
							Consignee_Zip_Code as "Consignee Zip Code"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Contacts
		{
			displayName = "Contacts"
			show all rows from New_Contact    
			(
				Contact_Image as "Contact Image"
				Contact_Owner as "Contact Owner"
				Lead_Source as "Lead Source"
				Contact_Name  as "Contact Name"
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Vendor
				Email
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Department
				Mobile
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Assistant
				Assistant_Phone as "Assistant Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Email_Opt_Out as "Email Opt Out"
				Skype_ID as "Skype ID"
				Twitter
				Mailing_Street as "Mailing Street"
				Other_Street as "Other Street"
				Mailing_City as "Mailing City"
				Mailing_State as "Mailing State"
				Mailing_Zip as "Mailing Zip"
				Mailing_Country as "Mailing Country"
				Other_City as "Other City"
				Other_State as "Other State"
				Other_Zip as "Other Zip"
				Other_Country as "Other Country"
				Description
				Lead_ID as "Lead ID"
				Account_Name as "Account Name"
			)
			options
			(
				icon = "users-2-wc"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Contact_Image as "Contact Image"
							Contact_Owner as "Contact Owner"
							Lead_Source as "Lead Source"
							Contact_Name as "Contact Name"
							Vendor
							Email
							Account_Name as "Account Name"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Contact_Image as "Contact Image"
							Contact_Owner as "Contact Owner"
							Lead_Source as "Lead Source"
							Contact_Name as "Contact Name"
							Vendor
							Email
							Phone_Number as "Phone"
							Department
							Mobile
							Assistant
							Assistant_Phone as "Assistant Phone"
							Email_Opt_Out as "Email Opt Out"
							Skype_ID as "Skype ID"
							Twitter
							Mailing_Street as "Mailing Street"
							Other_Street as "Other Street"
							Mailing_City as "Mailing City"
							Mailing_State as "Mailing State"
							Mailing_Zip as "Mailing Zip"
							Mailing_Country as "Mailing Country"
							Other_City as "Other City"
							Other_State as "Other State"
							Other_Zip as "Other Zip"
							Other_Country as "Other Country"
							Description
							Lead_ID as "Lead ID"
							Account_Name as "Account Name"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Deals
		{
			displayName = "Deals"
			show all rows from New_Deal    
			(
				Deal_Owner as "Deal Owner"
				Amount
				Deal_Name as "Deal Name"
				Closing_Date as "Closing Date"
				Account_Name as "Account Name"
				Job_Card_No as "Job Card No."
				Stage
				Type_field as "Type"
				Probability as "Probability (%)"
				Mode_of_Shipment as "Mode of Shipment"
				If_Other_Industry_Pls_Specify as "If Other Industry Pls Specify"
				Sub_Mode_of_Shipment as "Sub Mode of Shipment"
				Groupage_Sub_Category as "Groupage Sub Category"
				Cargo_Type as "Cargo Type"
				Freight_Prepaid_Collect as "Freight Prepaid / Collect"
				Shipment_Terms as "Shipment Terms"
				Lead_Expiration_Date as "Lead Expiration Date"
				Max_Temp_of_Refrigeration as "Max Temp. of Refrigeration"
				Min_Temp_of_Refrigeration as "Min Temp. of Refrigeration"
				Message_Type as "Message Type"
				Rotaion_Number as "Rotaion Number"
				BOX_Partnering_Line_Code as "BOX / Partnering Line Code"
				Type_of_Container as "Type of Container"
				Unit_of_Temperature as "Unit of Temperature"
				Manifest_Registration_Number as "Manifest Registration Number"
				BOX_Partnering_Agent_Code as "BOX/Partnering Agent Code"
				Include_Insurance as "Include Insurance"
				Slac_Indicator as "Slac Indicator"
				Value_of_Goods as "Value of Goods"
				No_of_Container_Reqd as "No of Container Reqd."
				Container_Movement_Type as "Container Movement Type"
				Container_Size as "Container Size"
				Gate_Way_Airport as "Gate Way Airport"
				Place_of_Delivery as "Place of Delivery"
				Is_Stackable as "Is Stackable ?"
				Destination_Airport as "Destination Airport"
				Place_of_Loading as "Place of Loading"
				ETA
				Port_of_Loading as "Port of Loading"
				Port_of_Discharge as "Port of Discharge"
				ETD
				Incoterms
				Category_of_Shipment as "Category of Shipment"
				Photograph
				TRN
				Expected_Revenue as "Expected Revenue"
				MFD_Required as "MFD Required"
				Reason_for_Loss as "Reason for Loss"
				Vendor_Quote_Received as "Vendor Quote Received"
				Free_Days as "Free Days"
				DO_Valid_Till_Date as "DO Valid Till Date"
				USED_OR_NEW_INDICATOR as "USED OR NEW INDICATOR"
				Dangerous_Goods as "Dangerous Goods"
				IMO_Class as "IMO Class"
				Dangerous_Goods_indicator as "Dangerous Goods indicator"
				Storage_request_for_Dangerous_Goods as "Storage request for Dangerous Goods"
				Storage_Request_Code as "Storage Request Code"
				Carrier_Vessel as "Carrier (Vessel)"
				UN_Number as "UN Number"
				Voyage_Number as "Voyage Number"
				General_Description as "General Description"
				Deal_Image as "Deal Image"
				Package_Code as "Package Code"
				Package_Description as "Package Description"
				Number_of_Package as "Number of Package"
				Dimension
				BOL_Issuance as "BOL Issuance"
				Rail_Arrival as "Rail Arrival"
				Unloaded_From_Rail as "Unloaded From Rail"
				Container_Loaded_On_Vessel as "Container Loaded On Vessel"
				Vessel_Berthing as "Vessel Berthing"
				Vessel_Berth_Booking as "Vessel Berth Booking"
				Mount_On_Truck as "Mount On Truck"
				Container_Discharged_From_Vessel as "Container Discharged From Vessel"
				Truck_Gate_Out as "Truck Gate Out"
				Import_Customs_Clearance as "Import Customs Clearance"
				Container_In_Yard as "Container In Yard"
				Payment_to_Ocean_Liner_Drayage_Vendor as "Payment to Ocean Liner & Drayage Vendor"
				Customs_Release as "Customs Release"
				Delivery_Order_Issuance as "Delivery Order Issuance"
				Additional_Pay_to_Ocean_liner_Clear_Container as "Additional Pay to Ocean liner & Clear Container"
				Gate_Appointment_For_Container_Pickup as "Gate Appointment For Container Pickup"
				Terminal_Release as "Terminal Release"
				Container_Destuffed as "Container Destuffed"
				Truck_Arrival_At_Customer_Facility as "Truck Arrival At Customer Facility"
				Empty_Container_Returned as "Empty Container Returned"
				Cargo_Acceptance as "Cargo Acceptance"
				Shipper_Name as "Shipper Name"
				Shipper_Street as "Shipper Street"
				Shipper_City as "Shipper City"
				Shipper_State as "Shipper State"
				Shipper_Zip_Code as "Shipper Zip Code"
				Shipper_Country as "Shipper Country"
				Consignee_Name as "Consignee Name"
				Consignee_Street as "Consignee Street"
				Consignee_City as "Consignee City"
				Consignee_State as "Consignee State"
				Consignee_Zip_Code as "Consignee Zip Code"
				Consignee_Country as "Consignee Country"
				Description
				Auto_Number as "Auto Number"
				Lead_ID
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Deal_Owner as "Deal Owner"
							Amount
							Deal_Name as "Deal Name"
							Closing_Date as "Closing Date"
							Account_Name as "Account Name"
							Job_Card_No as "Job Card No."
							Deal_Image as "Deal Image"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
						layout type = -2
		     			title = "Overview"
						fields
						(
							Deal_Owner as "Deal Owner"
							Amount
							Deal_Name as "Deal Name"
							Closing_Date as "Closing Date"
							Account_Name as "Account Name"
							Job_Card_No as "Job Card No."
							Stage
							Type_field as "Type"
							Probability as "Probability (%)"
							Mode_of_Shipment as "Mode of Shipment"
							If_Other_Industry_Pls_Specify as "If Other Industry Pls Specify"
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Groupage_Sub_Category as "Groupage Sub Category"
							Cargo_Type as "Cargo Type"
							Freight_Prepaid_Collect as "Freight Prepaid / Collect"
							Shipment_Terms as "Shipment Terms"
							Lead_Expiration_Date as "Lead Expiration Date"
							Max_Temp_of_Refrigeration as "Max Temp. of Refrigeration"
							Min_Temp_of_Refrigeration as "Min Temp. of Refrigeration"
							Message_Type as "Message Type"
							Rotaion_Number as "Rotaion Number"
							BOX_Partnering_Line_Code as "BOX / Partnering Line Code"
							Type_of_Container as "Type of Container"
							Unit_of_Temperature as "Unit of Temperature"
							Manifest_Registration_Number as "Manifest Registration Number"
							BOX_Partnering_Agent_Code as "BOX/Partnering Agent Code"
							Include_Insurance as "Include Insurance"
							Slac_Indicator as "Slac Indicator"
							Value_of_Goods as "Value of Goods"
							No_of_Container_Reqd as "No of Container Reqd."
							Container_Movement_Type as "Container Movement Type"
							Container_Size as "Container Size"
							Gate_Way_Airport as "Gate Way Airport"
							Place_of_Delivery as "Place of Delivery"
							Is_Stackable as "Is Stackable ?"
							Destination_Airport as "Destination Airport"
							Place_of_Loading as "Place of Loading"
							ETA
							Port_of_Loading as "Port of Loading"
							Port_of_Discharge as "Port of Discharge"
							ETD
							Incoterms
							Category_of_Shipment as "Category of Shipment"
							Photograph
							TRN
							Expected_Revenue as "Expected Revenue"
							MFD_Required as "MFD Required"
							Reason_for_Loss as "Reason for Loss"
							Vendor_Quote_Received as "Vendor Quote Received"
							Free_Days as "Free Days"
							DO_Valid_Till_Date as "DO Valid Till Date"
							USED_OR_NEW_INDICATOR as "USED OR NEW INDICATOR"
							Dangerous_Goods as "Dangerous Goods"
							IMO_Class as "IMO Class"
							Dangerous_Goods_indicator as "Dangerous Goods indicator"
							Storage_request_for_Dangerous_Goods as "Storage request for Dangerous Goods"
							Storage_Request_Code as "Storage Request Code"
							Carrier_Vessel as "Carrier (Vessel)"
							UN_Number as "UN Number"
							Voyage_Number as "Voyage Number"
							General_Description as "General Description"
							Deal_Image as "Deal Image"
							Package_Code as "Package Code"
							Package_Description as "Package Description"
							Number_of_Package as "Number of Package"
							Dimension
							BOL_Issuance as "BOL Issuance"
							Rail_Arrival as "Rail Arrival"
							Unloaded_From_Rail as "Unloaded From Rail"
							Container_Loaded_On_Vessel as "Container Loaded On Vessel"
							Vessel_Berthing as "Vessel Berthing"
							Vessel_Berth_Booking as "Vessel Berth Booking"
							Mount_On_Truck as "Mount On Truck"
							Container_Discharged_From_Vessel as "Container Discharged From Vessel"
							Truck_Gate_Out as "Truck Gate Out"
							Import_Customs_Clearance as "Import Customs Clearance"
							Container_In_Yard as "Container In Yard"
							Payment_to_Ocean_Liner_Drayage_Vendor as "Payment to Ocean Liner & Drayage Vendor"
							Customs_Release as "Customs Release"
							Delivery_Order_Issuance as "Delivery Order Issuance"
							Additional_Pay_to_Ocean_liner_Clear_Container as "Additional Pay to Ocean liner & Clear Container"
							Gate_Appointment_For_Container_Pickup as "Gate Appointment For Container Pickup"
							Terminal_Release as "Terminal Release"
							Container_Destuffed as "Container Destuffed"
							Truck_Arrival_At_Customer_Facility as "Truck Arrival At Customer Facility"
							Empty_Container_Returned as "Empty Container Returned"
							Cargo_Acceptance as "Cargo Acceptance"
							Shipper_Name as "Shipper Name"
							Shipper_Street as "Shipper Street"
							Shipper_City as "Shipper City"
							Shipper_State as "Shipper State"
							Shipper_Zip_Code as "Shipper Zip Code"
							Shipper_Country as "Shipper Country"
							Consignee_Name as "Consignee Name"
							Consignee_Street as "Consignee Street"
							Consignee_City as "Consignee City"
							Consignee_State as "Consignee State"
							Consignee_Zip_Code as "Consignee Zip Code"
							Consignee_Country as "Consignee Country"
							Description
							Auto_Number as "Auto Number"
							Lead_ID
						)
					)
					datablock2
					(
						layout type = -2
		     			title = "Deal Owner"
		     			related field = Deal_Owner
						fields
						(
							User_Name as "User Name"
							Email
						)
					)
					datablock4
					(
						layout type = -1
		     			title = "New_Quotation"
		     			related field = New_Quotation.Deal_Name
						fields
						(
							Quote_Owner as "Quote Owner"
							Deal_Name as "Deal Name"
							Mode_of_Shipment as "Mode of Shipment"
							Cargo_Type as "Cargo Type"
							Quote_Stage as "Quote Stage"
							Quote_Number as "Quote Number"
							Start_Date as "Start Date"
							Account_Name as "Account Name"
							Contact_Name as "Contact Name"
							Subject_field as "Subject"
							Valid_Untill as "Valid Untill"
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							If_Other_Transactions_Pls_Specify as "If Other Transactions Pls Specify"
							Pickup_Street as "Pickup Street"
							Pickup_Zip_Code as "Pickup Zip Code"
							Pickup_City as "Pickup City"
							Pickup_Country as "Pickup Country"
							Pickup_State as "Pickup State"
							Billing_Street as "Billing Street"
							Billing_City as "Billing City"
							Billing_State as "Billing State"
							Billing_Code as "Billing Code"
							Billing_Country1 as "Billing Country"
							Shipping_Street as "Shipping Street"
							Shipping_Street1 as "Shipping Street"
							Shipping_State as "Shipping State"
							Shipping_Code as "Shipping Code"
							Shipping_Country as "Shipping Country"
							Port_of_Loading as "Port of Loading"
							Incoterms
							Port_of_Discharge as "Port of Discharge"
							Movement_Type as "Movement Type"
							Width_of_Cargo_cm as "Width of Cargo (cm)"
							Number_of_Packages as "Number of Packages"
							Chargeable_Weight_KG as "Chargeable Weight (KG)"
							Length_of_Cargo_cm as "Length of Cargo (cm)"
							Volume_CBM as "Volume (CBM)"
							Description_of_Goods as "Description of Goods"
							Height_of_Cargo_cm as "Height of Cargo (cm)"
							Gross_Weight_KG as "Gross Weight (KG)"
							HS_Code as "HS Code"
							Sub_Total as "Sub Total"
							Tax_Total as "Tax Total"
							Grand_Total as "Grand Total"
							Zoho_Books_Quote_ID
						)
					)
					datablock6
					(
						layout type = -1
		     			title = "New_Delivery_Order"
		     			related field = New_Delivery_Order.Deal_Name
						fields
						(
							Delivery_Order_Owner as "Delivery Order Owner"
							Deal_Name as "Deal Name"
							Quote_Number as "Quote Number"
							MB_L_No as "MB/L No."
							Pending
							Sales_Commission as "Sales Commission"
							ETD
							Mode_of_Shipment as "Mode of Shipment"
							Shipment_Type as "Shipment Type"
							Pickup_Street as "Pickup Street"
							Movement_Type as "Movement Type"
							Length_of_Cargo_cm as "Length of Cargo (cm)"
							Volume_CBM as "Volume (CBM)"
							Notify_Party_1 as "Notify Party 1"
							Delivery as "Delivery Order Number"
							SO_Nu as "SO Number"
							Customer_No as "Customer No."
							Due_Date as "Due Date"
							MM_No as "MM No."
							Excise_Duty as "Excise Duty"
							If_Other_Transactions_Pls_Specify as "If Other Transactions Pls Specify"
							No_of_Container_Reqd as "No of Container Reqd"
							Pickup_State as "Pickup State"
							Pickup_City as "Pickup City"
							Pickup_Country as "Pickup Country"
							Incoterms
							Number_of_Packages as "Number of Packages"
							Description_of_Goods as "Description of Goods"
							Agent_Name as "Agent Name"
							Subject_field as "Subject"
							Purchase_Order as "Purchase Order"
							BL_No as "BL No."
							Contact_Name as "Contact Name"
							Status
							Account_Name as "Account Name"
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Cargo_Type as "Cargo Type"
							Pickup_Zip_Code as "Pickup Zip Code"
							Width_of_Cargo_cm as "Width of Cargo (cm)"
							Height_of_Cargo_cm as "Height of Cargo (cm)"
							Gross_Weight_KG as "Gross Weight (KG)"
							Chargeable_Weight_KG as "Chargeable Weight (KG)"
							Billing_Street as "Billing Street"
							Billing_City as "Billing City"
							Billing_State as "Billing State"
							Billing_Code as "Billing Code"
							Billing_Country as "Billing Country"
							Shipping_Street as "Shipping Street"
							Shipping_City as "Shipping City"
							Shipping_State as "Shipping State"
							Shipping_Code as "Shipping Code"
							Shipping_Country as "Shipping Country"
							Sub_Total as "Sub Total"
							Tax_Total as "Tax Total"
							Grand_Total as "Grand Total"
							Terms_and_Conditions2 as "Terms and Conditions"
							Description
						)
					)
					datablock9
					(
						layout type = -1
		     			title = "New_Invoice"
		     			related field = New_Invoice.Deal_Name
						fields
						(
							Invoice_Owner as "Invoice Owner"
							Delivery_Order as "Delivery Order"
							Due_Date as "Due Date"
							Deal_Name as "Deal Name"
							Contact_Name as "Contact Name"
							Invoice_Number as "Invoice Number"
							Invoice_Date as "Invoice Date"
							Excise_Duty as "Excise Duty"
							Account_Name as "Account Name"
							Mode_of_Shipment as "Mode of Shipment"
							Subject_field as "Subject"
							Purchase_Order as "Purchase Order"
							Sales_Commission as "Sales Commission"
							Status
							Billing_Street as "Billing Street"
							Billing_City as "Billing City"
							Billing_State as "Billing State"
							Billing_Code as "Billing Code"
							Billing_Country as "Billing Country"
							Shipping_Street as "Shipping Street"
							Shipping_City as "Shipping City"
							Shipping_State as "Shipping State"
							Shipping_Code as "Shipping Code"
							Shipping_Country as "Shipping Country"
							Sub_Total as "Sub Total"
							Tax_Total as "Tax Total"
							Grand_Total as "Grand Total"
							Terms_and_Conditions2 as "Terms and Conditions"
							Description
							Zoho_Books_Invoice_ID
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Quotations
		{
			displayName = "Quotations"
			show all rows from New_Quotation    
			(
				Quote_Owner as "Quote Owner"
				Subject_field as "Subject"
				Deal_Name as "Deal Name"
				Start_Date as "Start Date"
				Valid_Untill as "Valid Untill"
				Account_Name as "Account Name"
				If_Other_Transactions_Pls_Specify as "If Other Transactions Pls Specify"
				Quote_Stage as "Quote Stage"
				Contact_Name as "Contact Name"
				Pickup_Street as "Pickup Street"
				Pickup_City as "Pickup City"
				Pickup_State as "Pickup State"
				Pickup_Zip_Code as "Pickup Zip Code"
				Pickup_Country as "Pickup Country"
				Billing_City as "Billing City"
				Shipping_Street as "Shipping Street"
				Billing_Street as "Billing Street"
				Billing_State as "Billing State"
				Billing_Code as "Billing Code"
				Billing_Country1 as "Billing Country"
				Shipping_Street1 as "Shipping Street"
				Shipping_State as "Shipping State"
				Shipping_Code as "Shipping Code"
				Shipping_Country as "Shipping Country"
				Port_of_Loading as "Port of Loading"
				Port_of_Discharge as "Port of Discharge"
				Movement_Type as "Movement Type"
				Incoterms
				Width_of_Cargo_cm as "Width of Cargo (cm)"
				Length_of_Cargo_cm as "Length of Cargo (cm)"
				Height_of_Cargo_cm as "Height of Cargo (cm)"
				Number_of_Packages as "Number of Packages"
				Volume_CBM as "Volume (CBM)"
				Gross_Weight_KG as "Gross Weight (KG)"
				Chargeable_Weight_KG as "Chargeable Weight (KG)"
				Description_of_Goods as "Description of Goods"
				HS_Code as "HS Code"
				Quoted_Items.Product_Name as "Quoted Items"
				Zoho_Books_Quote_ID
				Sub_Total as "Sub Total"
				Tax_Total as "Tax Total"
				Grand_Total as "Grand Total"
				Quote_Number as "Quote Number"
				Mode_of_Shipment as "Mode of Shipment"
				Sub_Mode_of_Shipment as "Sub Mode of Shipment"
				Cargo_Type as "Cargo Type"
				ETD
				ETA
			)
			options
			(
				icon = "text-quote"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Quote_Owner as "Quote Owner"
							Subject_field as "Subject"
							Deal_Name as "Deal Name"
							Start_Date as "Start Date"
							Valid_Untill as "Valid Untill"
							Quote_Number as "Quote Number"
							Mode_of_Shipment as "Mode of Shipment"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
						layout type = -2
		     			title = "Overview"
						fields
						(
							Quote_Owner as "Quote Owner"
							Subject_field as "Subject"
							Deal_Name as "Deal Name"
							Start_Date as "Start Date"
							Valid_Untill as "Valid Untill"
							Account_Name as "Account Name"
							If_Other_Transactions_Pls_Specify as "If Other Transactions Pls Specify"
							Quote_Stage as "Quote Stage"
							Contact_Name as "Contact Name"
							Pickup_Street as "Pickup Street"
							Pickup_City as "Pickup City"
							Pickup_State as "Pickup State"
							Pickup_Zip_Code as "Pickup Zip Code"
							Pickup_Country as "Pickup Country"
							Billing_City as "Billing City"
							Shipping_Street as "Shipping Street"
							Billing_Street as "Billing Street"
							Billing_State as "Billing State"
							Billing_Code as "Billing Code"
							Billing_Country1 as "Billing Country"
							Shipping_Street1 as "Shipping Street"
							Shipping_State as "Shipping State"
							Shipping_Code as "Shipping Code"
							Shipping_Country as "Shipping Country"
							Port_of_Loading as "Port of Loading"
							Port_of_Discharge as "Port of Discharge"
							Movement_Type as "Movement Type"
							Incoterms
							Width_of_Cargo_cm as "Width of Cargo (cm)"
							Length_of_Cargo_cm as "Length of Cargo (cm)"
							Height_of_Cargo_cm as "Height of Cargo (cm)"
							Number_of_Packages as "Number of Packages"
							Volume_CBM as "Volume (CBM)"
							Gross_Weight_KG as "Gross Weight (KG)"
							Chargeable_Weight_KG as "Chargeable Weight (KG)"
							Description_of_Goods as "Description of Goods"
							HS_Code as "HS Code"
							Quoted_Items.Product_Name as "Quoted Items"
							Zoho_Books_Quote_ID
							Sub_Total as "Sub Total"
							Tax_Total as "Tax Total"
							Grand_Total as "Grand Total"
							Quote_Number as "Quote Number"
							Mode_of_Shipment as "Mode of Shipment"
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Cargo_Type as "Cargo Type"
							ETD
							ETA
						)
					)
					datablock2
					(
						layout type = -2
		     			title = "Quote Owner"
		     			related field = Quote_Owner
						fields
						(
							User_Name as "User Name"
							Email
						)
					)
					datablock3
					(
						layout type = -2
		     			title = "Deal Name"
		     			related field = Deal_Name
						fields
						(
							Deal_Image as "Deal Image"
							Deal_Owner as "Deal Owner"
							Closing_Date as "Closing Date"
							Stage
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Freight_Prepaid_Collect as "Freight Prepaid / Collect"
							Max_Temp_of_Refrigeration as "Max Temp. of Refrigeration"
							Rotaion_Number as "Rotaion Number"
							Unit_of_Temperature as "Unit of Temperature"
							Include_Insurance as "Include Insurance"
							No_of_Container_Reqd as "No of Container Reqd."
							Gate_Way_Airport as "Gate Way Airport"
							Destination_Airport as "Destination Airport"
							Port_of_Loading as "Port of Loading"
							Incoterms
							TRN
							Reason_for_Loss as "Reason for Loss"
							DO_Valid_Till_Date as "DO Valid Till Date"
							Amount
							Account_Name as "Account Name"
							Type_field as "Type"
							Mode_of_Shipment as "Mode of Shipment"
							Groupage_Sub_Category as "Groupage Sub Category"
							Shipment_Terms as "Shipment Terms"
							Min_Temp_of_Refrigeration as "Min Temp. of Refrigeration"
							BOX_Partnering_Line_Code as "BOX / Partnering Line Code"
							Manifest_Registration_Number as "Manifest Registration Number"
							Slac_Indicator as "Slac Indicator"
							Container_Movement_Type as "Container Movement Type"
							Place_of_Delivery as "Place of Delivery"
							Place_of_Loading as "Place of Loading"
							Port_of_Discharge as "Port of Discharge"
							Category_of_Shipment as "Category of Shipment"
							Expected_Revenue as "Expected Revenue"
							Vendor_Quote_Received as "Vendor Quote Received"
							Lead_ID
							Deal_Name as "Deal Name"
							Job_Card_No as "Job Card No."
							Probability as "Probability (%)"
							If_Other_Industry_Pls_Specify as "If Other Industry Pls Specify"
							Cargo_Type as "Cargo Type"
							Lead_Expiration_Date as "Lead Expiration Date"
							Message_Type as "Message Type"
							Type_of_Container as "Type of Container"
							BOX_Partnering_Agent_Code as "BOX/Partnering Agent Code"
							Value_of_Goods as "Value of Goods"
							Container_Size as "Container Size"
							Is_Stackable as "Is Stackable ?"
							ETA
							ETD
							Photograph
							MFD_Required as "MFD Required"
							Free_Days as "Free Days"
							USED_OR_NEW_INDICATOR as "USED OR NEW INDICATOR"
							Dangerous_Goods_indicator as "Dangerous Goods indicator"
							Carrier_Vessel as "Carrier (Vessel)"
							Voyage_Number as "Voyage Number"
							Dangerous_Goods as "Dangerous Goods"
							Storage_request_for_Dangerous_Goods as "Storage request for Dangerous Goods"
							UN_Number as "UN Number"
							General_Description as "General Description"
							IMO_Class as "IMO Class"
							Storage_Request_Code as "Storage Request Code"
							Package_Code as "Package Code"
							Dimension
							Package_Description as "Package Description"
							Number_of_Package as "Number of Package"
							BOL_Issuance as "BOL Issuance"
							Container_Loaded_On_Vessel as "Container Loaded On Vessel"
							Mount_On_Truck as "Mount On Truck"
							Import_Customs_Clearance as "Import Customs Clearance"
							Customs_Release as "Customs Release"
							Gate_Appointment_For_Container_Pickup as "Gate Appointment For Container Pickup"
							Truck_Arrival_At_Customer_Facility as "Truck Arrival At Customer Facility"
							Rail_Arrival as "Rail Arrival"
							Vessel_Berthing as "Vessel Berthing"
							Container_Discharged_From_Vessel as "Container Discharged From Vessel"
							Container_In_Yard as "Container In Yard"
							Delivery_Order_Issuance as "Delivery Order Issuance"
							Terminal_Release as "Terminal Release"
							Empty_Container_Returned as "Empty Container Returned"
							Unloaded_From_Rail as "Unloaded From Rail"
							Vessel_Berth_Booking as "Vessel Berth Booking"
							Truck_Gate_Out as "Truck Gate Out"
							Payment_to_Ocean_Liner_Drayage_Vendor as "Payment to Ocean Liner & Drayage Vendor"
							Additional_Pay_to_Ocean_liner_Clear_Container as "Additional Pay to Ocean liner & Clear Container"
							Container_Destuffed as "Container Destuffed"
							Cargo_Acceptance as "Cargo Acceptance"
							Shipper_Name as "Shipper Name"
							Shipper_State as "Shipper State"
							Shipper_Street as "Shipper Street"
							Shipper_Zip_Code as "Shipper Zip Code"
							Shipper_City as "Shipper City"
							Shipper_Country as "Shipper Country"
							Consignee_Name as "Consignee Name"
							Consignee_State as "Consignee State"
							Consignee_Street as "Consignee Street"
							Consignee_Zip_Code as "Consignee Zip Code"
						)
					)
					datablock4
					(
						layout type = -1
		     			title = "New_Delivery_Order"
		     			related field = New_Delivery_Order.Quote_Number
						fields
						(
							Delivery_Order_Owner as "Delivery Order Owner"
							Deal_Name as "Deal Name"
							Quote_Number as "Quote Number"
							MB_L_No as "MB/L No."
							Pending
							Sales_Commission as "Sales Commission"
							ETD
							Mode_of_Shipment as "Mode of Shipment"
							Shipment_Type as "Shipment Type"
							Pickup_Street as "Pickup Street"
							Movement_Type as "Movement Type"
							Length_of_Cargo_cm as "Length of Cargo (cm)"
							Volume_CBM as "Volume (CBM)"
							Notify_Party_1 as "Notify Party 1"
							Delivery as "Delivery Order Number"
							SO_Nu as "SO Number"
							Customer_No as "Customer No."
							Due_Date as "Due Date"
							MM_No as "MM No."
							Excise_Duty as "Excise Duty"
							If_Other_Transactions_Pls_Specify as "If Other Transactions Pls Specify"
							No_of_Container_Reqd as "No of Container Reqd"
							Pickup_State as "Pickup State"
							Pickup_City as "Pickup City"
							Pickup_Country as "Pickup Country"
							Incoterms
							Number_of_Packages as "Number of Packages"
							Description_of_Goods as "Description of Goods"
							Agent_Name as "Agent Name"
							Subject_field as "Subject"
							Purchase_Order as "Purchase Order"
							BL_No as "BL No."
							Contact_Name as "Contact Name"
							Status
							Account_Name as "Account Name"
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Cargo_Type as "Cargo Type"
							Pickup_Zip_Code as "Pickup Zip Code"
							Width_of_Cargo_cm as "Width of Cargo (cm)"
							Height_of_Cargo_cm as "Height of Cargo (cm)"
							Gross_Weight_KG as "Gross Weight (KG)"
							Chargeable_Weight_KG as "Chargeable Weight (KG)"
							Billing_Street as "Billing Street"
							Billing_City as "Billing City"
							Billing_State as "Billing State"
							Billing_Code as "Billing Code"
							Billing_Country as "Billing Country"
							Shipping_Street as "Shipping Street"
							Shipping_City as "Shipping City"
							Shipping_State as "Shipping State"
							Shipping_Code as "Shipping Code"
							Shipping_Country as "Shipping Country"
							Sub_Total as "Sub Total"
							Tax_Total as "Tax Total"
							Grand_Total as "Grand Total"
							Terms_and_Conditions2 as "Terms and Conditions"
							Description
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Delivery_Orders
		{
			displayName = "Delivery Orders"
			show all rows from New_Delivery_Order    
			(
				Delivery_Order_Owner as "Delivery Order Owner"
				SO_Nu as "SO Number"
				Subject_field as "Subject"
				Deal_Name as "Deal Name"
				Customer_No as "Customer No."
				Purchase_Order as "Purchase Order"
				Quote_Number as "Quote Number"
				Due_Date as "Due Date"
				BL_No as "BL No."
				MB_L_No as "MB/L No."
				MM_No as "MM No."
				Contact_Name as "Contact Name"
				Pending
				Excise_Duty as "Excise Duty"
				Status
				Sales_Commission as "Sales Commission"
				If_Other_Transactions_Pls_Specify as "If Other Transactions Pls Specify"
				Account_Name as "Account Name"
				ETD
				No_of_Container_Reqd as "No of Container Reqd"
				Sub_Mode_of_Shipment as "Sub Mode of Shipment"
				Mode_of_Shipment as "Mode of Shipment"
				Pickup_State as "Pickup State"
				Cargo_Type as "Cargo Type"
				Shipment_Type as "Shipment Type"
				Pickup_City as "Pickup City"
				Pickup_Zip_Code as "Pickup Zip Code"
				Pickup_Street as "Pickup Street"
				Pickup_Country as "Pickup Country"
				Width_of_Cargo_cm as "Width of Cargo (cm)"
				Movement_Type as "Movement Type"
				Incoterms
				Height_of_Cargo_cm as "Height of Cargo (cm)"
				Length_of_Cargo_cm as "Length of Cargo (cm)"
				Number_of_Packages as "Number of Packages"
				Gross_Weight_KG as "Gross Weight (KG)"
				Volume_CBM as "Volume (CBM)"
				Description_of_Goods as "Description of Goods"
				Chargeable_Weight_KG as "Chargeable Weight (KG)"
				Notify_Party_1 as "Notify Party 1"
				Agent_Name as "Agent Name"
				Billing_Street as "Billing Street"
				Shipping_Street as "Shipping Street"
				Billing_City as "Billing City"
				Billing_State as "Billing State"
				Billing_Code as "Billing Code"
				Billing_Country as "Billing Country"
				Shipping_City as "Shipping City"
				Shipping_State as "Shipping State"
				Shipping_Code as "Shipping Code"
				Shipping_Country as "Shipping Country"
				Ordered_Items.Product_Name as "Ordered Items"
				Sub_Total as "Sub Total"
				Tax_Total as "Tax Total"
				Grand_Total as "Grand Total"
				Terms_and_Conditions2 as "Terms and Conditions"
				Description
				Delivery as "Delivery Order Number"
			)
			options
			(
				icon = "shopping-delivery-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Delivery_Order_Owner as "Delivery Order Owner"
							SO_Nu as "SO Number"
							Subject_field as "Subject"
							Deal_Name as "Deal Name"
							Customer_No as "Customer No."
							Purchase_Order as "Purchase Order"
							Quote_Number as "Quote Number"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
						layout type = -2
		     			title = "Overview"
						fields
						(
							Delivery_Order_Owner as "Delivery Order Owner"
							SO_Nu as "SO Number"
							Subject_field as "Subject"
							Deal_Name as "Deal Name"
							Customer_No as "Customer No."
							Purchase_Order as "Purchase Order"
							Quote_Number as "Quote Number"
							Due_Date as "Due Date"
							BL_No as "BL No."
							MB_L_No as "MB/L No."
							MM_No as "MM No."
							Contact_Name as "Contact Name"
							Pending
							Excise_Duty as "Excise Duty"
							Status
							Sales_Commission as "Sales Commission"
							If_Other_Transactions_Pls_Specify as "If Other Transactions Pls Specify"
							Account_Name as "Account Name"
							ETD
							No_of_Container_Reqd as "No of Container Reqd"
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Mode_of_Shipment as "Mode of Shipment"
							Pickup_State as "Pickup State"
							Cargo_Type as "Cargo Type"
							Shipment_Type as "Shipment Type"
							Pickup_City as "Pickup City"
							Pickup_Zip_Code as "Pickup Zip Code"
							Pickup_Street as "Pickup Street"
							Pickup_Country as "Pickup Country"
							Width_of_Cargo_cm as "Width of Cargo (cm)"
							Movement_Type as "Movement Type"
							Incoterms
							Height_of_Cargo_cm as "Height of Cargo (cm)"
							Length_of_Cargo_cm as "Length of Cargo (cm)"
							Number_of_Packages as "Number of Packages"
							Gross_Weight_KG as "Gross Weight (KG)"
							Volume_CBM as "Volume (CBM)"
							Description_of_Goods as "Description of Goods"
							Chargeable_Weight_KG as "Chargeable Weight (KG)"
							Notify_Party_1 as "Notify Party 1"
							Agent_Name as "Agent Name"
							Billing_Street as "Billing Street"
							Shipping_Street as "Shipping Street"
							Billing_City as "Billing City"
							Billing_State as "Billing State"
							Billing_Code as "Billing Code"
							Billing_Country as "Billing Country"
							Shipping_City as "Shipping City"
							Shipping_State as "Shipping State"
							Shipping_Code as "Shipping Code"
							Shipping_Country as "Shipping Country"
							Ordered_Items.Product_Name as "Ordered Items"
							Sub_Total as "Sub Total"
							Tax_Total as "Tax Total"
							Grand_Total as "Grand Total"
							Terms_and_Conditions2 as "Terms and Conditions"
							Description
							Delivery as "Delivery Order Number"
						)
					)
					datablock2
					(
						layout type = -2
		     			title = "Delivery Order Owner"
		     			related field = Delivery_Order_Owner
						fields
						(
							User_Name as "User Name"
							Email
						)
					)
					datablock3
					(
						layout type = -2
		     			title = "Deal Name"
		     			related field = Deal_Name
						fields
						(
							Deal_Image as "Deal Image"
							Deal_Owner as "Deal Owner"
							Closing_Date as "Closing Date"
							Stage
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Freight_Prepaid_Collect as "Freight Prepaid / Collect"
							Max_Temp_of_Refrigeration as "Max Temp. of Refrigeration"
							Rotaion_Number as "Rotaion Number"
							Unit_of_Temperature as "Unit of Temperature"
							Include_Insurance as "Include Insurance"
							No_of_Container_Reqd as "No of Container Reqd."
							Gate_Way_Airport as "Gate Way Airport"
							Destination_Airport as "Destination Airport"
							Port_of_Loading as "Port of Loading"
							Incoterms
							TRN
							Reason_for_Loss as "Reason for Loss"
							DO_Valid_Till_Date as "DO Valid Till Date"
							Amount
							Account_Name as "Account Name"
							Type_field as "Type"
							Mode_of_Shipment as "Mode of Shipment"
							Groupage_Sub_Category as "Groupage Sub Category"
							Shipment_Terms as "Shipment Terms"
							Min_Temp_of_Refrigeration as "Min Temp. of Refrigeration"
							BOX_Partnering_Line_Code as "BOX / Partnering Line Code"
							Manifest_Registration_Number as "Manifest Registration Number"
							Slac_Indicator as "Slac Indicator"
							Container_Movement_Type as "Container Movement Type"
							Place_of_Delivery as "Place of Delivery"
							Place_of_Loading as "Place of Loading"
							Port_of_Discharge as "Port of Discharge"
							Category_of_Shipment as "Category of Shipment"
							Expected_Revenue as "Expected Revenue"
							Vendor_Quote_Received as "Vendor Quote Received"
							Lead_ID
							Deal_Name as "Deal Name"
							Job_Card_No as "Job Card No."
							Probability as "Probability (%)"
							If_Other_Industry_Pls_Specify as "If Other Industry Pls Specify"
							Cargo_Type as "Cargo Type"
							Lead_Expiration_Date as "Lead Expiration Date"
							Message_Type as "Message Type"
							Type_of_Container as "Type of Container"
							BOX_Partnering_Agent_Code as "BOX/Partnering Agent Code"
							Value_of_Goods as "Value of Goods"
							Container_Size as "Container Size"
							Is_Stackable as "Is Stackable ?"
							ETA
							ETD
							Photograph
							MFD_Required as "MFD Required"
							Free_Days as "Free Days"
							USED_OR_NEW_INDICATOR as "USED OR NEW INDICATOR"
							Dangerous_Goods_indicator as "Dangerous Goods indicator"
							Carrier_Vessel as "Carrier (Vessel)"
							Voyage_Number as "Voyage Number"
							Dangerous_Goods as "Dangerous Goods"
							Storage_request_for_Dangerous_Goods as "Storage request for Dangerous Goods"
							UN_Number as "UN Number"
							General_Description as "General Description"
							IMO_Class as "IMO Class"
							Storage_Request_Code as "Storage Request Code"
							Package_Code as "Package Code"
							Dimension
							Package_Description as "Package Description"
							Number_of_Package as "Number of Package"
							BOL_Issuance as "BOL Issuance"
							Container_Loaded_On_Vessel as "Container Loaded On Vessel"
							Mount_On_Truck as "Mount On Truck"
							Import_Customs_Clearance as "Import Customs Clearance"
							Customs_Release as "Customs Release"
							Gate_Appointment_For_Container_Pickup as "Gate Appointment For Container Pickup"
							Truck_Arrival_At_Customer_Facility as "Truck Arrival At Customer Facility"
							Rail_Arrival as "Rail Arrival"
							Vessel_Berthing as "Vessel Berthing"
							Container_Discharged_From_Vessel as "Container Discharged From Vessel"
							Container_In_Yard as "Container In Yard"
							Delivery_Order_Issuance as "Delivery Order Issuance"
							Terminal_Release as "Terminal Release"
							Empty_Container_Returned as "Empty Container Returned"
							Unloaded_From_Rail as "Unloaded From Rail"
							Vessel_Berth_Booking as "Vessel Berth Booking"
							Truck_Gate_Out as "Truck Gate Out"
							Payment_to_Ocean_Liner_Drayage_Vendor as "Payment to Ocean Liner & Drayage Vendor"
							Additional_Pay_to_Ocean_liner_Clear_Container as "Additional Pay to Ocean liner & Clear Container"
							Container_Destuffed as "Container Destuffed"
							Cargo_Acceptance as "Cargo Acceptance"
							Shipper_Name as "Shipper Name"
							Shipper_State as "Shipper State"
							Shipper_Street as "Shipper Street"
							Shipper_Zip_Code as "Shipper Zip Code"
							Shipper_City as "Shipper City"
							Shipper_Country as "Shipper Country"
							Consignee_Name as "Consignee Name"
							Consignee_State as "Consignee State"
							Consignee_Street as "Consignee Street"
							Consignee_Zip_Code as "Consignee Zip Code"
						)
					)
					datablock4
					(
						layout type = -1
		     			title = "New_Invoice"
		     			related field = New_Invoice.Delivery_Order
						fields
						(
							Invoice_Owner as "Invoice Owner"
							Delivery_Order as "Delivery Order"
							Due_Date as "Due Date"
							Deal_Name as "Deal Name"
							Contact_Name as "Contact Name"
							Invoice_Number as "Invoice Number"
							Invoice_Date as "Invoice Date"
							Excise_Duty as "Excise Duty"
							Account_Name as "Account Name"
							Mode_of_Shipment as "Mode of Shipment"
							Subject_field as "Subject"
							Purchase_Order as "Purchase Order"
							Sales_Commission as "Sales Commission"
							Status
							Billing_Street as "Billing Street"
							Billing_City as "Billing City"
							Billing_State as "Billing State"
							Billing_Code as "Billing Code"
							Billing_Country as "Billing Country"
							Shipping_Street as "Shipping Street"
							Shipping_City as "Shipping City"
							Shipping_State as "Shipping State"
							Shipping_Code as "Shipping Code"
							Shipping_Country as "Shipping Country"
							Sub_Total as "Sub Total"
							Tax_Total as "Tax Total"
							Grand_Total as "Grand Total"
							Terms_and_Conditions2 as "Terms and Conditions"
							Description
							Zoho_Books_Invoice_ID
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Invoices
		{
			displayName = "Invoices"
			show all rows from New_Invoice    
			(
				Invoice_Owner as "Invoice Owner"
				Subject_field as "Subject"
				Delivery_Order as "Delivery Order"
				Invoice_Date as "Invoice Date"
				Purchase_Order as "Purchase Order"
				Due_Date as "Due Date"
				Excise_Duty as "Excise Duty"
				Sales_Commission as "Sales Commission"
				Deal_Name as "Deal Name"
				Account_Name as "Account Name"
				Status
				Contact_Name as "Contact Name"
				Mode_of_Shipment as "Mode of Shipment"
				Billing_Street as "Billing Street"
				Shipping_Street as "Shipping Street"
				Billing_City as "Billing City"
				Billing_Country as "Billing Country"
				Billing_State as "Billing State"
				Billing_Code as "Billing Code"
				Shipping_City as "Shipping City"
				Shipping_State as "Shipping State"
				Shipping_Code as "Shipping Code"
				Shipping_Country as "Shipping Country"
				Invoiced_Items.Product_Name as "Invoiced Items"
				Sub_Total as "Sub Total"
				Tax_Total as "Tax Total"
				Grand_Total as "Grand Total"
				Terms_and_Conditions2 as "Terms and Conditions"
				Description
				Zoho_Books_Invoice_ID
				Invoice_Number as "Invoice Number"
			)
			options
			(
				icon = "shopping-receipt-list-42"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Invoice_Owner as "Invoice Owner"
							Subject_field as "Subject"
							Delivery_Order as "Delivery Order"
							Invoice_Date as "Invoice Date"
							Purchase_Order as "Purchase Order"
							Due_Date as "Due Date"
							Invoice_Number as "Invoice Number"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Invoice_Owner as "Invoice Owner"
							Subject_field as "Subject"
							Delivery_Order as "Delivery Order"
							Invoice_Date as "Invoice Date"
							Purchase_Order as "Purchase Order"
							Due_Date as "Due Date"
							Excise_Duty as "Excise Duty"
							Sales_Commission as "Sales Commission"
							Deal_Name as "Deal Name"
							Account_Name as "Account Name"
							Status
							Contact_Name as "Contact Name"
							Mode_of_Shipment as "Mode of Shipment"
							Billing_Street as "Billing Street"
							Shipping_Street as "Shipping Street"
							Billing_City as "Billing City"
							Billing_Country as "Billing Country"
							Billing_State as "Billing State"
							Billing_Code as "Billing Code"
							Shipping_City as "Shipping City"
							Shipping_State as "Shipping State"
							Shipping_Code as "Shipping Code"
							Shipping_Country as "Shipping Country"
							Invoiced_Items.Product_Name as "Invoiced Items"
							Sub_Total as "Sub Total"
							Tax_Total as "Tax Total"
							Grand_Total as "Grand Total"
							Terms_and_Conditions2 as "Terms and Conditions"
							Description
							Zoho_Books_Invoice_ID
							Invoice_Number as "Invoice Number"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Masters
	{
		default list Airports
		{
			displayName = "Airports"
			show all rows from New_Airport    
			(
				Airport_Name as "Airport Name"
				Airport as "Airport Code"
				City
				Country
				Country_Abrv as "Country Abbrev"
			)
			options
			(
				icon = "files-folder-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Airport_Name as "Airport Name"
							Airport as "Airport Code"
							City
							Country
							Country_Abrv as "Country Abbrev"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Airport_Name as "Airport Name"
							Airport as "Airport Code"
							City
							Country
							Country_Abrv as "Country Abbrev"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Ports
		{
			displayName = "Ports"
			show all rows from New_Port    
			(
				Port_Name as "Port Name"
				Port_Code as "Port Code"
				Country
			)
			options
			(
				icon = "files-folder-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Port_Name as "Port Name"
							Port_Code as "Port Code"
							Country
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Port_Name as "Port Name"
							Port_Code as "Port Code"
							Country
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list HS_Codes
		{
			displayName = "HS Codes"
			show all rows from New_HS_Codes_Master    
			(
				HS_Code as "HS Code"
				Short_Description as "Short Description"
				HS_Description as "HS Description"
			)
			options
			(
				icon = "files-folder-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							HS_Code as "HS Code"
							Short_Description as "Short Description"
							HS_Description as "HS Description"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							HS_Code as "HS Code"
							Short_Description as "Short Description"
							HS_Description as "HS Description"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Users
		{
			displayName = "Users"
			show all rows from New_User    
			(
				User_Name as "User Name"
				Email
			)
			options
			(
				icon = "files-folder-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							User_Name as "User Name"
							Email
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							User_Name as "User Name"
							Email
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Containers
		{
			displayName = "Containers"
			show all rows from New_Container    
			(
				Container_Number as "Container Number"
				Container_Seal_Number as "Container Seal Number"
				Container_Type as "Container Type"
				Container_Size as "Container Size"
			)
			options
			(
				icon = "files-folder-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Container_Number as "Container Number"
							Container_Seal_Number as "Container Seal Number"
							Container_Type as "Container Type"
							Container_Size as "Container Size"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Container_Number as "Container Number"
							Container_Seal_Number as "Container Seal Number"
							Container_Type as "Container Type"
							Container_Size as "Container Size"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Vendors
		{
			displayName = "Vendors"
			show all rows from New_Vendor    
			(
				Vendor_Image as "Vendor Image"
				Vendor_Owner as "Vendor Owner"
				Vendor_Name as "Vendor Name"
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Email
			)
			options
			(
				icon = "files-folder-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Vendor_Image as "Vendor Image"
							Vendor_Owner as "Vendor Owner"
							Vendor_Name as "Vendor Name"
							Phone_Number as "Phone"
							Email
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Vendor_Image as "Vendor Image"
							Vendor_Owner as "Vendor Owner"
							Vendor_Name as "Vendor Name"
							Phone_Number as "Phone"
							Email
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Products
		{
			displayName = "Products"
			show all rows from New_Product    
			(
				Product_Image as "Product Image"
				Product_Owner as "Product Owner"
				Product_Name as "Product Name"
				Product_Code as "Product Code"
				Vendor_Name as "Vendor Name"
				Product_Active as "Product Active"
				Unit_of_Measurement as "Unit of Measurement"
				Zoho_Books_Item_ID
			)
			options
			(
				icon = "files-folder-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Product_Image as "Product Image"
							Product_Owner as "Product Owner"
							Product_Name as "Product Name"
							Product_Code as "Product Code"
							Vendor_Name as "Vendor Name"
							Product_Active as "Product Active"
							Zoho_Books_Item_ID
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Product_Image as "Product Image"
							Product_Owner as "Product Owner"
							Product_Name as "Product Name"
							Product_Code as "Product Code"
							Vendor_Name as "Vendor Name"
							Product_Active as "Product Active"
							Unit_of_Measurement as "Unit of Measurement"
							Zoho_Books_Item_ID
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Vessels
		{
			displayName = "Vessels"
			show all rows from New_Vessel    
			(
				Vessel_Name as "Vessel Name"
			)
			options
			(
				icon = "files-folder-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Vessel_Name as "Vessel Name"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Vessel_Name as "Vessel Name"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Tax_Rates
		{
			displayName = "Tax Rates"
			show all rows from New_Tax_Rate    
			(
				Tax_Rate as "Tax Rate (%)"
				Zoho_Tax_ID as "Zoho Tax ID"
			)
			options
			(
				icon = "files-folder-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Tax_Rate as "Tax Rate (%)"
							Zoho_Tax_ID as "Zoho Tax ID"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Tax_Rate as "Tax Rate (%)"
							Zoho_Tax_ID as "Zoho Tax ID"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section New_Airport_Masters
	{
		icon = "tech-desktop"
		form New_Airport
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Airport_Name
			(
    			type = text
				displayname = "Airport Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Airport
			(
    			type = text
				displayname = "Airport Code"
	 			row = 1
	 			column = 1   
				width = medium
			)
			City
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Country
			(
				type = picklist
				maxchar = 100
				values = {"Afghanistan","Albania","Algeria","Andorra","Angola","Antigua & Deps","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Central African Rep","Chad","Chile","China","Colombia","Comoros","Congo","Congo {Democratic Rep}","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland {Republic}","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea North","Korea South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar, {Burma}","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russian Federation","Rwanda","St Kitts & Nevis","St Lucia","Saint Vincent & the Grenadines","Samoa","San Marino","Sao Tome & Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad & Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Country_Abrv
			(
    			type = text
				displayname = "Country Abbrev"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Port_Master
	{
		icon = "tech-desktop"
		form New_Port
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Port_Name
			(
    			type = text
				displayname = "Port Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Port_Code
			(
    			type = text
				displayname = "Port Code"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Country
			(
				type = picklist
				maxchar = 100
				values = {"Afghanistan","Albania","Algeria","Andorra","Angola","Antigua & Deps","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Central African Rep","Chad","Chile","China","Colombia","Comoros","Congo","Congo {Democratic Rep}","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland {Republic}","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea North","Korea South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar, {Burma}","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russian Federation","Rwanda","St Kitts & Nevis","St Lucia","Saint Vincent & the Grenadines","Samoa","San Marino","Sao Tome & Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad & Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_HS_Codes_Master
	{
		displayname= "New HS Codes Master"
		icon = "design-paper-dev"
		form New_HS_Codes_Master
		{
			displayname = "New HS Codes Master"
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique HS_Code
			(
    			type = text
				displayname = "HS Code"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Short_Description
			(
    			type = text
				displayname = "Short Description"
	 			row = 1
	 			column = 1   
				width = medium
			)
			HS_Description
			(
    			type = text
				displayname = "HS Description"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-paper-dev"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Map_page
	{
		displayname= "Map"
		icon = "tech-desktop"
		form Map_Dependency_Mode
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Mode_of_Shipment
			(
				type = picklist
				displayname = "Mode of Shipment"
				maxchar = 100
				values = {"Import - Freight forwarding","Export - Freight forwarding","Cross Trade","Import - NVOCC","Export - NVOCC","Container Sale","Feeder","Warehouse","Custom Clearance","Others","None"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sub_Mode_of_Shipment
			(
				type = list	
				displayname = "Sub Mode of Shipment"
				values = {"Air","Land","Sea","Road","Others","NA","None"}
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Map_Submode
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Sub_Mode_of_Shipment
			(
				type = picklist
				displayname = "Sub Mode of Shipment"
				maxchar = 100
				values = {"Air","Land","Sea","Road","Others","NA","None"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Cargo_Type
			(
				type = list	
				displayname = "Cargo Type"
				values = {"G - GENERAL CARGO","F- FTL - Load","L - LTL - Load","F - FCL CONTAINER","L - LCL CONTAINER","M - EMPTY CONTAINER","B - BULK SOLID","Q - BULK LIQUID","R - RO-RO UNIT","P - PASSENGER","CONSOLIDATED CARGO ( GROUPAGE CARGO )","None"}
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Shipment_Terms
			(
				type = list	
				displayname = "Shipment Terms"
				values = {"CIP","CPT","DAP","DDP","DPU","EXW","FCA","CFR","CIF","FOB","None"}
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Container_Movement_Type
			(
				type = list	
				displayname = "Container Movement Type"
				values = {"CY/CY","CY/CFS","CFS/CY","CFS/CFS","Port to Factory","Door to POD","Custom Clearance","CY-Door","CY-Port","Door to Port","DR-CY","None"}
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Accounts
	{
		icon = "business-calculator"
		form New_Account
		{
			success message = "Account Added Successfully"
			field alignment = left
					hide = true
			Account_Image
			(
				type = section
				displayname = "Account Image"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Image
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Account_Information
			(
				type = section
				displayname = "Account Information"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Account_Owner
			(
				type = picklist	
				displayname = "Account Owner"
				values  = New_User.ID
    			displayformat = [User_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Account_Name
			(
    			type = text
				displayname = "Account Name"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Account_Site
			(
    			type = text
				displayname = "Account Site"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Account_Number
			(
				type = number
				displayname = "Account Number"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Account_Type
			(
				type = picklist
				displayname = "Account Type"
				maxchar = 100
				values = {"Analyst","Competitor","Customer","Distributor","Integrator","Investor","Other","Partner","Press","Prospect","Reseller","Supplier","Vendor"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			Industry
			(
				type = picklist
				maxchar = 100
				values = {"None","ASP (Application Service Provider)","Data/Telecom OEM","ERP (Enterprise Resource Planning)","Government/Military","Large Enterprise","ManagementISV","MSP (Management Service Provider)","Network Equipment Enterprise","Non-management ISV","Optical Networking","Service Provider","Small/Medium Enterprise","Storage Equipment","Storage Service Provider","Systems Integrator","Wireless Industry","Financial Services","Education","Technology","Real Estate","Consulting","Communications","Manufacturing"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			Annual_Revenue
			(
				displayname = "Annual Revenue"
				type = AED
				format = commadotwestern
	 			row = 2
	 			column = 1   
				width = medium
			)
			SIC_Code
			(
				type = number
				displayname = "SIC Code"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Shipment_Terms
			(
				type = picklist
				displayname = "Shipment Terms"
				maxchar = 100
				values = {"None","CIP","CPT","DAP","DDP","DPU","EXW","FCA","CFR","CIF","FOB"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			Freight_Prepaid_Collect
			(
				type = picklist
				displayname = "Freight Prepaid / Collect"
				maxchar = 100
				values = {"None","Prepaid","Collect"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			Rating
			(
				type = picklist
				maxchar = 100
				values = {"None","Acquired","Active","Market Failed","Project Cancelled","Shut Down"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			unique Email
			(
    			type = email
				maxchar = 80
	 			row = 2
	 			column = 2   
				width = medium
				personal data = true
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 2
	 			column = 2   
				width = medium
				personal data = true
			)
			Website
			(
    			type = url
				enable  linkname
	 			row = 2
	 			column = 2   
				width = medium
			)
			Ticker_Symbol
			(
    			type = text
				displayname = "Ticker Symbol"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Ownership
			(
				type = picklist
				maxchar = 100
				values = {"None","Other","Private","Public","Subsidiary","Partnership","Government","Privately Held","Public Company"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Employees
			(
				type = number
	 			row = 2
	 			column = 2   
				width = medium
			)
			Cargo_Type
			(
				type = picklist
				displayname = "Cargo Type"
				maxchar = 100
				values = {"None","G - GENERAL CARGO","F- FTL - Load","L - LTL - Load","F - FCL CONTAINER","L - LCL CONTAINER","M - EMPTY CONTAINER","B - BULK SOLID","Q - BULK LIQUID","R - RO-RO UNIT","P - PASSENGER","CONSOLIDATED CARGO ( GROUPAGE CARGO )"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Groupage_Sub_Category
			(
				type = picklist
				displayname = "Groupage Sub Category"
				maxchar = 100
				values = {"None","FCL/FCL (One Shipper - One Consignee)","FCL/LCL (One Shipper - Multiple Consignees)","LCL/FCL (Multiple Shippers - One Consignees)","LCL/LCL (Multiple Shippers - Multiple Consignees)"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Lead_ID
			(
				type = picklist	
				displayname = "Lead ID"
				values  = New_Lead.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 2
	 			column = 2   
				width = medium
			)
			Address_Information
			(
				type = section
				displayname = "Address Information"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Billing_Street
			(
    			type = text
				displayname = "Billing Street"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Billing_City
			(
    			type = text
				displayname = "Billing City"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Billing_State
			(
    			type = text
				displayname = "Billing State"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Billing_Code
			(
    			type = text
				displayname = "Billing Code"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Billing_Country
			(
    			type = text
				displayname = "Billing Country"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Shipping_Street
			(
    			type = text
				displayname = "Shipping Street"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Shipping_City
			(
    			type = text
				displayname = "Shipping City"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Shipping_State
			(
    			type = text
				displayname = "Shipping State"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Shipping_Code
			(
    			type = text
				displayname = "Shipping Code"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Shipping_Country
			(
    			type = text
				displayname = "Shipping Country"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Description_Information
			(
				type = section
				displayname = "Description Information"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 4
	 			column = 1   
				width = medium
			)
			Developers_Section
			(
				type = section
				displayname = "Developers Section"
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			Zoho_Books_Customer_ID
			(
    			type = text
	 			row = 5
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-calculator"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Users
	{
		icon = "tech-desktop"
		form New_User
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique User_Name
			(
    			type = text
				displayname = "User Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Contacts
	{
		icon = "tech-desktop"
		form New_Contact
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Contact_Image
			(
    			type = image
				displayname = "Contact Image"
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact_Information
			(
				type = section
				displayname = "Contact Information"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Contact_Owner
			(
				type = picklist	
				displayname = "Contact Owner"
				values  = New_User.ID
    			displayformat = [User_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Contact_Name
			(
    			type = name
				displayname = "Contact Name"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Vendor
			(
				type = picklist	
				values  = New_Vendor.ID
    			displayformat = [Vendor_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Department
			(
    			type = text
	 			row = 2
	 			column = 1   
				width = medium
			)
			Mobile
			(
    			type = phonenumber
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Assistant_Phone
			(
    			type = phonenumber
				displayname = "Assistant Phone"
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Skype_ID
			(
    			type = text
				displayname = "Skype ID"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Lead_ID
			(
				type = picklist	
				displayname = "Lead ID"
				values  = New_Lead.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Lead_Source
			(
				type = picklist
				displayname = "Lead Source"
				maxchar = 100
				values = {"Other","Advertisement","Cold Call","Employee Referral","External Referral","Online Store","Partner","Twitter","Public Relations","Facebook","Sales Email Alias","Google+","Seminar Partner","Internal Seminar","Trade Show","Web Download","Web Research","Web Cases","Web Mail","Chat"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 2
	 			column = 2   
				width = medium
				personal data = true
			)
			Account_Name
			(
				type = picklist	
				displayname = "Account Name"
				values  = New_Account.ID
    			displayformat = [Account_Name]
				sortorder = ascending
	 			row = 2
	 			column = 2   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 2
	 			column = 2   
				width = medium
				personal data = true
			)
			Assistant
			(
    			type = text
	 			row = 2
	 			column = 2   
				width = medium
			)
			Email_Opt_Out
			(
    			type = checkbox
				displayname = "Email Opt Out"
				initial value = false
	 			row = 2
	 			column = 2   
				width = medium
			)
			Twitter
			(
    			type = text
	 			row = 2
	 			column = 2   
				width = medium
			)
			Address_Information
			(
				type = section
				displayname = "Address Information"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Mailing_Street
			(
    			type = text
				displayname = "Mailing Street"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Mailing_City
			(
    			type = text
				displayname = "Mailing City"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Mailing_State
			(
    			type = text
				displayname = "Mailing State"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Mailing_Zip
			(
    			type = text
				displayname = "Mailing Zip"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Mailing_Country
			(
    			type = text
				displayname = "Mailing Country"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Other_Street
			(
    			type = text
				displayname = "Other Street"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Other_City
			(
    			type = text
				displayname = "Other City"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Other_State
			(
    			type = text
				displayname = "Other State"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Other_Zip
			(
    			type = text
				displayname = "Other Zip"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Other_Country
			(
    			type = text
				displayname = "Other Country"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Description_Information
			(
				type = section
				displayname = "Description Information"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 4
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Vendor
	{
		icon = "tech-desktop"
		form New_Vendor
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Vendor_Image
			(
    			type = image
				displayname = "Vendor Image"
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Vendor_Information
			(
				type = section
				displayname = "Vendor Information"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Vendor_Owner
			(
				type = picklist	
				displayname = "Vendor Owner"
				values  = New_User.ID
    			displayformat = [User_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			must have unique Vendor_Name
			(
    			type = text
				displayname = "Vendor Name"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 2
	 			column = 2   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Deal
	{
		icon = "tech-desktop"
		form New_Deal
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Deal_Image
			(
    			type = image
				displayname = "Deal Image"
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Deal_Information
			(
				type = section
				displayname = "Deal Information"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Deal_Owner
			(
				type = picklist	
				displayname = "Deal Owner"
				values  = New_User.ID
    			displayformat = [User_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Closing_Date
			(
    			type = date
				displayname = "Closing Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Stage
			(
				type = picklist
				maxchar = 100
				values = {"Qualification","Needs Analysis","Proposal/Price Quote","Negotiation/Review","Closed Won","Closed Lost","Closed-Lost to Competition"}
				initial value = "Qualification"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Lead_Source
			(
				type = picklist
				displayname = "Lead Source"
				maxchar = 100
				values = {"Other","Advertisement","Cold Call","Employee Referral","External Referral","Online Store","Twitter","Facebook","Partner","Google+","Public Relations","Sales Email Alias","Seminar Partner","Internal Seminar","Trade Show","Web Download","Web Research","Chat","Instagram"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Sub_Mode_of_Shipment
			(
				type = picklist
				displayname = "Sub Mode of Shipment"
				maxchar = 100
				values = {"None","Air","Land","Sea","Road","Others","NA"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			Freight_Prepaid_Collect
			(
				type = picklist
				displayname = "Freight Prepaid / Collect"
				maxchar = 100
				values = {"None","Prepaid","Collect"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			Max_Temp_of_Refrigeration
			(
				type = number
				displayname = "Max Temp. of Refrigeration"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Rotaion_Number
			(
    			type = text
				displayname = "Rotaion Number"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Unit_of_Temperature
			(
				type = picklist
				displayname = "Unit of Temperature"
				maxchar = 100
				values = {"None","C-Centigrade","F - Fahrenheit"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			Include_Insurance
			(
				type = picklist
				displayname = "Include Insurance"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			No_of_Container_Reqd
			(
				type = number
				displayname = "No of Container Reqd."
	 			row = 2
	 			column = 1   
				width = medium
			)
			Gate_Way_Airport
			(
				type = picklist	
				displayname = "Gate Way Airport"
				values  = New_Airport.ID
    			displayformat = [Airport_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Destination_Airport
			(
				type = picklist	
				displayname = "Destination Airport"
				values  = New_Airport.ID
    			displayformat = [Airport_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Port_of_Loading
			(
				type = picklist	
				displayname = "Port of Loading"
				values  = New_Port.ID
    			displayformat = [Port_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Incoterms
			(
				type = picklist
				maxchar = 100
				values = {"None","CFR","CIF","CIP","CPT","DAP","DDP","DPU","EXW","FAS","FCA","FOB"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			TRN
			(
    			type = text
	 			row = 2
	 			column = 1   
				width = medium
			)
			Reason_for_Loss
			(
				type = picklist
				displayname = "Reason for Loss"
				maxchar = 100
				values = {"None","Expectation Mismatch","Price","Unqualified Customer","Lack of response","Missed Follow Ups","Wrong Target","Competition","Future Interest","Other"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			DO_Valid_Till_Date
			(
    			type = date
				displayname = "DO Valid Till Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 1   
				width = medium
			)
			Amount
			(
				type = AED
				format = commadotwestern
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Account_Name
			(
				type = picklist	
				displayname = "Account Name"
				values  = New_Account.ID
    			displayformat = [Account_Name]
				sortorder = ascending
	 			row = 2
	 			column = 2   
				width = medium
			)
			Type_field
			(
				type = picklist
				displayname = "Type"
				maxchar = 100
				values = {"None","Existing Business","New Business"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Mode_of_Shipment
			(
				type = picklist
				displayname = "Mode of Shipment"
				maxchar = 100
				values = {"Import - Freight forwarding","Export - Freight forwarding","Cross Trade","Import - NVOCC","Export - NVOCC","Container Sale","Feeder","Warehouse","Custom Clearance","Others","None"}
				sortorder = ascending
	 			row = 2
	 			column = 2   
				width = medium
			)
			Groupage_Sub_Category
			(
				type = picklist
				displayname = "Groupage Sub Category"
				maxchar = 100
				values = {"None","FCL/FCL (One Shipper - One Consignee)","FCL/LCL (One Shipper - Multiple Consignees)","LCL/FCL (Multiple Shippers - One Consignees)","LCL/LCL (Multiple Shippers - Multiple Consignees)"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Shipment_Terms
			(
				type = picklist
				displayname = "Shipment Terms"
				maxchar = 100
				values = {"None","CIP","CPT","DAP","DDP","DPU","EXW","FCA","CFR","CIF","FOB"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Min_Temp_of_Refrigeration
			(
				type = number
				displayname = "Min Temp. of Refrigeration"
	 			row = 2
	 			column = 2   
				width = medium
			)
			BOX_Partnering_Line_Code
			(
    			type = text
				displayname = "BOX / Partnering Line Code"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Manifest_Registration_Number
			(
    			type = text
				displayname = "Manifest Registration Number"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Slac_Indicator
			(
				type = picklist
				displayname = "Slac Indicator"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Container_Movement_Type
			(
				type = picklist
				displayname = "Container Movement Type"
				maxchar = 100
				values = {"None","CY/CY","CY/CFS","CFS/CY","CFS/CFS","Port to Factory","Door to POD","Custom Clearance","CY-Door","CY-Port","Door to Port","DR-CY"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Place_of_Delivery
			(
				type = picklist
				displayname = "Place of Delivery"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Korea","Spain","Sri Lanka","Sudan","Suriname","Svalbard and Jan Mayen","Eswatini","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Democratic Republic of the Congo","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Virgin Islands","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Vatican","Venezuela","Vietnam","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe","Aland Islands"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Place_of_Loading
			(
				type = picklist
				displayname = "Place of Loading"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Korea","Spain","Sri Lanka","Sudan","Suriname","Svalbard and Jan Mayen","Eswatini","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Democratic Republic of the Congo","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Virgin Islands","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Vatican","Venezuela","Vietnam","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe","Aland Islands"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Port_of_Discharge
			(
				type = picklist	
				displayname = "Port of Discharge"
				values  = New_Port.ID
    			displayformat = [Port_Name]
				sortorder = ascending
	 			row = 2
	 			column = 2   
				width = medium
			)
			Category_of_Shipment
			(
				type = picklist
				displayname = "Category of Shipment"
				maxchar = 100
				values = {"None","Import","Export","Container","Warehouse","NVOCC","Feeder","Others"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Expected_Revenue
			(
				displayname = "Expected Revenue"
				type = AED
				format = commadotwestern
	 			row = 2
	 			column = 2   
				width = medium
			)
			Vendor_Quote_Received
			(
    			type = checkbox
				displayname = "Vendor Quote Received"
				initial value = false
	 			row = 2
	 			column = 2   
				width = medium
			)
			Lead_ID
			(
				type = picklist	
				values  = New_Lead.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have unique Deal_Name
			(
    			type = text
				displayname = "Deal Name"
	 			row = 2
	 			column = 3   
				width = medium
			)
			unique Job_Card_No
			(
    			type = text
				displayname = "Job Card No."
	 			row = 2
	 			column = 3   
				width = medium
			)
			Probability
			(
				type = number
				displayname = "Probability (%)"
	 			row = 2
	 			column = 3   
				width = medium
			)
			If_Other_Industry_Pls_Specify
			(
    			type = text
				displayname = "If Other Industry Pls Specify"
	 			row = 2
	 			column = 3   
				width = medium
			)
			Cargo_Type
			(
				type = picklist
				displayname = "Cargo Type"
				maxchar = 100
				values = {"None","G - GENERAL CARGO","F- FTL - Load","L - LTL - Load","F - FCL CONTAINER","L - LCL CONTAINER","M - EMPTY CONTAINER","B - BULK SOLID","Q - BULK LIQUID","R - RO-RO UNIT","P - PASSENGER","CONSOLIDATED CARGO ( GROUPAGE CARGO )"}
	 			row = 2
	 			column = 3   
				width = medium
			)
			Lead_Expiration_Date
			(
    			type = date
				displayname = "Lead Expiration Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 3   
				width = medium
			)
			Message_Type
			(
    			type = text
				displayname = "Message Type"
	 			row = 2
	 			column = 3   
				width = medium
			)
			Type_of_Container
			(
				type = picklist
				displayname = "Type of Container"
				maxchar = 100
				values = {"None","Standard Container","Standard Container 40'HC (High cube)","Open Top Container","Flat Rack","Special Container","Refrigerated Container","Platform Container","Ventilated Container","Hardtop Container","Insulated Container"}
	 			row = 2
	 			column = 3   
				width = medium
			)
			BOX_Partnering_Agent_Code
			(
    			type = text
				displayname = "BOX/Partnering Agent Code"
	 			row = 2
	 			column = 3   
				width = medium
			)
			Value_of_Goods
			(
				type = number
				displayname = "Value of Goods"
	 			row = 2
	 			column = 3   
				width = medium
			)
			Container_Size
			(
				type = picklist
				displayname = "Container Size"
				maxchar = 100
				values = {"None","20","40","55","45"}
	 			row = 2
	 			column = 3   
				width = medium
			)
			Is_Stackable
			(
				type = picklist
				displayname = "Is Stackable ?"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 2
	 			column = 3   
				width = medium
			)
			must have ETA
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 3   
				width = medium
			)
			must have ETD
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 3   
				width = medium
			)
			Photograph
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 2
	 			column = 3   
				width = medium
			)
			MFD_Required
			(
    			type = checkbox
				displayname = "MFD Required"
				initial value = false
	 			row = 2
	 			column = 3   
				width = medium
			)
			Free_Days
			(
				type = number
				displayname = "Free Days"
	 			row = 2
	 			column = 3   
				width = medium
			)
			Commodity_Details
			(
				type = section
				displayname = "Commodity Details"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			USED_OR_NEW_INDICATOR
			(
				type = picklist
				displayname = "USED OR NEW INDICATOR"
				maxchar = 100
				values = {"None","U - USED COMMODITY","N - NEW COMMODITY"}
	 			row = 3
	 			column = 1   
				width = medium
			)
			Dangerous_Goods_indicator
			(
				type = picklist
				displayname = "Dangerous Goods indicator"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 3
	 			column = 1   
				width = medium
			)
			Carrier_Vessel
			(
    			type = text
				displayname = "Carrier (Vessel)"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Voyage_Number
			(
    			type = text
				displayname = "Voyage Number"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Dangerous_Goods
			(
				type = picklist
				displayname = "Dangerous Goods"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 3
	 			column = 2   
				width = medium
			)
			Storage_request_for_Dangerous_Goods
			(
    			type = text
				displayname = "Storage request for Dangerous Goods"
	 			row = 3
	 			column = 2   
				width = medium
			)
			UN_Number
			(
    			type = text
				displayname = "UN Number"
	 			row = 3
	 			column = 2   
				width = medium
			)
			General_Description
			(
    			type = textarea
				displayname = "General Description"
				height = 100px
	 			row = 3
	 			column = 2   
				width = medium
			)
			IMO_Class
			(
				type = picklist
				displayname = "IMO Class"
				maxchar = 100
				values = {"None","Explosives with Mass Explosion Hazards","Explosives with a Fire"}
	 			row = 3
	 			column = 3   
				width = medium
			)
			Storage_Request_Code
			(
				type = picklist
				displayname = "Storage Request Code"
				maxchar = 100
				values = {"None","D - Direct Delivery","S - Storage in Sheds","Y - Storage in Yards"}
	 			row = 3
	 			column = 3   
				width = medium
			)
			Vessel_Name
			(
				type = picklist	
				displayname = "Vessel Name"
				values  = New_Vessel.ID
    			displayformat = [Vessel_Name]
				sortorder = ascending
	 			row = 3
	 			column = 3   
				width = medium
			)
			Package_Details
			(
				type = section
				displayname = "Package Details"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			Package_Code
			(
				type = picklist
				displayname = "Package Code"
				maxchar = 100
				values = {"None","BAG","BAL","BDL","BLK","BOB","BOT","BOX","BRL","BRQ","CAN","CBY","CDR","CLI","COI","CRT","CSE","CSK","CASKS","CTR","CYL","DRM","DZN","FDR","ITM","JOT","KEG","MDL","MDR","PAL","PCL","PCS","PDR","PKG","PKT","PLT","REL","ROL","SAK","SET","SHT","SKD","SPK","SPL","STR","TCH","TON","UNT"}
	 			row = 4
	 			column = 1   
				width = medium
			)
			Dimension
			(
    			type = text
	 			row = 4
	 			column = 1   
				width = medium
			)
			Package_Description
			(
				type = picklist
				displayname = "Package Description"
				maxchar = 100
				values = {"None","BAGS","BALES","BUNDLES","BULK LIQUID","BLOCKS","BOBBIN","BOATS","BOXES","BARREL","BRIQUETTES","BULK SOLID","BULK SOLID/LIQUID","CANS","CARBOY","CABLE DRUM","COLLI","COILS","CRATES","CASES","CASKS","CARTONS","CONTAINER","CYLINDERS","DRUMS","DOZENS","FLEXITANK/CONTAINERCOMBINATION","FIBRE DRUM","INTERMEDIATE BULK CONTAINER","ITEM","JOTTAS","KEGS","LOTS","LOOSE","LIFT VAN","MODULES","METAL DRUMS","METRIC TON","NUMBERS","PAIL","PARCEL","PIECES","PLASTIC DRUM","PACKAGES","PACKET","PALLET","REEL","ROLLS","SACKS","SETS","SHEETS","SKID","STEEL PACKAGES","STEEL PLATES","STEEL TRUNKS","TEA CHEST","UNIT"}
	 			row = 4
	 			column = 2   
				width = medium
			)
			Number_of_Package
			(
				type = number
				displayname = "Number of Package"
	 			row = 4
	 			column = 3   
				width = medium
			)
			NVOCC_Checklists
			(
				type = section
				displayname = "NVOCC Checklists"
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			BOL_Issuance
			(
				type = picklist
				displayname = "BOL Issuance"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 1   
				width = medium
			)
			Container_Loaded_On_Vessel
			(
				type = picklist
				displayname = "Container Loaded On Vessel"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 1   
				width = medium
			)
			Mount_On_Truck
			(
				type = picklist
				displayname = "Mount On Truck"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 1   
				width = medium
			)
			Import_Customs_Clearance
			(
				type = picklist
				displayname = "Import Customs Clearance"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 1   
				width = medium
			)
			Customs_Release
			(
				type = picklist
				displayname = "Customs Release"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 1   
				width = medium
			)
			Gate_Appointment_For_Container_Pickup
			(
				type = picklist
				displayname = "Gate Appointment For Container Pickup"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 1   
				width = medium
			)
			Truck_Arrival_At_Customer_Facility
			(
				type = picklist
				displayname = "Truck Arrival At Customer Facility"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 1   
				width = medium
			)
			Rail_Arrival
			(
				type = picklist
				displayname = "Rail Arrival"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 2   
				width = medium
			)
			Vessel_Berthing
			(
				type = picklist
				displayname = "Vessel Berthing"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 2   
				width = medium
			)
			Container_Discharged_From_Vessel
			(
				type = picklist
				displayname = "Container Discharged From Vessel"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 2   
				width = medium
			)
			Container_In_Yard
			(
				type = picklist
				displayname = "Container In Yard"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 2   
				width = medium
			)
			Delivery_Order_Issuance
			(
				type = picklist
				displayname = "Delivery Order Issuance"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 2   
				width = medium
			)
			Terminal_Release
			(
				type = picklist
				displayname = "Terminal Release"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 2   
				width = medium
			)
			Empty_Container_Returned
			(
				type = picklist
				displayname = "Empty Container Returned"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 2   
				width = medium
			)
			Unloaded_From_Rail
			(
				type = picklist
				displayname = "Unloaded From Rail"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 3   
				width = medium
			)
			Vessel_Berth_Booking
			(
				type = picklist
				displayname = "Vessel Berth Booking"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 3   
				width = medium
			)
			Truck_Gate_Out
			(
				type = picklist
				displayname = "Truck Gate Out"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 3   
				width = medium
			)
			Payment_to_Ocean_Liner_Drayage_Vendor
			(
				type = picklist
				displayname = "Payment to Ocean Liner & Drayage Vendor"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 3   
				width = medium
			)
			Additional_Pay_to_Ocean_liner_Clear_Container
			(
				type = picklist
				displayname = "Additional Pay to Ocean liner & Clear Container"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 3   
				width = medium
			)
			Container_Destuffed
			(
				type = picklist
				displayname = "Container Destuffed"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 3   
				width = medium
			)
			Cargo_Acceptance
			(
				type = picklist
				displayname = "Cargo Acceptance"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 5
	 			column = 3   
				width = medium
			)
			Shipper_Address_Information
			(
				type = section
				displayname = "Consignee Address Information"
				visibility = true
	 			row = 6
	 			column = 0   
				width = medium
			)
			Shipper_Name
			(
    			type = text
				displayname = "Shipper Name"
	 			row = 6
	 			column = 1   
				width = medium
			)
			Shipper_State
			(
    			type = text
				displayname = "Shipper State"
	 			row = 6
	 			column = 1   
				width = medium
			)
			Shipper_Street
			(
    			type = text
				displayname = "Shipper Street"
	 			row = 6
	 			column = 2   
				width = medium
			)
			Shipper_Zip_Code
			(
    			type = text
				displayname = "Shipper Zip Code"
	 			row = 6
	 			column = 2   
				width = medium
			)
			Shipper_City
			(
				type = picklist
				displayname = "Shipper City"
				maxchar = 100
				values = {"Choice 1","Choice 2","Choice 3"}
	 			row = 6
	 			column = 3   
				width = medium
			)
			Shipper_Country
			(
				type = picklist
				displayname = "Shipper Country"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Korea","Spain","Sri Lanka","Sudan","Suriname","Svalbard and Jan Mayen","Eswatini","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Democratic Republic of the Congo","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Virgin Islands","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Vatican","Venezuela","Vietnam","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe","Aland Islands"}
	 			row = 6
	 			column = 3   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
				visibility = true
	 			row = 7
	 			column = 0   
				width = medium
			)
			Consignee_Name
			(
    			type = text
				displayname = "Consignee Name"
	 			row = 7
	 			column = 1   
				width = medium
			)
			Consignee_State
			(
    			type = text
				displayname = "Consignee State"
	 			row = 7
	 			column = 1   
				width = medium
			)
			Consignee_Street
			(
    			type = text
				displayname = "Consignee Street"
	 			row = 7
	 			column = 2   
				width = medium
			)
			Consignee_Zip_Code
			(
    			type = text
				displayname = "Consignee Zip Code"
	 			row = 7
	 			column = 2   
				width = medium
			)
			Consignee_City
			(
    			type = text
				displayname = "Consignee City"
	 			row = 7
	 			column = 3   
				width = medium
			)
			Consignee_Country
			(
				type = picklist
				displayname = "Consignee Country"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Korea","Spain","Sri Lanka","Sudan","Suriname","Svalbard and Jan Mayen","Eswatini","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Democratic Republic of the Congo","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Virgin Islands","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Vatican","Venezuela","Vietnam","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe","Aland Islands"}
	 			row = 7
	 			column = 3   
				width = medium
			)
			Description_Information
			(
				type = section
				displayname = "Description Information"
				visibility = true
	 			row = 8
	 			column = 0   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 8
	 			column = 1   
				width = medium
			)
			Auto_Number
			(
    			type = autonumber
				displayname = "Auto Number"
				start index = 1
	 			row = 8
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Lead
	{
		form New_Lead
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Lead_Information
			(
				type = section
				displayname = "Lead Information"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Lead_Owner
			(
				type = picklist	
				displayname = "Lead Owner"
				values  = New_User.ID
    			displayformat = [User_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Company
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Lead_Status
			(
				type = picklist
				displayname = "Lead Status"
				maxchar = 100
				values = {"Attempted to Contact","Contact in Future","Contacted","Junk Lead","Lost Lead","Not Contacted","Pre-Qualified","Not Qualified"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Mode_of_Shipment
			(
				type = picklist
				displayname = "Mode of Shipment"
				maxchar = 100
				values = {"Import - Freight forwarding","Export - Freight forwarding","Cross Trade","Import - NVOCC","Export - NVOCC","Container Sale","Feeder","Warehouse","Custom Clearance","Others","None"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Shipment_Terms
			(
				type = picklist
				displayname = "Shipment Terms"
				maxchar = 100
				values = {"CIP","CPT","DAP","DDP","DPU","EXW","FCA","CFR","CIF","FOB","None"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Type_of_Container
			(
				type = picklist
				displayname = "Type of Container"
				maxchar = 100
				values = {"Standard Container","Standard Container 40'HC (High cube)","Open Top Container","Flat Rack","Special Container","Refrigerated Container","Platform Container","Ventilated Container","Hardtop Container","Insulated Container","None"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Unit_of_Temperature
			(
				type = picklist
				displayname = "Unit of Temperature"
				maxchar = 100
				values = {"C-Centigrade","F - Fahrenheit","None"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			BOX_Partnering_Line_Code
			(
    			type = text
				displayname = "BOX / Partnering Line Code"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Slac_Indicator
			(
				type = picklist
				displayname = "Slac Indicator"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			No_of_Containers_Req
			(
				type = number
				displayname = "No. of Containers Req."
	 			row = 1
	 			column = 1   
				width = medium
			)
			Gate_Way_Airport
			(
				type = picklist	
				displayname = "Gate Way Airport"
				values  = New_Airport.ID
    			displayformat = [Airport_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Place_of_Delivery
			(
				type = picklist
				displayname = "Place of Delivery"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","Andorra","Angola","Antigua & Deps","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Central African Rep","Chad","Chile","China","Colombia","Comoros","Congo","Congo {Democratic Rep}","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland {Republic}","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea North","Korea South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar, {Burma}","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russian Federation","Rwanda","St Kitts & Nevis","St Lucia","Saint Vincent & the Grenadines","Samoa","San Marino","Sao Tome & Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad & Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have ETA
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Is_Stackable
			(
				type = picklist
				displayname = "Is Stackable ?"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Is_Converted
			(
				type = picklist
				displayname = "Is Converted ?"
				maxchar = 100
				values = {"Yes","No"}
				initial value = "No"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Photograph
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 2   
				width = medium
				personal data = true
			)
			Website
			(
    			type = url
				enable  linkname
	 			row = 1
	 			column = 2   
				width = medium
			)
			Industry
			(
				type = picklist
				maxchar = 100
				values = {"Other","ASP (Application Service Provider)","Data/Telecom OEM","ERP (Enterprise Resource Planning)","Government/Military","Large Enterprise","ManagementISV","MSP (Management Service Provider)","Network Equipment Enterprise","Non-management ISV","Optical Networking","Service Provider","Small/Medium Enterprise","Storage Equipment","Storage Service Provider","Systems Integrator","Wireless Industry","ERP","Management ISV"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Submode
			(
				type = picklist
				displayname = "Sub Mode of Shipment"
				maxchar = 100
				values = {"Air","Land","Sea","Road","NA","Others","None"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Freight_Prepaid_Collect
			(
				type = picklist
				displayname = "Freight Prepaid / Collect"
				maxchar = 100
				values = {"None","Prepaid","Collect"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Max_Temp_of_Refrigeration
			(
				type = number
				displayname = "Max Temp. of Refrigeration"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Message_Type
			(
    			type = text
				displayname = "Message Type"
	 			row = 1
	 			column = 2   
				width = medium
			)
			BOX_Partnering_Agent_Code
			(
    			type = text
				displayname = "BOX/Partnering Agent Code"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Include_Insurance
			(
				type = picklist
				displayname = "Include Insurance"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Value_of_Goods
			(
				type = number
				displayname = "Value of Goods"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Destination_Airport
			(
				type = picklist	
				displayname = "Destination Airport"
				values  = New_Airport.ID
    			displayformat = [Airport_Name]
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
			Port_of_Loading
			(
				type = picklist	
				displayname = "Port of Loading"
				values  = New_Port.ID
    			displayformat = [Port_Name]
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have ETD
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			Container_Movement_Type
			(
				type = picklist
				displayname = "Container Movement Type"
				maxchar = 100
				values = {"CY/CY","CY/CFS","CFS/CY","CFS/CFS","Port to Factory","Door to POD","Custom Clearance","CY-Door","CY-Port","Door to Port","DR-CY","None"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Annual_Revenue
			(
				displayname = "Annual Revenue"
				type = AED
				format = commadotwestern
	 			row = 1
	 			column = 2   
				width = medium
			)
			Account_ID
			(
				type = picklist	
				displayname = "Account ID"
				values  = New_Account.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have unique Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 3   
				width = medium
				personal data = true
			)
			Mobile
			(
    			type = phonenumber
	 			row = 1
	 			column = 3   
				width = medium
				personal data = true
			)
			If_Other_Industry_Pls_Specify
			(
    			type = text
				displayname = "If Other Industry Pls Specify"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Lead_Source
			(
				type = picklist
				displayname = "Lead Source"
				maxchar = 100
				values = {"Other","Advertisement","Cold Call","Employee Referral","External Referral","Online Store","Twitter","Facebook","Partner","Google+","Public Relations","Sales Email Alias","Seminar Partner","Internal Seminar","Trade Show","Web Download","Web Research","Chat","Instagram"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			Cargo_Type
			(
				type = picklist
				displayname = "Cargo Type"
				maxchar = 100
				values = {"G - GENERAL CARGO","F- FTL - Load","L - LTL - Load","F - FCL CONTAINER","L - LCL CONTAINER","M - EMPTY CONTAINER","B - BULK SOLID","Q - BULK LIQUID","R - RO-RO UNIT","P - PASSENGER","CONSOLIDATED CARGO ( GROUPAGE CARGO )","None"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			Groupage_Sub_Category
			(
				type = picklist
				displayname = "Groupage Sub Category"
				maxchar = 100
				values = {"None","FCL/FCL (One Shipper - One Consignee)","FCL/LCL (One Shipper - Multiple Consignees)","LCL/FCL (Multiple Shippers - One Consignees)","LCL/LCL (Multiple Shippers - Multiple Consignees)"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			Min_Temp_of_Refrigeration
			(
				type = number
				displayname = "Min Temp. of Refrigeration"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Lead_Expiration_Date
			(
    			type = date
				displayname = "Lead Expiration Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 3   
				width = medium
			)
			Rotaion_Number
			(
    			type = text
				displayname = "Rotaion Number"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Manifest_Registration_Number
			(
    			type = text
				displayname = "Manifest Registration Number"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Container_Size
			(
				type = picklist
				displayname = "Container Size"
				maxchar = 100
				values = {"None","20","40","55","45"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			Place_of_Load
			(
				type = picklist
				displayname = "Place of Load"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","Andorra","Angola","Antigua & Deps","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Central African Rep","Chad","Chile","China","Colombia","Comoros","Congo","Congo {Democratic Rep}","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland {Republic}","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea North","Korea South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar, {Burma}","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russian Federation","Rwanda","St Kitts & Nevis","St Lucia","Saint Vincent & the Grenadines","Samoa","San Marino","Sao Tome & Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad & Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			Port_of_Discharge
			(
				type = picklist	
				displayname = "Port of Discharge"
				values  = New_Port.ID
    			displayformat = [Port_Name]
				sortorder = ascending
	 			row = 1
	 			column = 3   
				width = medium
			)
			MFD_Required
			(
    			type = checkbox
				displayname = "MFD Required"
				initial value = false
	 			row = 1
	 			column = 3   
				width = medium
			)
			TRN
			(
    			type = text
	 			row = 1
	 			column = 3   
				width = medium
			)
			Rating
			(
				type = picklist
				maxchar = 100
				values = {"None","Acquired","Active","Market Failed","Project Cancelled","Shut Down"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			No_of_Employees
			(
				type = number
				displayname = "No. of Employees"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Commodity_Details
			(
				type = section
				displayname = "Commodity Details"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			USED_OR_NEW_INDICATOR
			(
				type = picklist
				displayname = "USED OR NEW INDICATOR"
				maxchar = 100
				values = {"None","U - USED COMMODITY","N - NEW COMMODITY"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			Dangerous_Goods_indicator
			(
				type = picklist
				displayname = "Dangerous Goods indicator"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			Carrier_Vessel
			(
    			type = text
				displayname = "Carrier (Vessel)"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Vessel_Name
			(
				type = picklist	
				displayname = "Vessel Name"
				values  = New_Vessel.ID
    			displayformat = [Vessel_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Dangerous_Goods
			(
				type = picklist
				displayname = "Dangerous Goods"
				maxchar = 100
				values = {"None","Yes","No"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Storage_request_for_Dangerous_Goods
			(
    			type = text
				displayname = "Storage request for Dangerous Goods"
	 			row = 2
	 			column = 2   
				width = medium
			)
			UN_Number
			(
    			type = text
				displayname = "UN Number"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Voyage_Number
			(
    			type = text
				displayname = "Voyage Number"
	 			row = 2
	 			column = 2   
				width = medium
			)
			IMO_Class
			(
				type = picklist
				displayname = "IMO Class"
				maxchar = 100
				values = {"None","Explosives with Mass Explosion Hazards","Explosives with a Fire"}
	 			row = 2
	 			column = 3   
				width = medium
			)
			Storage_Request_Code
			(
				type = picklist
				displayname = "Storage Request Code"
				maxchar = 100
				values = {"None","D - Direct Delivery","S - Storage in Sheds","Y - Storage in Yards"}
	 			row = 2
	 			column = 3   
				width = medium
			)
			General_Description
			(
    			type = textarea
				displayname = "General Description"
				height = 100px
	 			row = 2
	 			column = 3   
				width = medium
			)
			Package_Details
			(
				type = section
				displayname = "Package Details"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Package_Code
			(
				type = picklist
				displayname = "Package Code"
				maxchar = 100
				values = {"None","BAG","BAL","BDL","BLK","BOB","BOT","BOX","BRL","BRQ","CAN","CBY","CDR","CLI","COI","CRT","CSE","CSK","CASKS","CTR","CYL","DRM","DZN","FDR","ITM","JOT","KEG","MDL","MDR","PAL","PCL","PCS","PDR","PKG","PKT","PLT","REL","ROL","SAK","SET","SHT","SKD","SPK","SPL","STR","TCH","TON","UNT"}
	 			row = 3
	 			column = 1   
				width = medium
			)
			Package_Description
			(
				type = picklist
				displayname = "Package Description"
				maxchar = 100
				values = {"None","BAGS","BALES","BUNDLES","BULK LIQUID","BLOCKS","BOBBIN","BOATS","BOXES","BARREL","BRIQUETTES","BULK SOLID","BULK SOLID/LIQUID","CANS","CARBOY","CABLE DRUM","COLLI","COILS","CRATES","CASES","CASKS","CARTONS","CONTAINER","CYLINDERS","DRUMS","DOZENS","FLEXITANK/CONTAINERCOMBINATION","FIBRE DRUM","INTERMEDIATE BULK CONTAINER","ITEM","JOTTAS","KEGS","LOTS","LOOSE","LIFT VAN","MODULES","METAL DRUMS","METRIC TON","NUMBERS","PAIL","PARCEL","PIECES","PLASTIC DRUM","PACKAGES","PACKET","PALLET","REEL","ROLLS","SACKS","SETS","SHEETS","SKID","STEEL PACKAGES","STEEL PLATES","STEEL TRUNKS","TEA CHEST","UNIT"}
	 			row = 3
	 			column = 2   
				width = medium
			)
			Number_of_Package
			(
				type = number
				displayname = "Number of Package"
	 			row = 3
	 			column = 3   
				width = medium
			)
			Lead_Address_Information
			(
				type = section
				displayname = "Lead Address Information"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			Street
			(
    			type = text
	 			row = 4
	 			column = 1   
				width = medium
			)
			Country
			(
				type = picklist
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","Andorra","Angola","Antigua & Deps","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Central African Rep","Chad","Chile","China","Colombia","Comoros","Congo","Congo {Democratic Rep}","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland {Republic}","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea North","Korea South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar, {Burma}","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russian Federation","Rwanda","St Kitts & Nevis","St Lucia","Saint Vincent & the Grenadines","Samoa","San Marino","Sao Tome & Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad & Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"}
	 			row = 4
	 			column = 1   
				width = medium
			)
			City
			(
    			type = text
	 			row = 4
	 			column = 2   
				width = medium
			)
			Zip_Code
			(
    			type = text
				displayname = "Zip Code"
	 			row = 4
	 			column = 2   
				width = medium
			)
			State
			(
    			type = text
	 			row = 4
	 			column = 3   
				width = medium
			)
			Shipper_Address_Information
			(
				type = section
				displayname = "Shipper Address Information"
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			Shipper_Name
			(
    			type = text
				displayname = "Shipper Name"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Shipper_City
			(
    			type = text
				displayname = "Shipper City"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Shipper_Street
			(
    			type = text
				displayname = "Shipper Street"
	 			row = 5
	 			column = 2   
				width = medium
			)
			Shipper_Country
			(
				type = picklist
				displayname = "Shipper Country"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","Andorra","Angola","Antigua & Deps","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Central African Rep","Chad","Chile","China","Colombia","Comoros","Congo","Congo {Democratic Rep}","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland {Republic}","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea North","Korea South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar, {Burma}","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russian Federation","Rwanda","St Kitts & Nevis","St Lucia","Saint Vincent & the Grenadines","Samoa","San Marino","Sao Tome & Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad & Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"}
	 			row = 5
	 			column = 2   
				width = medium
			)
			Shipper_State
			(
    			type = text
				displayname = "Shipper State"
	 			row = 5
	 			column = 3   
				width = medium
			)
			Shipper_Zip_Code
			(
    			type = text
				displayname = "Shipper Zip Code"
	 			row = 5
	 			column = 3   
				width = medium
			)
			Consignee_Address_Information
			(
				type = section
				displayname = "Consignee Address Information"
				visibility = true
	 			row = 6
	 			column = 0   
				width = medium
			)
			Consignee_Name
			(
    			type = text
				displayname = "Consignee Name"
	 			row = 6
	 			column = 1   
				width = medium
			)
			Consignee_State
			(
    			type = text
				displayname = "Consignee State"
	 			row = 6
	 			column = 1   
				width = medium
			)
			Consignee_Street
			(
    			type = text
				displayname = "Consignee Street"
	 			row = 6
	 			column = 2   
				width = medium
			)
			Consignee_Zip_Code
			(
    			type = text
				displayname = "Consignee Zip Code"
	 			row = 6
	 			column = 2   
				width = medium
			)
			Consignee_City
			(
    			type = text
				displayname = "Consignee City"
	 			row = 6
	 			column = 3   
				width = medium
			)
			Consignee_Country
			(
				type = picklist
				displayname = "Consignee Country"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","Andorra","Angola","Antigua & Deps","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Central African Rep","Chad","Chile","China","Colombia","Comoros","Congo","Congo {Democratic Rep}","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland {Republic}","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea North","Korea South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar, {Burma}","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russian Federation","Rwanda","St Kitts & Nevis","St Lucia","Saint Vincent & the Grenadines","Samoa","San Marino","Sao Tome & Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad & Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"}
	 			row = 6
	 			column = 3   
				width = medium
			)
			Description_Information
			(
				type = section
				displayname = "Description Information"
				visibility = true
	 			row = 7
	 			column = 0   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 7
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-settings-gear-64"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Quotation
	{
		icon = "tech-desktop"
		form New_Quotation
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Quote_Information
			(
				type = section
				displayname = "Quote Information"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Quote_Owner
			(
				type = picklist	
				displayname = "Quote Owner"
				values  = New_User.ID
    			displayformat = [User_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Deal_Name
			(
				type = picklist	
				displayname = "Deal Name"
				values  = New_Deal.ID
    			displayformat = [Deal_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Mode_of_Shipment
			(
				type = picklist
				displayname = "Mode of Shipment"
				maxchar = 100
				values = {"None","Import - Freight forwarding","Export - Freight forwarding","Cross Trade","Import - NVOCC","Export - NVOCC","Container Sale","Feeder","Warehouse","Others"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Cargo_Type
			(
				type = picklist
				displayname = "Cargo Type"
				maxchar = 100
				values = {"None","G - GENERAL CARGO","F- FTL - Load","L - LTL - Load","F - FCL CONTAINER","L - LCL CONTAINER","M - EMPTY CONTAINER","B - BULK SOLID","Q - BULK LIQUID","R - RO-RO UNIT","P - PASSENGER","CONSOLIDATED CARGO ( GROUPAGE CARGO )"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Quote_Stage
			(
				type = picklist
				displayname = "Quote Stage"
				maxchar = 100
				values = {"None","Draft","Negotiation","Delivered","On Hold","Confirmed","Closed Won","Closed Lost"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have ETA
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Quote_Number
			(
    			type = text
				displayname = "Quote Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Start_Date
			(
    			type = date
				displayname = "Start Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Account_Name
			(
				type = picklist	
				displayname = "Account Name"
				values  = New_Account.ID
    			displayformat = [Account_Name]
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
			No_of_Container_Reqd
			(
				type = number
				displayname = "No of Container Reqd"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Contact_Name
			(
				type = picklist	
				displayname = "Contact Name"
				values  = New_Contact.ID
    			displayformat = [" " + Contact_Name.prefix + " " + Contact_Name.first_name + " " + Contact_Name.last_name + " " + Contact_Name.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Subject_field
			(
    			type = text
				displayname = "Subject"
	 			row = 1
	 			column = 3   
				width = medium
			)
			must have Valid_Untill
			(
    			type = date
				displayname = "Valid Untill"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 3   
				width = medium
			)
			Sub_Mode_of_Shipment
			(
				type = picklist
				displayname = "Sub Mode of Shipment"
				maxchar = 100
				values = {"None","Air","Land","Sea","Road","Others"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			If_Other_Transactions_Pls_Specify
			(
    			type = text
				displayname = "If Other Transactions Pls Specify"
	 			row = 1
	 			column = 3   
				width = medium
			)
			must have ETD
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 3   
				width = medium
			)
			Pickup_Address
			(
				type = section
				displayname = "Pickup Address"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Pickup_Street
			(
    			type = text
				displayname = "Pickup Street"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Pickup_Zip_Code
			(
    			type = text
				displayname = "Pickup Zip Code"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Pickup_City
			(
    			type = text
				displayname = "Pickup City"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Pickup_Country
			(
				type = picklist
				displayname = "Pickup Country"
				maxchar = 100
				values = {"Others","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Korea","Spain","Sri Lanka","Sudan","Suriname","Svalbard and Jan Mayen","Eswatini","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Democratic Republic of the Congo","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Virgin Islands","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Vatican","Venezuela","Vietnam","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe","Aland Islands"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Pickup_State
			(
    			type = text
				displayname = "Pickup State"
	 			row = 2
	 			column = 3   
				width = medium
			)
			Address_Information
			(
				type = section
				displayname = "Address Information"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Billing_Street
			(
    			type = text
				displayname = "Billing Street"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Billing_City
			(
    			type = text
				displayname = "Billing City"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Billing_State
			(
    			type = text
				displayname = "Billing State"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Billing_Code
			(
    			type = text
				displayname = "Billing Code"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Billing_Country1
			(
    			type = text
				displayname = "Billing Country"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Shipping_Street
			(
    			type = text
				displayname = "Shipping Street"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Shipping_Street1
			(
    			type = text
				displayname = "Shipping Street"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Shipping_State
			(
    			type = text
				displayname = "Shipping State"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Shipping_Code
			(
    			type = text
				displayname = "Shipping Code"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Shipping_Country
			(
    			type = text
				displayname = "Shipping Country"
	 			row = 3
	 			column = 2   
				width = medium
			)
			Transportation_Details
			(
				type = section
				displayname = "Transportation Details"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			Port_of_Loading
			(
				type = picklist	
				displayname = "Port of Loading"
				values  = New_Port.ID
    			displayformat = [Port_Name]
				sortorder = ascending
	 			row = 4
	 			column = 1   
				width = medium
			)
			Place_of_Delivery
			(
				type = picklist
				displayname = "Place of Delivery"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands"}
	 			row = 4
	 			column = 1   
				width = medium
			)
			Incoterms
			(
				type = picklist
				maxchar = 100
				values = {"None","CFR","CIF","CIP","CPT","DAP","DDP","DPU","EXW","FAS","FCA","FOB"}
	 			row = 4
	 			column = 1   
				width = medium
			)
			Port_of_Discharge
			(
				type = picklist	
				displayname = "Port of Discharge"
				values  = New_Port.ID
    			displayformat = [Port_Name]
				sortorder = ascending
	 			row = 4
	 			column = 2   
				width = medium
			)
			Gate_Way_Airport
			(
				type = picklist	
				displayname = "Gate Way Airport"
				values  = New_Airport.ID
    			displayformat = [Airport_Name]
				sortorder = ascending
	 			row = 4
	 			column = 2   
				width = medium
			)
			Movement_Type
			(
				type = picklist
				displayname = "Movement Type"
				maxchar = 100
				values = {"None","Port - Factory","Door to POD","CFS-CFS","Custom Clearance","CY-CY","CY-Door","CY-Port","Door- Port","DR-CY","DDU","Door to Door","House to Factory"}
	 			row = 4
	 			column = 2   
				width = medium
			)
			Place_of_Loading
			(
				type = picklist
				displayname = "Place of Loading"
				maxchar = 100
				values = {"Choice 3","None","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands"}
	 			row = 4
	 			column = 3   
				width = medium
			)
			Destination_Airport
			(
				type = picklist	
				displayname = "Destination Airport"
				values  = New_Airport.ID
    			displayformat = [Airport_Name]
				sortorder = ascending
	 			row = 4
	 			column = 3   
				width = medium
			)
			Package_Details
			(
				type = section
				displayname = "Package Details"
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			Width_of_Cargo_cm
			(
				type = decimal
				displayname = "Width of Cargo (cm)"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Number_of_Packages
			(
				type = number
				displayname = "Number of Packages"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Chargeable_Weight_KG
			(
				type = decimal
				displayname = "Chargeable Weight (KG)"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Length_of_Cargo_cm
			(
				type = decimal
				displayname = "Length of Cargo (cm)"
	 			row = 5
	 			column = 2   
				width = medium
			)
			Volume_CBM
			(
				type = decimal
				displayname = "Volume (CBM)"
	 			row = 5
	 			column = 2   
				width = medium
			)
			Description_of_Goods
			(
    			type = text
				displayname = "Description of Goods"
	 			row = 5
	 			column = 2   
				width = medium
			)
			Height_of_Cargo_cm
			(
				type = decimal
				displayname = "Height of Cargo (cm)"
	 			row = 5
	 			column = 3   
				width = medium
			)
			Gross_Weight_KG
			(
				type = decimal
				displayname = "Gross Weight (KG)"
	 			row = 5
	 			column = 3   
				width = medium
			)
			HS_Code
			(
				type = picklist	
				displayname = "HS Code"
				values  = New_HS_Codes_Master.ID
    			displayformat = [HS_Code]
				sortorder = ascending
	 			row = 5
	 			column = 3   
				width = medium
			)
			must have Quoted_Items
			(
				type = grid
				displayname = "Quoted Items"
				Product_Name
				(
					type = picklist	
					displayname = "Product Name"
					values  = New_Product.ID
    				displayformat = [Product_Name]
					sortorder = ascending
					width = medium
				)
				Quantity
				(
					type = decimal
					initial value = 0
					width = medium
				)
				List_Price
				(
					displayname = "List Price"
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Amount
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Discount
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Tax_Rate
				(
					type = picklist
					displayname = "Tax Rate (%)"
					maxchar = 100
					values = {"0","5"}
					sortorder = ascending
					width = medium
				)
				Tax
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Total
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
	 			row = 6
	 			column = 1   
				width = medium
			)
			Section
			(
				type = section
				visibility = true
	 			row = 7
	 			column = 0   
				width = medium
			)
			Sub_Total
			(
				displayname = "Sub Total"
				type = USD
				format = commadotwestern
	 			row = 7
	 			column = 1   
				width = medium
			)
			Tax_Total
			(
				displayname = "Tax Total"
				type = USD
				format = commadotwestern
	 			row = 7
	 			column = 1   
				width = medium
			)
			Grand_Total
			(
				displayname = "Grand Total"
				type = USD
				format = commadotwestern
	 			row = 7
	 			column = 1   
				width = medium
			)
			Developer_s_Section
			(
				type = section
				displayname = "Developer's Section"
				visibility = true
	 			row = 8
	 			column = 0   
				width = medium
			)
			Zoho_Books_Quote_ID
			(
    			type = text
	 			row = 8
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Products
	{
		icon = "shopping-gift"
		form New_Product
		{
			success message = "Product Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Product_Image
			(
    			type = image
				displayname = "Product Image"
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Product_Information
			(
				type = section
				displayname = "Product Information"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Product_Owner
			(
				type = picklist	
				displayname = "Product Owner"
				values  = New_User.ID
    			displayformat = [User_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Vendor_Name
			(
				type = picklist	
				displayname = "Vendor Name"
				values  = New_Vendor.ID
    			displayformat = [Vendor_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Product_Name
			(
    			type = text
				displayname = "Product Name"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Product_Active
			(
    			type = checkbox
				displayname = "Product Active"
				initial value = false
	 			row = 2
	 			column = 2   
				width = medium
			)
			Product_Code
			(
    			type = text
				displayname = "Product Code"
	 			row = 2
	 			column = 3   
				width = medium
			)
			must have Unit_of_Measurement
			(
				type = picklist
				displayname = "Unit of Measurement"
				maxchar = 100
				values = {"box","cm","dz","ft","g","in","kg","km","lb","mg","ml","m","pcs","nos","mm"}
	 			row = 2
	 			column = 3   
				width = medium
			)
			Developers_Section
			(
				type = section
				displayname = "Developers Section"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Zoho_Books_Item_ID
			(
    			type = text
	 			row = 3
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-gift"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Delivery_Orders
	{
		displayname= "Delivery Orders"
		icon = "shopping-delivery"
		form New_Delivery_Order
		{
			success message = "Delivery Order Added Successfully"
			field alignment = left
					hide = true
			Delivery_Order_Information
			(
				type = section
				displayname = "Delivery Order Information"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Delivery_Order_Owner
			(
				type = picklist	
				displayname = "Delivery Order Owner"
				values  = New_User.ID
    			displayformat = [User_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Deal_Name
			(
				type = picklist	
				displayname = "Deal Name"
				values  = New_Deal.ID
    			displayformat = [Deal_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Quote_Number
			(
				type = picklist	
				displayname = "Quote Number"
				values  = New_Quotation.ID
    			displayformat = [Quote_Number]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			MB_L_No
			(
    			type = text
				displayname = "MB/L No."
	 			row = 1
	 			column = 1   
				width = medium
			)
			Pending
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sales_Commission
			(
				displayname = "Sales Commission"
				type = USD
				format = commadotwestern
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have ETD
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Mode_of_Shipment
			(
				type = picklist
				displayname = "Mode of Shipment"
				maxchar = 100
				values = {"None","Import - Freight forwarding","Export - Freight forwarding","Cross Trade","Import - NVOCC","Export - NVOCC","Container Sale","Feeder","Warehouse","Others"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Shipment_Type
			(
				type = picklist
				displayname = "Shipment Type"
				maxchar = 100
				values = {"None","LCL","FLC","FTL","LTL"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Pickup_Street
			(
    			type = text
				displayname = "Pickup Street"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Movement_Type
			(
				type = picklist
				displayname = "Movement Type"
				maxchar = 100
				values = {"None","Port - Factory","Door to POD","CFS-CFS","Custom Clearance","CY-CY","CY-Door","CY-Port","Door- Port","DR-CY","DDU","Door to Door","House to Factory"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Length_of_Cargo_cm
			(
				type = decimal
				displayname = "Length of Cargo (cm)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Volume_CBM
			(
				type = decimal
				displayname = "Volume (CBM)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Notify_Party_1
			(
    			type = text
				displayname = "Notify Party 1"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description_of_Goods
			(
    			type = text
				displayname = "Description of Goods"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Delivery
			(
    			type = text
				displayname = "Delivery Order Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			SO_Nu
			(
				type = number
				displayname = "SO Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Customer_No
			(
    			type = text
				displayname = "Customer No."
	 			row = 1
	 			column = 2   
				width = medium
			)
			Due_Date
			(
    			type = date
				displayname = "Due Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			MM_No
			(
    			type = text
				displayname = "MM No."
	 			row = 1
	 			column = 2   
				width = medium
			)
			Excise_Duty
			(
				displayname = "Excise Duty"
				type = USD
				format = commadotwestern
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have ETA
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			If_Other_Transactions_Pls_Specify
			(
    			type = text
				displayname = "If Other Transactions Pls Specify"
	 			row = 1
	 			column = 2   
				width = medium
			)
			No_of_Container_Reqd
			(
				type = number
				displayname = "No of Container Reqd"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Pickup_State
			(
    			type = text
				displayname = "Pickup State"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Pickup_City
			(
    			type = text
				displayname = "Pickup City"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Pickup_Country
			(
				type = picklist
				displayname = "Pickup Country"
				maxchar = 100
				values = {"Other","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Korea","Spain","Sri Lanka","Sudan","Suriname","Svalbard and Jan Mayen","Eswatini","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Democratic Republic of the Congo","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Virgin Islands","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Vatican","Venezuela","Vietnam","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe","Aland Islands"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Incoterms
			(
				type = picklist
				maxchar = 100
				values = {"None","CFR","CIF","CIP","CPT","DAP","DDP","DPU","EXW","FAS","FCA","FOB"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Number_of_Packages
			(
				type = number
				displayname = "Number of Packages"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Subject_field
			(
    			type = text
				displayname = "Subject"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Purchase_Order
			(
    			type = text
				displayname = "Purchase Order"
	 			row = 1
	 			column = 3   
				width = medium
			)
			BL_No
			(
    			type = text
				displayname = "BL No."
	 			row = 1
	 			column = 3   
				width = medium
			)
			Contact_Name
			(
				type = picklist	
				displayname = "Contact Name"
				values  = New_Contact.ID
    			displayformat = [" " + Contact_Name.prefix + " " + Contact_Name.first_name + " " + Contact_Name.last_name + " " + Contact_Name.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 3   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"None","Created","Approved","Delivered","Cancelled"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			must have Account_Name
			(
				type = picklist	
				displayname = "Account Name"
				values  = New_Account.ID
    			displayformat = [Account_Name]
				sortorder = ascending
	 			row = 1
	 			column = 3   
				width = medium
			)
			Sub_Mode_of_Shipment
			(
				type = picklist
				displayname = "Sub Mode of Shipment"
				maxchar = 100
				values = {"None","Air","Land","Sea","Road","Others"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			Cargo_Type
			(
				type = picklist
				displayname = "Cargo Type"
				maxchar = 100
				values = {"None","G - GENERAL CARGO","F- FTL - Load","L - LTL - Load","F - FCL CONTAINER","L - LCL CONTAINER","M - EMPTY CONTAINER","B - BULK SOLID","Q - BULK LIQUID","R - RO-RO UNIT","P - PASSENGER","CONSOLIDATED CARGO ( GROUPAGE CARGO )"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			Pickup_Zip_Code
			(
    			type = text
				displayname = "Pickup Zip Code"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Width_of_Cargo_cm
			(
				type = decimal
				displayname = "Width of Cargo (cm)"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Height_of_Cargo_cm
			(
				type = decimal
				displayname = "Height of Cargo (cm)"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Gross_Weight_KG
			(
				type = decimal
				displayname = "Gross Weight (KG)"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Chargeable_Weight_KG
			(
				type = decimal
				displayname = "Chargeable Weight (KG)"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Agent_Name
			(
    			type = text
				displayname = "Agent Name"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Address_Information
			(
				type = section
				displayname = "Address Information"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Billing_Street
			(
    			type = text
				displayname = "Billing Street"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Billing_City
			(
    			type = text
				displayname = "Billing City"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Billing_State
			(
    			type = text
				displayname = "Billing State"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Billing_Code
			(
    			type = text
				displayname = "Billing Code"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Billing_Country
			(
    			type = text
				displayname = "Billing Country"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Shipping_Street
			(
    			type = text
				displayname = "Shipping Street"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Shipping_City
			(
    			type = text
				displayname = "Shipping City"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Shipping_State
			(
    			type = text
				displayname = "Shipping State"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Shipping_Code
			(
    			type = text
				displayname = "Shipping Code"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Shipping_Country
			(
    			type = text
				displayname = "Shipping Country"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Table_of_Containers
			(
				type = grid
				displayname = "Table of Containers"
				values  = New_Table_of_Container.ID
	 			row = 3
	 			column = 1   
				width = medium
			)
			must have Ordered_Items
			(
				type = grid
				displayname = "Ordered Items"
				Product_Name
				(
					type = picklist	
					displayname = "Product Name"
					values  = New_Product.ID
    				displayformat = [Product_Name]
					sortorder = ascending
					width = medium
				)
				Quantity
				(
					type = decimal
					initial value = 0
					width = medium
				)
				List_Price
				(
					displayname = "List Price"
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Amount
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Discount
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Tax_Rate
				(
					type = picklist
					displayname = "Tax Rate (%)"
					maxchar = 100
					values = {"0","5"}
					width = medium
				)
				Tax
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Total
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
	 			row = 4
	 			column = 1   
				width = medium
			)
			Section
			(
				type = section
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			Sub_Total
			(
				displayname = "Sub Total"
				type = USD
				format = commadotwestern
	 			row = 5
	 			column = 1   
				width = medium
			)
			Tax_Total
			(
				displayname = "Tax Total"
				type = USD
				format = commadotwestern
	 			row = 5
	 			column = 1   
				width = medium
			)
			Grand_Total
			(
				displayname = "Grand Total"
				type = USD
				format = commadotwestern
	 			row = 5
	 			column = 1   
				width = medium
			)
			Terms_and_Conditions
			(
				type = section
				displayname = "Terms and Conditions"
				visibility = true
	 			row = 6
	 			column = 0   
				width = medium
			)
			Terms_and_Conditions2
			(
    			type = textarea
				displayname = "Terms and Conditions"
				height = 100px
	 			row = 6
	 			column = 1   
				width = medium
			)
			Free_Days
			(
				type = section
				displayname = "Free Days"
				visibility = true
	 			row = 7
	 			column = 0   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 7
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-delivery-time"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Configurations
	{
		icon = "ui-1-settings-gear-64"
		default list Mode_to_SubMode
		{
			displayName = "Mode_to_SubMode"
			show all rows from Map_Dependency_Mode    
			(
				Mode_of_Shipment as "Mode of Shipment"
				Sub_Mode_of_Shipment as "Sub Mode of Shipment"
			)
			options
			(
				icon = "ui-1-settings-gear-64"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Mode_of_Shipment as "Mode of Shipment"
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Mode_of_Shipment as "Mode of Shipment"
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Submode_to_CT_ST_CMT
		{
			displayName = "Submode_to_CT_ST_CMT"
			show all rows from Map_Submode    
			(
				Sub_Mode_of_Shipment as "Sub Mode of Shipment"
				Cargo_Type as "Cargo Type"
				Shipment_Terms as "Shipment Terms"
				Container_Movement_Type as "Container Movement Type"
			)
			options
			(
				icon = "ui-1-settings-gear-64"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Cargo_Type as "Cargo Type"
							Shipment_Terms as "Shipment Terms"
							Container_Movement_Type as "Container Movement Type"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Sub_Mode_of_Shipment as "Sub Mode of Shipment"
							Cargo_Type as "Cargo Type"
							Shipment_Terms as "Shipment Terms"
							Container_Movement_Type as "Container Movement Type"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section New_Invoice
	{
		icon = "tech-desktop"
		form New_Invoice
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Invoice_Information
			(
				type = section
				displayname = "Invoice Information"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Invoice_Owner
			(
				type = picklist	
				displayname = "Invoice Owner"
				values  = New_User.ID
    			displayformat = [User_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Delivery_Order
			(
				type = picklist	
				displayname = "Delivery Order"
				values  = New_Delivery_Order.ID
    			displayformat = [Delivery]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Due_Date
			(
    			type = date
				displayname = "Due Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Deal_Name
			(
				type = picklist	
				displayname = "Deal Name"
				values  = New_Deal.ID
    			displayformat = [Deal_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact_Name
			(
				type = picklist	
				displayname = "Contact Name"
				values  = New_Contact.ID
    			displayformat = [" " + Contact_Name.prefix + " " + Contact_Name.first_name + " " + Contact_Name.last_name + " " + Contact_Name.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Invoice_Number
			(
    			type = text
				displayname = "Invoice Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Invoice_Date
			(
    			type = date
				displayname = "Invoice Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			Excise_Duty
			(
				displayname = "Excise Duty"
				type = USD
				format = commadotwestern
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Account_Name
			(
				type = picklist	
				displayname = "Account Name"
				values  = New_Account.ID
    			displayformat = [Account_Name]
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
			Mode_of_Shipment
			(
				type = picklist
				displayname = "Mode of Shipment"
				maxchar = 100
				values = {"None","Import - Freight forwarding","Export - Freight forwarding","Cross Trade","Import - NVOCC","Export - NVOCC","Container Sale","Feeder","Warehouse","Others"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Subject_field
			(
    			type = text
				displayname = "Subject"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Purchase_Order
			(
    			type = text
				displayname = "Purchase Order"
	 			row = 1
	 			column = 3   
				width = medium
			)
			Sales_Commission
			(
				displayname = "Sales Commission"
				type = USD
				format = commadotwestern
	 			row = 1
	 			column = 3   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"None","Created","Approved","Delivered","Cancelled"}
	 			row = 1
	 			column = 3   
				width = medium
			)
			Address_Information
			(
				type = section
				displayname = "Address Information"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Billing_Street
			(
    			type = text
				displayname = "Billing Street"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Billing_City
			(
    			type = text
				displayname = "Billing City"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Billing_State
			(
    			type = text
				displayname = "Billing State"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Billing_Code
			(
    			type = text
				displayname = "Billing Code"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Billing_Country
			(
    			type = text
				displayname = "Billing Country"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Shipping_Street
			(
    			type = text
				displayname = "Shipping Street"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Shipping_City
			(
    			type = text
				displayname = "Shipping City"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Shipping_State
			(
    			type = text
				displayname = "Shipping State"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Shipping_Code
			(
    			type = text
				displayname = "Shipping Code"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Shipping_Country
			(
    			type = text
				displayname = "Shipping Country"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Table_of_Containers
			(
				type = grid
				displayname = "Table of Containers"
				values  = New_Table_of_Container.ID
	 			row = 3
	 			column = 1   
				width = medium
			)
			must have Invoiced_Items
			(
				type = grid
				displayname = "Invoiced Items"
				Product_Name
				(
					type = picklist	
					displayname = "Product Name"
					values  = New_Product.ID
    				displayformat = [Product_Name]
					sortorder = ascending
					width = medium
				)
				Quantity
				(
					type = decimal
					initial value = 0
					width = medium
				)
				List_Price
				(
					displayname = "List Price"
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Amount
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Discount
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Tax_Rate
				(
					type = picklist
					displayname = "Tax Rate (%)"
					maxchar = 100
					values = {"0","5"}
					width = medium
				)
				Tax
				(
					type = USD
					format = commadotwestern
					initial value = 0.00
					width = medium
				)
				Total
				(
					type = USD
					format = commadotwestern
					width = medium
				)
	 			row = 4
	 			column = 1   
				width = medium
			)
			Section
			(
				type = section
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			Sub_Total
			(
				displayname = "Sub Total"
				type = USD
				format = commadotwestern
	 			row = 5
	 			column = 1   
				width = medium
			)
			Tax_Total
			(
				displayname = "Tax Total"
				type = USD
				format = commadotwestern
	 			row = 5
	 			column = 1   
				width = medium
			)
			Grand_Total
			(
				displayname = "Grand Total"
				type = USD
				format = commadotwestern
	 			row = 5
	 			column = 1   
				width = medium
			)
			Terms_and_Conditions
			(
				type = section
				displayname = "Terms and Conditions"
				visibility = true
	 			row = 6
	 			column = 0   
				width = medium
			)
			Terms_and_Conditions2
			(
    			type = textarea
				displayname = "Terms and Conditions"
				height = 100px
	 			row = 6
	 			column = 1   
				width = medium
			)
			Description_Information
			(
				type = section
				displayname = "Description Information"
				visibility = true
	 			row = 7
	 			column = 0   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 7
	 			column = 1   
				width = medium
			)
			Developers_Section
			(
				type = section
				displayname = "Developers Section"
				visibility = true
	 			row = 8
	 			column = 0   
				width = medium
			)
			Zoho_Books_Invoice_ID
			(
    			type = text
	 			row = 8
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Vessel
	{
		icon = "tech-desktop"
		form New_Vessel
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			unique Vessel_Name
			(
    			type = text
				displayname = "Vessel Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_SOF
	{
		icon = "tech-desktop"
		form New_SOF
		{
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			STATEMENT_OF_FACTS
			(
				type = section
				displayname = "STATEMENT OF FACTS"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Vessel_Name
			(
				type = picklist	
				displayname = "Vessel Name"
				values  = New_Vessel.ID
    			displayformat = [Vessel_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			New_Port
			(
				type = picklist	
				values  = New_Port.ID
    			displayformat = [Port_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Type_of_Call
			(
    			type = text
				displayname = "Type of Call"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Appointment
			(
				type = picklist	
				values  = New_Deal.ID
    			displayformat = [Job_Card_No]
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have unique Voyage_Number
			(
    			type = text
				displayname = "Voyage Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Date_sof
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			DETAILS1
			(
				type = grid
				displayname = "DETAILS"
				Date_details
				(
    				type = date
					displayname = "Date"
					alloweddays = 0,1,2,3,4,5,6
					width = medium
				)
				Time
				(
    				type = time
					timedisplayoptions = "hh:mm:ss" 
					width = medium
				)
				Particulars
				(
    				type = text
					width = medium
				)
	 			row = 2
	 			column = 1   
				width = medium
			)
			DRAFT_ON_ARRIVAL
			(
				type = section
				displayname = "DRAFT ON ARRIVAL"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			FWD
			(
				type = decimal
				displayname = "FWD (in M)"
	 			row = 3
	 			column = 1   
				width = medium
			)
			AFT
			(
				type = decimal
				displayname = "AFT (in M)"
	 			row = 3
	 			column = 1   
				width = medium
			)
			DRAFT_ON_DEPARTURE
			(
				type = section
				displayname = "DRAFT ON DEPARTURE"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			FWD2
			(
				type = decimal
				displayname = "FWD (in M)"
	 			row = 4
	 			column = 1   
				width = medium
			)
			AFT2
			(
				type = decimal
				displayname = "AFT (in M)"
	 			row = 4
	 			column = 1   
				width = medium
			)
			BUNKERS_ON_ARRIVAL
			(
				type = section
				displayname = "BUNKERS ON ARRIVAL"
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			FO
			(
				type = decimal
				displayname = "FO (in MT)"
	 			row = 5
	 			column = 1   
				width = medium
			)
			DO
			(
				type = decimal
				displayname = "DO (in MT)"
	 			row = 5
	 			column = 1   
				width = medium
			)
			FW
			(
				type = decimal
				displayname = "FW (in MT)"
	 			row = 5
	 			column = 1   
				width = medium
			)
			BUNKERS_ON_DEPARTURE
			(
				type = section
				displayname = "BUNKERS ON DEPARTURE"
				visibility = true
	 			row = 6
	 			column = 0   
				width = medium
			)
			FO2
			(
				type = decimal
				displayname = "FO (in MT)"
	 			row = 6
	 			column = 1   
				width = medium
			)
			DO2
			(
				type = decimal
				displayname = "DO (in MT)"
	 			row = 6
	 			column = 1   
				width = medium
			)
			FW2
			(
				type = decimal
				displayname = "FW (in MT)"
	 			row = 6
	 			column = 1   
				width = medium
			)
			TUGS
			(
				type = section
				visibility = true
	 			row = 7
	 			column = 0   
				width = medium
			)
			TUGS_ON_ARRIVAL
			(
				type = number
				displayname = "TUGS ON ARRIVAL"
	 			row = 7
	 			column = 1   
				width = medium
			)
			TUGS_ON_DEPARTURE
			(
				type = number
				displayname = "TUGS ON DEPARTURE"
	 			row = 7
	 			column = 2   
				width = medium
			)
			STOPPAGES
			(
				type = grid
				Date1
				(
    				type = date
					displayname = "Date"
					alloweddays = 0,1,2,3,4,5,6
					width = medium
				)
				FROM
				(
    				type = time
					timedisplayoptions = "hh:mm:ss" 
					width = medium
				)
				TO
				(
    				type = time
					timedisplayoptions = "hh:mm:ss" 
					width = medium
				)
				Description
				(
    				type = text
					width = medium
				)
	 			row = 8
	 			column = 1   
				width = medium
			)
			NO_CARGO_OPERATIONS
			(
				type = grid
				displayname = "NO CARGO OPERATIONS"
				Date2
				(
    				type = date
					displayname = "Date"
					alloweddays = 0,1,2,3,4,5,6
					width = medium
				)
				FROM2
				(
    				type = time
					displayname = "FROM"
					timedisplayoptions = "hh:mm:ss" 
					width = medium
				)
				TO2
				(
    				type = time
					displayname = "TO"
					timedisplayoptions = "hh:mm:ss" 
					width = medium
				)
				Description2
				(
    				type = text
					displayname = "Description"
					width = medium
				)
	 			row = 9
	 			column = 1   
				width = medium
			)
			REMARKS
			(
				type = section
				visibility = true
	 			row = 10
	 			column = 0   
				width = medium
			)
			Remarks1
			(
    			type = textarea
				displayname = "Remarks"
				height = 100px
	 			row = 10
	 			column = 1   
				width = medium
			)
			MASTER_REMARKS
			(
				type = section
				displayname = "MASTER REMARKS"
				visibility = true
	 			row = 11
	 			column = 0   
				width = medium
			)
			Master_Remarks1
			(
    			type = textarea
				displayname = "Master Remarks"
				height = 100px
	 			row = 11
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Tax_Rates
	{
		displayname= "New Tax Rates"
		icon = "shopping-cash-register"
		form New_Tax_Rate
		{
			displayname = "New Tax Rate"
			success message = "New Tax Rate Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Tax_Rate
			(
    			type = text
				displayname = "Tax Rate (%)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Zoho_Tax_ID
			(
				type = number
				displayname = "Zoho Tax ID"
				maxchar = 19
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-percentage-39"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section New_Containers
	{
		displayname= "New Containers"
		icon = "users-2-child"
		form New_Container
		{
			displayname = "New Container"
			success message = "New Container Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Container_Number
			(
    			type = text
				displayname = "Container Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Container_Seal_Number
			(
    			type = text
				displayname = "Container Seal Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Container_Type
			(
				type = picklist
				displayname = "Container Type"
				maxchar = 100
				values = {"None","Standard Container","Standard Container 40'HC (High cube)","Open Top Container","Flat Rack","Special Container","Refrigerated Container","Platform Container","Ventilated Container","Hardtop Container","Insulated Container"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Container_Size
			(
				type = picklist
				displayname = "Container Size"
				maxchar = 100
				values = {"None","20","40","55","45"}
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-child"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Table_of_Containers
	{
		displayname= "Table of Containers"
		icon = "furniture-table"
		form New_Table_of_Container
		{
			displayname = "New Table of Container"
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Container_No
			(
				type = picklist	
				displayname = "Container No"
				values  = New_Container.ID
    			displayformat = [Container_Number]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Container_Seal_Number
			(
				type = picklist	
				displayname = "Container Seal Number"
				values  = New_Container.ID
    			displayformat = [Container_Seal_Number]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Container_Type
			(
				type = picklist	
				displayname = "Container Type"
				values  = New_Container.ID
    			displayformat = [Container_Type]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Container_Size
			(
				type = picklist	
				displayname = "Container Size"
				values  = New_Container.ID
    			displayformat = [Container_Size]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			G_Wt
			(
				type = decimal
				displayname = "G.Wt"
	 			row = 1
	 			column = 1   
				width = medium
			)
			NetWt
			(
				type = decimal
	 			row = 1
	 			column = 1   
				width = medium
			)
			ETA
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Arrived_On
			(
    			type = date
				displayname = "Arrived On"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Port_of_Loading
			(
				type = picklist	
				displayname = "Port of Loading"
				values  = New_Port.ID
    			displayformat = [Port_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Port_of_Discharge
			(
				type = picklist	
				displayname = "Port of Discharge"
				values  = New_Port.ID
    			displayformat = [Port_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Gate_Way_Airport
			(
				type = picklist	
				displayname = "Gate Way Airport"
				values  = New_Airport.ID
    			displayformat = [Airport_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Destination_Airport
			(
				type = picklist	
				displayname = "Destination Airport"
				values  = New_Airport.ID
    			displayformat = [Airport_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Place_of_Loading
			(
				type = picklist
				displayname = "Place of Loading"
				maxchar = 100
				values = {"Choice 3","None","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Place_of_Delivery
			(
				type = picklist
				displayname = "Place of Delivery"
				maxchar = 100
				values = {"None","Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruban","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos Islands","Colombia","Comoros","Republic of the Congo","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Cote d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Heard Island and McDonald Islands","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","North Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Korea","Northern Ireland","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Serbia and Montenegro","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			DO_ID
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "furniture-table"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Table_of_Containers
		{
			displayName = "Table of Containers"
			show all rows from New_Table_of_Container    
			(
				Container_No as "Container No"
				Container_Seal_Number as "Container Seal Number"
				Container_Type as "Container Type"
				Container_Size as "Container Size"
				G_Wt as "G.Wt"
				NetWt
				DO_ID
				Port_of_Loading as "Port of Loading"
				Port_of_Discharge as "Port of Discharge"
				Gate_Way_Airport as "Gate Way Airport"
				Destination_Airport as "Destination Airport"
				Place_of_Loading as "Place of Loading"
				Place_of_Delivery as "Place of Delivery"
				ETA
				Arrived_On as "Arrived On"
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Container_No as "Container No"
							Container_Seal_Number as "Container Seal Number"
							Container_Type as "Container Type"
							Container_Size as "Container Size"
							G_Wt as "G.Wt"
							DO_ID
							Port_of_Loading as "Port of Loading"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Container_No as "Container No"
							Container_Seal_Number as "Container Seal Number"
							Container_Type as "Container Type"
							Container_Size as "Container Size"
							G_Wt as "G.Wt"
							NetWt
							DO_ID
							Port_of_Loading as "Port of Loading"
							Port_of_Discharge as "Port of Discharge"
							Gate_Way_Airport as "Gate Way Airport"
							Destination_Airport as "Destination Airport"
							Place_of_Loading as "Place of Loading"
							Place_of_Delivery as "Place of Delivery"
							ETA
							Arrived_On as "Arrived On"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}


		 functions
		 {
			 Deluge
			 {
				 map crt_job_card_id(int id)
                 {
                 	srch_deal = New_Deal[ID == id];
                 	curYear = zoho.currentdate.getYear();
                 	if(srch_deal.Mode_of_Shipment == "Import - Freight forwarding" && srch_deal.Sub_Mode_of_Shipment == "Air")
                 	{
                 		jobNumber = "IFA/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Import - Freight forwarding" && srch_deal.Sub_Mode_of_Shipment == "Land")
                 	{
                 		jobNumber = "IFL/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Import - Freight forwarding" && srch_deal.Sub_Mode_of_Shipment == "Sea")
                 	{
                 		jobNumber = "IFS/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	//.................Export - Freight forwarding
                 	else if(srch_deal.Mode_of_Shipment == "Export - Freight forwarding" && srch_deal.Sub_Mode_of_Shipment == "Air")
                 	{
                 		jobNumber = "EFA/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Export - Freight forwarding" && srch_deal.Sub_Mode_of_Shipment == "Land")
                 	{
                 		jobNumber = "EFL/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Export - Freight forwarding" && srch_deal.Sub_Mode_of_Shipment == "Sea")
                 	{
                 		jobNumber = "EFS/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	//......................Cross Trade
                 	else if(srch_deal.Mode_of_Shipment == "Cross Trade" && srch_deal.Sub_Mode_of_Shipment == "Air")
                 	{
                 		jobNumber = "CTA/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Cross Trade" && srch_deal.Sub_Mode_of_Shipment == "Land")
                 	{
                 		jobNumber = "CTL/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Cross Trade" && srch_deal.Sub_Mode_of_Shipment == "Sea")
                 	{
                 		jobNumber = "CTS/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	//......................Import - NVOCC
                 	else if(srch_deal.Mode_of_Shipment == "Import - NVOCC" && srch_deal.Sub_Mode_of_Shipment == "Air")
                 	{
                 		jobNumber = "INA/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Import - NVOCC" && srch_deal.Sub_Mode_of_Shipment == "Land")
                 	{
                 		jobNumber = "INL/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Import - NVOCC" && srch_deal.Sub_Mode_of_Shipment == "Sea")
                 	{
                 		jobNumber = "INS/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	//......................Export - NVOCC
                 	else if(srch_deal.Mode_of_Shipment == "Export - NVOCC" && srch_deal.Sub_Mode_of_Shipment == "Air")
                 	{
                 		jobNumber = "ENA/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Export - NVOCC" && srch_deal.Sub_Mode_of_Shipment == "Land")
                 	{
                 		jobNumber = "ENL/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Export - NVOCC" && srch_deal.Sub_Mode_of_Shipment == "Sea")
                 	{
                 		jobNumber = "ENS/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	//CS
                 	else if(srch_deal.Mode_of_Shipment == "Container Sale" && srch_deal.Sub_Mode_of_Shipment == "NA")
                 	{
                 		jobNumber = "CS/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	//FE
                 	else if(srch_deal.Mode_of_Shipment == "Feeder" && srch_deal.Sub_Mode_of_Shipment == "NA")
                 	{
                 		jobNumber = "FE/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	//Warehouse
                 	else if(srch_deal.Mode_of_Shipment == "Warehouse" && srch_deal.Sub_Mode_of_Shipment == "NA")
                 	{
                 		jobNumber = "WS/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	//OS
                 	else if(srch_deal.Mode_of_Shipment == "Others" && srch_deal.Sub_Mode_of_Shipment == "Others")
                 	{
                 		jobNumber = "OS/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	//Custom Clearance
                 	else if(srch_deal.Mode_of_Shipment == "Custom Clearance" && srch_deal.Sub_Mode_of_Shipment == "Air")
                 	{
                 		jobNumber = "CCA/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Custom Clearance" && srch_deal.Sub_Mode_of_Shipment == "Land")
                 	{
                 		jobNumber = "CCL/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else if(srch_deal.Mode_of_Shipment == "Custom Clearance" && srch_deal.Sub_Mode_of_Shipment == "Sea")
                 	{
                 		jobNumber = "CCS/" + curYear + "/" + srch_deal.Auto_Number;
                 	}
                 	else
                 	{
                 		jobNumber = srch_deal.Auto_Number;
                 	}
                 	srch_deal.Job_Card_No=jobNumber;
                 	return Map();
                 }
				 void test()
                 {
                 	ft = New_Deal[ID == 4575951000000256052];
                 	info New_Container[ID == 4575951000000382003].Container_Number;
                 	// 	info ft.Account_Name;
                 	// 		get_cus = zoho.books.getRecords("contacts","840131996","cf_account_id_creator=" + ft.Account_Name,"zoho_book");
                 	// 		info get_cus.get("contacts").get(0).get("contact_id");
                 	// 	info get_cus.get("contacts").size();
                 	// 	src_proj = zoho.books.getRecords("projects","840131996","cf_deal_id_creator=" + "45759510000278003","zoho_book");
                 	// 	info src_proj.get("projects").size();
                 	// 	info zoho.loginuser;
                 	// 	info zoho.loginuserid;
                 	// 	info ft.Sub_Mode_of_Shipment;
                 }
				 map Zoho_Books_Cus_Updt2(int id)
                 {
                 	srch_acc = New_Account[ID == id];
                 	info srch_acc.Account_Name;
                 	dic = {"contact_name":srch_acc.Account_Name,"contact_type":"customer","customer_sub_type":"business","billing_address":{"city":srch_acc.Billing_City,"state":srch_acc.Billing_State,"zip":srch_acc.Billing_Code,"country":srch_acc.Billing_Country,"street1":srch_acc.Billing_Street},"shipping_address":{"city":srch_acc.Shipping_City,"state":srch_acc.Shipping_State,"zip":srch_acc.Shipping_Code,"country":srch_acc.Shipping_Country,"street1":srch_acc.Shipping_Street},"custom_fields":{{"label":"Account_ID_Creator","value":srch_acc.ID}}};
                 	get_cus = zoho.books.getRecords("contacts","840131996","cf_account_id_creator=" + srch_acc.ID,"zoho_book");
                 	if(get_cus.get("contacts").size() = 0)
                 	{
                 		crt_cus = zoho.books.createRecord("contacts","840131996",dic,"zoho_book");
                 		info crt_cus;
                 		srch_acc.Zoho_Books_Customer_ID=crt_cus.get("contact").get("contact_id");
                 	}
                 	return Map();
                 }
			 }
		 }




		workflow
		{
		form
		{
			pop_sub_mode_of_shipment as "pop_sub_mode_of_shipment"
			{
				type =  form
				form = New_Lead
				record event = on add or edit

				on user input of Mode_of_Shipment
				{
					actions 
					{
						custom deluge script
						(
											fetch_sub_mode = Map_Dependency_Mode[Mode_of_Shipment == input.Mode_of_Shipment].Sub_Mode_of_Shipment;
										input.Submode:ui.add(fetch_sub_mode.toList());
										// fetch_CT = Map_Submode[Sub_Mode_of_Shipment == input.Submode].Cargo_Type;
										// fetch_ST = Map_Submode[Sub_Mode_of_Shipment == input.Submode].Shipment_Terms;
										// fetch_CMT = Map_Submode[Sub_Mode_of_Shipment == input.Submode].Container_Movement_Type;
										// input.Cargo_Type:ui.add(fetch_CT.toList());
										// input.Shipment_Terms:ui.add(fetch_ST.toList());
										// input.Container_Movement_Type:ui.add(fetch_CMT.toList());
						)
					}
				}

			}
			pop_CT_ST_CMT as "pop_CT_ST_CMT"
			{
				type =  form
				form = New_Lead
				record event = on add or edit

				on user input of Submode
				{
					actions 
					{
						custom deluge script
						(
											fetch_CT = Map_Submode[Sub_Mode_of_Shipment == input.Submode].Cargo_Type;
										fetch_ST = Map_Submode[Sub_Mode_of_Shipment == input.Submode].Shipment_Terms;
										fetch_CMT = Map_Submode[Sub_Mode_of_Shipment == input.Submode].Container_Movement_Type;
										input.Cargo_Type:ui.add(fetch_CT.toList());
										input.Shipment_Terms:ui.add(fetch_ST.toList());
										input.Container_Movement_Type:ui.add(fetch_CMT.toList());
						)
					}
				}

			}
			Prevent_Duplicates as "Prevent_Duplicates"
			{
				type =  form
				form = Map_Dependency_Mode
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											fetch_md = Map_Dependency_Mode[Mode_of_Shipment == input.Mode_of_Shipment].Mode_of_Shipment;
										if(fetch_md == input.Mode_of_Shipment)
										{
											alert fetch_md + " - Already Recorded";
											cancel submit;
										}
						)
					}
				}

			}
			Prevent_Duplicates1 as "Prevent_Duplicates"
			{
				type =  form
				form = Map_Submode
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											fetch_md = Map_Submode[Sub_Mode_of_Shipment == input.Sub_Mode_of_Shipment].Sub_Mode_of_Shipment;
										if(fetch_md == input.Sub_Mode_of_Shipment)
										{
											alert fetch_md + " - Already Recorded";
											cancel submit;
										}
						)
					}
				}

			}
			Type_of_Container_Validat2 as "Type of Container Validation Rule (SFs)"
			{
				type =  form
				form = New_Lead
				record event = on add or edit

				field rules
				{
					actions  (Submode == "Sea")
					{
						show Type_of_Container,Slac_Indicator,Rotaion_Number,Message_Type,Port_of_Loading,Port_of_Discharge;
					}
					actions  (Submode == "Sea" && Mode_of_Shipment == "Import - NVOCC" || Mode_of_Shipment == "Export - NVOCC")
					{
						show BOX_Partnering_Line_Code,BOX_Partnering_Agent_Code,Manifest_Registration_Number;
					}
					actions  (Submode == "Air")
					{
						show Destination_Airport,Gate_Way_Airport;
					}
					actions  (Submode == "Land")
					{
						show Place_of_Load,Place_of_Delivery;
					}
					actions  (Cargo_Type == "CONSOLIDATED CARGO ( GROUPAGE CARGO )")
					{
						show Groupage_Sub_Category;
					}
					actions  (Dangerous_Goods == "Yes")
					{
						show Dangerous_Goods_indicator,Storage_request_for_Dangerous_Goods,UN_Number,IMO_Class;
					}
					actions  (Type_of_Container == "Refrigerated Container")
					{
						show Unit_of_Temperature,Min_Temp_of_Refrigeration,Max_Temp_of_Refrigeration;
					}
				}

			}
			Type_of_Container_Validat1 as "Type of Container Validation Rule (MFs)"
			{
				type =  form
				form = New_Lead
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Submode == "Sea" && input.Port_of_Loading == null && input.Carrier_Vessel == null && input.Port_of_Discharge == null)
										{
											alert "Port of Loading, Carrier (Vessel) and Port of Discharge are mandatory";
											cancel submit;
										}
										else if(input.Submode == "Sea" && input.Cargo_Type == "L - LCL CONTAINER" && input.Number_of_Package == null)
										{
											alert "Number of Package is mandatory";
											cancel submit;
										}
										else if(input.Submode == "Air" && input.Destination_Airport == null && input.Gate_Way_Airport == null)
										{
											alert "Destination Airport and Gate Way Airport are mandatory";
											cancel submit;
										}
										else if(input.Submode == "Land" && input.Place_of_Load == null && input.Place_of_Delivery == null)
										{
											alert "Place of Load and Place of Delivery are mandatory";
											cancel submit;
										}
						)
					}
				}

			}
			Min_Temp_Ref_Criteria as "Min_Temp_Ref_Criteria"
			{
				type =  form
				form = New_Lead
				record event = on add or edit

				on user input of Min_Temp_of_Refrigeration
				{
					actions 
					{
						custom deluge script
						(
											if(input.Min_Temp_of_Refrigeration >= 50)
										{
											alert "Min Temp. of Refrigeration should be below 50";
											input.Min_Temp_of_Refrigeration = null;
										}
						)
					}
				}

			}
			ETA_ETD as "ETA>ETD"
			{
				type =  form
				form = New_Lead
				record event = on add or edit

				on user input of ETA
				{
					actions 
					{
						custom deluge script
						(
											if(input.ETA < input.ETD && input.ETD != null)
										{
											alert "ETA must be greater than ETD";
											input.ETA = null;
											input.ETD = null;
										}
						)
					}
				}

			}
			ETD_ETA as "ETD<ETA"
			{
				type =  form
				form = New_Lead
				record event = on add or edit

				on user input of ETD
				{
					actions 
					{
						custom deluge script
						(
											if(input.ETD > input.ETA && input.ETA != null)
										{
											alert "ETA must be greater than ETD";
											input.ETD = null;
											input.ETA = null;
										}
						)
					}
				}

			}
			Lead_Owner_Default as "Lead_Owner_Default"
			{
				type =  form
				form = New_Lead
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											user_name = New_User[Email = zoho.loginuserid];
										input.Lead_Owner = user_name.ID;
										disable Lead_Owner;
										disable Account_ID;
										disable Is_Converted;
						)
					}
				}

			}
			disable_acc_owner as "disable_acc_owner"
			{
				type =  form
				form = New_Account
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(Lead_ID != null)
										{
											disable Account_Owner;
											disable Lead_ID;
										}
						)
					}
				}

			}
			disable_deal_owner as "disable_deal_owner"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(Lead_ID != null)
										{
											disable Deal_Owner;
											disable Lead_ID;
											disable Account_Name;
										}
										disable Job_Card_No;
						)
					}
				}

			}
			disable_lead_id as "disable_lead_id"
			{
				type =  form
				form = New_Contact
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(Lead_ID != null)
										{
											disable Lead_ID;
											disable Account_Name;
											disable Contact_Owner;
										}
						)
					}
				}

			}
			Updt_Valid_Till_Date as "Updt_Valid_Till_Date"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on success
				{
					actions  (Free_Days is not null)
					{
						custom deluge script
						(
											if(input.Free_Days != null)
										{
											free_days = input.Free_Days;
											input.DO_Valid_Till_Date = input.ETA.addDay(free_days);
										}
						)
					}
				}

			}
			updt_dimension as "updt_dimension"
			{
				type =  form
				form = New_Lead
				record event = on add or edit

				on success
				{
				}

			}
			Big_Deal_Alert as "Big_Deal_Alert"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on success
				{
					actions  (Amount >= 1000 && Probability == 100)
					{
						sendmail
						(
							from : "zoho.loginuserid"
							to : "zoho.adminuserid"
							subject : "Record Added or Updated"
							message : "<div><b>BIG DEAL HAS BEEN CREATED !!!</b><br></div><div><br></div><div>Deal Name -&nbsp;${Deal_Name}<br></div><div><br></div><div>Customer -&nbsp;${Account_Name}<br></div><div><br></div><div><span style=\"background-color:#ffffff\" class=\"highlight\">Amount - ${Amount}</span><br></div><div><br></div><div><span style=\"background-color:#ffffff\" class=\"highlight\">Due Date - ${Closing_Date}</span><br></div><div><br></div><div><span style=\"background-color:#ffffff\" class=\"highlight\">Deal Owner -&nbsp;${Deal_Owner}</span><br></div><div><br></div><div><br></div>"
						)
					}
				}

			}
			Zoho_Book_Customer_Update as "Zoho_Book_Customer_Update"
			{
				type =  form
				form = New_Account
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											dic = {"contact_persons":{{"email":input.Email}},"contact_name":input.Account_Name,"contact_type":"customer","customer_sub_type":"business","billing_address":{"city":input.Billing_City,"state":input.Billing_State,"zip":input.Billing_Code,"country":input.Billing_Country,"street1":input.Billing_Street},"shipping_address":{"city":input.Shipping_City,"state":input.Shipping_State,"zip":input.Shipping_Code,"country":input.Shipping_Country,"street1":input.Shipping_Street},"custom_fields":{{"label":"Account_ID_Creator","value":input.ID}}};
										get_cus = zoho.books.getRecords("contacts","840131996","cf_account_id_creator=" + input.ID,"zoho_book");
										if(get_cus.get("contacts").size() = 0)
										{
											crt_cus = zoho.books.createRecord("contacts","840131996",dic.toMap(),"zoho_book");
											info crt_cus;
											input.Zoho_Books_Customer_ID = crt_cus.get("contact").get("contact_id");
										}
										else
										{
											updt_cus = zoho.books.updateRecord("contacts","840131996",input.Zoho_Books_Customer_ID,dic.toMap(),"zoho_book");
											info updt_cus;
										}
						)
					}
				}

			}
			Zoho_Books_Project_Update as "Zoho_Books_Project_Update"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on success
				{
					actions  (Stage == "Closed Won")
					{
						custom deluge script
						(
											src_proj = zoho.books.getRecords("projects","840131996","cf_deal_id_creator=" + input.ID,"zoho_book");
										if(src_proj.get("projects").size() == 0)
										{
											get_cus = zoho.books.getRecords("contacts","840131996","cf_account_id_creator=" + input.Account_Name,"zoho_book");
											book_cus_id = get_cus.get("contacts").get(0).get("contact_id");
											// info book_cus_id;
											// info input.ID;
											prjctmp = Map();
											prjctmp.put("project_name",input.Job_Card_No);
											prjctmp.put("customer_id",book_cus_id);
											prjctmp.put("description","Project");
											prjctmp.put("billing_type","based_on_task_hours");
											user = Map();
											user.put("user_id","4776533000000084001");
											cus_field = Map();
											cus_field.put("label","deal_id_creator");
											cus_field.put("value",input.ID);
											prjctmp.put("custom_fields",{cus_field});
											prjctmp.put("users",{user});
											createProject = zoho.books.createRecord("projects","840131996",prjctmp);
											info createProject;
										}
						)
					}
				}

			}
			updt_total as "updt_total"
			{
				type =  form
				form = New_Quotation
				record event = on add or edit

				on user input of Quoted_Items.Quantity
				{
					actions 
					{
						custom deluge script
						(
											if(row.Quantity != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Quoted_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total2 as "updt_total2"
			{
				type =  form
				form = New_Quotation
				record event = on add or edit

				on user input of Quoted_Items.List_Price
				{
					actions 
					{
						custom deluge script
						(
											if(row.List_Price != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Quoted_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total3 as "updt_total3"
			{
				type =  form
				form = New_Quotation
				record event = on add or edit

				on user input of Quoted_Items.Tax
				{
					actions 
					{
						custom deluge script
						(
											if(row.Tax != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Quoted_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total4 as "updt_total4"
			{
				type =  form
				form = New_Quotation
				record event = on add or edit

				on user input of Quoted_Items.Discount
				{
					actions 
					{
						custom deluge script
						(
											if(row.Discount != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Quoted_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total1 as "updt_total"
			{
				type =  form
				form = New_Delivery_Order
				record event = on add or edit

				on user input of Ordered_Items.Quantity
				{
					actions 
					{
						custom deluge script
						(
											if(row.Quantity != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Ordered_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total5 as "updt_total2"
			{
				type =  form
				form = New_Delivery_Order
				record event = on add or edit

				on user input of Ordered_Items.List_Price
				{
					actions 
					{
						custom deluge script
						(
											if(row.List_Price != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Ordered_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total6 as "updt_total3"
			{
				type =  form
				form = New_Delivery_Order
				record event = on add or edit

				on user input of Ordered_Items.Discount
				{
					actions 
					{
						custom deluge script
						(
											if(row.Discount != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Ordered_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total7 as "updt_total4"
			{
				type =  form
				form = New_Delivery_Order
				record event = on add or edit

				on user input of Ordered_Items.Tax
				{
					actions 
					{
						custom deluge script
						(
											if(row.Tax != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Ordered_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total8 as "updt_total"
			{
				type =  form
				form = New_Invoice
				record event = on add or edit

				on user input of Invoiced_Items.Quantity
				{
					actions 
					{
						custom deluge script
						(
											if(row.Quantity != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Invoiced_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total9 as "updt_total2"
			{
				type =  form
				form = New_Invoice
				record event = on add or edit

				on user input of Invoiced_Items.List_Price
				{
					actions 
					{
						custom deluge script
						(
											if(row.List_Price != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Invoiced_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total10 as "updt_total3"
			{
				type =  form
				form = New_Invoice
				record event = on add or edit

				on user input of Invoiced_Items.Discount
				{
					actions 
					{
						custom deluge script
						(
											if(row.Discount != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Invoiced_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total11 as "updt_total4"
			{
				type =  form
				form = New_Invoice
				record event = on add or edit

				on user input of Invoiced_Items.Tax
				{
					actions 
					{
						custom deluge script
						(
											if(row.Tax != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + row.Tax - row.Discount;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Invoiced_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			auto_pop_vol as "auto_pop_vol"
			{
				type =  form
				form = New_Quotation
				record event = on add or edit

				on success
				{
					actions  (Number_of_Packages is not null || Mode_of_Shipment is not null || Sub_Mode_of_Shipment is not null || Length_of_Cargo_cm is not null || Width_of_Cargo_cm is not null || Height_of_Cargo_cm is not null || Gross_Weight_KG is not null)
					{
						custom deluge script
						(
											getLengthcrgo = input.Length_of_Cargo_cm;
										getwidthcrgo = input.Width_of_Cargo_cm;
										getHeightcrgo = input.Height_of_Cargo_cm;
										getNumberOfPackages = toDecimal(input.Number_of_Packages);
										if(input.Sub_Mode_of_Shipment == "Air")
										{
											volume_cbm = (getLengthcrgo * getwidthcrgo * getHeightcrgo) / 6000 * getNumberOfPackages;
										}
										else if(input.Sub_Mode_of_Shipment == "Sea")
										{
											if(input.Cargo_Type == "F - FCL CONTAINER")
											{
												volume_cbm = (getLengthcrgo * getwidthcrgo * getHeightcrgo) / 366 * getNumberOfPackages;
											}
											else
											{
												volume_cbm = (getLengthcrgo * getwidthcrgo * getHeightcrgo) / 1000 * getNumberOfPackages;
											}
										}
										else if(input.Sub_Mode_of_Shipment == "Land")
										{
											volume_cbm = (getLengthcrgo * getwidthcrgo * getHeightcrgo) / 3000 * getNumberOfPackages;
										}
										else
										{
											volume_cbm = 0.00;
										}
										volumeCBMroundToDecimal = volume_cbm.round(2);
										grossWeightKg = input.Gross_Weight_KG;
										if(volumeCBMroundToDecimal != null && grossWeightKg == null)
										{
											chargeableWeightKg = volumeCBMroundToDecimal;
										}
										else if(volumeCBMroundToDecimal == null && grossWeightKg != null)
										{
											chargeableWeightKg = grossWeightKg;
										}
										else if(volumeCBMroundToDecimal != null && grossWeightKg != null)
										{
											if(volumeCBMroundToDecimal > grossWeightKg)
											{
												chargeableWeightKg = volumeCBMroundToDecimal;
											}
											else if(volumeCBMroundToDecimal < grossWeightKg)
											{
												chargeableWeightKg = grossWeightKg;
											}
											else
											{
												chargeableWeightKg = grossWeightKg;
											}
										}
										else if(volumeCBMroundToDecimal == null && grossWeightKg == null)
										{
											chargeableWeightKg = 0.0;
										}
										input.Volume_CBM = volumeCBMroundToDecimal;
										input.Chargeable_Weight_KG = chargeableWeightKg;
						)
					}
				}

			}
			auto_pop_deal_fields as "auto_pop_deal_fields"
			{
				type =  form
				form = New_Quotation
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											deal_srch = New_Deal[ID == input.Deal_Name];
										input.Mode_of_Shipment = deal_srch.Mode_of_Shipment;
										input.Cargo_Type = deal_srch.Cargo_Type;
										input.Sub_Mode_of_Shipment = deal_srch.Sub_Mode_of_Shipment;
										input.No_of_Container_Reqd = deal_srch.No_of_Container_Reqd;
										input.ETA = deal_srch.ETA;
										input.ETD = deal_srch.ETD;
										input.Account_Name = deal_srch.Account_Name;
										input.Port_of_Loading = deal_srch.Port_of_Loading;
										input.Port_of_Discharge = deal_srch.Port_of_Discharge;
										input.Gate_Way_Airport = deal_srch.Gate_Way_Airport;
										input.Destination_Airport = deal_srch.Destination_Airport;
										input.Place_of_Loading = deal_srch.Place_of_Loading;
										input.Place_of_Delivery = deal_srch.Place_of_Delivery;
						)
					}
				}

			}
			auto_pop_quote_fields as "auto_pop_quote_fields"
			{
				type =  form
				form = New_Delivery_Order
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											srch_qt = New_Quotation[ID == input.Quote_Number];
										input.Deal_Name = srch_qt.Deal_Name;
										input.Mode_of_Shipment = srch_qt.Mode_of_Shipment;
										input.Sub_Mode_of_Shipment = srch_qt.Sub_Mode_of_Shipment;
										input.Cargo_Type = srch_qt.Cargo_Type;
										input.No_of_Container_Reqd = srch_qt.No_of_Container_Reqd;
										input.ETD = srch_qt.ETD;
										input.ETA = srch_qt.ETA;
										input.Account_Name = srch_qt.Account_Name;
										// input.Port_of_Load = srch_qt.Port_of_Loading;
										// input.Port_of_Discharge = srch_qt.Port_of_Discharge;
										// input.Gate_Way_Airport = srch_qt.Gate_Way_Airport;
										// input.Destination_Airport = srch_qt.Destination_Airport;
										// input.Place_of_Load = srch_qt.Place_of_Load;
										// input.Place_of_Delivery = srch_qt.Place_of_Delivery;
										for each  row2 in srch_qt.Quoted_Items
										{
											row1 = New_Delivery_Order.Ordered_Items();
											row1.Product_Name=row2.Product_Name;
											row1.Quantity=row2.Quantity;
											row1.List_Price=row2.List_Price;
											row1.Amount=row2.Amount;
											row1.Discount=row2.Discount;
											row1.Tax=row2.Tax;
											row1.Tax_Rate=row2.Tax_Rate;
											row1.Total=row2.Total;
											input.Ordered_Items.insert(row1);
										}
										input.Sub_Total = srch_qt.Sub_Total;
										input.Tax_Total = srch_qt.Tax_Total;
										input.Grand_Total = srch_qt.Grand_Total;
						)
					}
				}

			}
			zoho_book_item_updt as "zoho_book_item_updt"
			{
				type =  form
				form = New_Product
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											dic = {"name":input.Product_Name,"sku":input.Product_Code,"product_type":"goods","unit":input.Unit_of_Measurement,"rate":0,"custom_fields":{{"label":"Product_ID_Creator","value":input.ID}}};
										get_item = zoho.books.getRecords("items","840131996","cf_product_id_creator=" + input.ID,"zoho_book");
										if(get_item.get("items").size() = 0)
										{
											crt_item = zoho.books.createRecord("items","840131996",dic,"zoho_book");
											info crt_item;
											input.Zoho_Books_Item_ID = crt_item.get("item").get("item_id");
										}
						)
					}
				}

			}
			updt_total12 as "updt_total5"
			{
				type =  form
				form = New_Quotation
				record event = on add or edit

				on user input of Quoted_Items.Tax_Rate
				{
					actions 
					{
						custom deluge script
						(
											if(row.Tax_Rate != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + (row.Quantity * row.List_Price * row.Tax_Rate.toNumber()) / 100 - row.Discount;
											row.Tax=(row.Quantity * row.List_Price * row.Tax_Rate.toNumber()) / 100;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Quoted_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total13 as "updt_total5"
			{
				type =  form
				form = New_Delivery_Order
				record event = on add or edit

				on user input of Ordered_Items.Tax_Rate
				{
					actions 
					{
						custom deluge script
						(
											if(row.Tax_Rate != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + (row.Quantity * row.List_Price * row.Tax_Rate.toNumber()) / 100 - row.Discount;
											row.Tax=(row.Quantity * row.List_Price * row.Tax_Rate.toNumber()) / 100;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Ordered_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			updt_total14 as "updt_total5"
			{
				type =  form
				form = New_Invoice
				record event = on add or edit

				on user input of Invoiced_Items.Tax_Rate
				{
					actions 
					{
						custom deluge script
						(
											if(row.Tax_Rate != null)
										{
											row.Amount=row.Quantity * row.List_Price;
											row.Total=row.Quantity * row.List_Price + (row.Quantity * row.List_Price * row.Tax_Rate.toNumber()) / 100 - row.Discount;
											row.Tax=(row.Quantity * row.List_Price * row.Tax_Rate.toNumber()) / 100;
											sub_total = 0;
											tax_total = 0;
											grand_total = 0;
											for each  row_ in Invoiced_Items
											{
												sub_total = sub_total + row_.Amount;
												tax_total = tax_total + row_.Tax;
												grand_total = grand_total + row_.Total;
											}
											input.Sub_Total = sub_total;
											input.Tax_Total = tax_total;
											input.Grand_Total = grand_total;
										}
						)
					}
				}

			}
			Zoho_Books_Quote_Updt as "Zoho_Books_Quote_Updt"
			{
				type =  form
				form = New_Quotation
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											zoho_cus = New_Account[ID == input.Account_Name].Zoho_Books_Customer_ID;
										line_item = List();
										for each  pc in input.Quoted_Items
										{
											zoho_item = New_Product[ID == pc.Product_Name].Zoho_Books_Item_ID;
											zoho_tax = New_Tax_Rate[Tax_Rate == pc.Tax_Rate].Zoho_Tax_ID;
											line_item.add({"item_id":zoho_item,"rate":pc.List_Price,"quantity":pc.Quantity,"tax_id":zoho_tax});
										}
										json = {"customer_id":zoho_cus,"estimate_number":input.Quote_Number,"tax_treatment":"vat_not_registered","date":input.Start_Date.toDate().toString("yyyy-MM-dd"),"expiry_date":input.Valid_Untill.toDate().toString("yyyy-MM-dd"),"line_items":line_item,"ignore_auto_number_generation":true,"custom_fields":{{"label":"creator_quote_id","value":input.ID}}};
										if(input.Zoho_Books_Quote_ID == "" || input.Zoho_Books_Quote_ID == null)
										{
											inv = zoho.books.createRecord("estimates","840131996",json,"zoho_book");
											input.Zoho_Books_Quote_ID = inv.get("estimate").get("estimate_id");
											info inv;
										}
										else
										{
											updt_inv = zoho.books.updateRecord("estimates","840131996",input.Zoho_Books_Quote_ID,json,"zoho_book");
											info updt_inv;
										}
						)
					}
				}

			}
			Zoho_Books_Invoice_Updt as "Zoho_Books_Invoice_Updt"
			{
				type =  form
				form = New_Invoice
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											zoho_cus = New_Account[ID == input.Account_Name].Zoho_Books_Customer_ID;
										line_item = List();
										for each  pc in input.Invoiced_Items
										{
											zoho_item = New_Product[ID == pc.Product_Name].Zoho_Books_Item_ID;
											zoho_tax = New_Tax_Rate[Tax_Rate == pc.Tax_Rate].Zoho_Tax_ID;
											line_item.add({"item_id":zoho_item,"rate":pc.List_Price,"quantity":pc.Quantity,"tax_id":zoho_tax});
										}
										json = {"customer_id":zoho_cus,"invoice_number":input.Invoice_Number,"tax_treatment":"vat_not_registered","date":input.Invoice_Date.toDate().toString("yyyy-MM-dd"),"line_items":line_item,"ignore_auto_number_generation":true,"custom_fields":{{"label":"Invoice_ID_Creator","value":input.ID}}};
										if(input.Zoho_Books_Invoice_ID == "" || input.Zoho_Books_Invoice_ID == null)
										{
											inv = zoho.books.createRecord("invoices","840131996",json,"zoho_book");
											info inv;
											input.Zoho_Books_Invoice_ID = inv.get("invoice").get("invoice_id");
										}
										else
										{
											updt_inv = zoho.books.updateRecord("invoices","840131996",input.Zoho_Books_Invoice_ID,json,"zoho_book");
											info updt_inv;
											input.Zoho_Books_Invoice_ID = updt_inv.get("invoice").get("invoice_id");
										}
						)
					}
				}

			}
			auto_pop_do_details as "auto_pop_do_details"
			{
				type =  form
				form = New_Invoice
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											srch_do = New_Delivery_Order[ID == input.Delivery_Order];
										// info srch_do.Table_of_Containers;
										for each  row_ in srch_do.Table_of_Containers
										{
											toc = New_Invoice.Table_of_Containers();
											toc.Container_No=New_Table_of_Container[ID == row_].Container_No;
											toc.Container_Size=New_Table_of_Container[ID == row_].Container_No;
											toc.Container_Type=New_Table_of_Container[ID == row_].Container_No;
											toc.Container_Seal_Number=New_Table_of_Container[ID == row_].Container_No;
											toc.G_Wt=New_Table_of_Container[ID == row_].G_Wt;
											toc.NetWt=New_Table_of_Container[ID == row_].NetWt;
											toc.ETA=New_Table_of_Container[ID == row_].ETA;
											toc.Destination_Airport=New_Table_of_Container[ID == row_].Destination_Airport;
											toc.Gate_Way_Airport=New_Table_of_Container[ID == row_].Gate_Way_Airport;
											toc.Port_of_Loading=New_Table_of_Container[ID == row_].Port_of_Loading;
											toc.Port_of_Discharge=New_Table_of_Container[ID == row_].Port_of_Discharge;
											toc.Place_of_Loading=New_Table_of_Container[ID == row_].Place_of_Loading;
											toc.Place_of_Delivery=New_Table_of_Container[ID == row_].Place_of_Delivery;
											input.Table_of_Containers.insert(toc);
										}
										// info srch_do.Ordered_Items;
										for each  row2 in srch_do.Ordered_Items
										{
											row1 = New_Invoice.Invoiced_Items();
											row1.Product_Name=row2.Product_Name;
											row1.Quantity=row2.Quantity;
											row1.List_Price=row2.List_Price;
											row1.Amount=row2.Amount;
											row1.Discount=row2.Discount;
											row1.Tax=row2.Tax;
											row1.Tax_Rate=row2.Tax_Rate;
											row1.Total=row2.Total;
											input.Invoiced_Items.insert(row1);
										}
										input.Deal_Name = srch_do.Deal_Name;
										input.Mode_of_Shipment = srch_do.Mode_of_Shipment;
										input.Account_Name = srch_do.Account_Name;
										input.Sub_Total = srch_do.Sub_Total;
										input.Tax_Total = srch_do.Tax_Total;
										input.Grand_Total = srch_do.Grand_Total;
						)
					}
				}

			}
			auto_pop_Container_Detail as "auto_pop_Container_Details"
			{
				type =  form
				form = New_Delivery_Order
				record event = on add or edit

				on user input of Table_of_Containers.Container_No
				{
					actions 
					{
						custom deluge script
						(
											row.Container_Seal_Number=row.Container_No;
										row.Container_Size=row.Container_No;
										row.Container_Type=row.Container_No;
										row.DO_ID=input.ID;
										row.ETA=input.ETA;
										try 
										{
											qt_srch = New_Quotation[ID == input.Quote_Number];
											row.Port_of_Loading=qt_srch.Port_of_Loading;
											row.Port_of_Discharge=qt_srch.Port_of_Discharge;
											row.Destination_Airport=qt_srch.Destination_Airport;
											row.Gate_Way_Airport=qt_srch.Gate_Way_Airport;
											row.Place_of_Loading=qt_srch.Place_of_Loading;
											row.Place_of_Delivery=qt_srch.Place_of_Delivery;
										}
										catch (e)
										{
											qt_srch = New_Deal[ID == input.Deal_Name];
											row.Port_of_Loading=qt_srch.Port_of_Loading;
											row.Port_of_Discharge=qt_srch.Port_of_Discharge;
											row.Destination_Airport=qt_srch.Destination_Airport;
											row.Gate_Way_Airport=qt_srch.Gate_Way_Airport;
											row.Place_of_Loading=qt_srch.Place_of_Loading;
											row.Place_of_Delivery=qt_srch.Place_of_Delivery;
										}
						)
					}
				}

			}
			auto_pop_Container_Detail1 as "auto_pop_Container_Details"
			{
				type =  form
				form = New_Invoice
				record event = on add or edit

				on user input of Table_of_Containers.Container_No
				{
					actions 
					{
						custom deluge script
						(
											row.Container_Seal_Number=row.Container_No;
										row.Container_Size=row.Container_No;
										row.Container_Type=row.Container_No;
						)
					}
				}

			}
			mandatory_fields as "mandatory_fields"
			{
				type =  form
				form = New_Invoice
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											for each  dt in input.Table_of_Containers
										{
											if(dt.Arrived_On == null)
											{
												alert "Arrive On Date is mandatory";
												cancel submit;
											}
										}
						)
					}
				}

			}
			Type_of_Container_Validat as "Type of Container Validation Rule (SFs)"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				field rules
				{
					actions  (Sub_Mode_of_Shipment == "Sea")
					{
						show Type_of_Container,Slac_Indicator,Rotaion_Number,Message_Type,Port_of_Loading,Port_of_Discharge;
					}
					actions  (Sub_Mode_of_Shipment == "Sea" && Mode_of_Shipment == "Import - NVOCC" || Mode_of_Shipment == "Export - NVOCC")
					{
						show BOX_Partnering_Line_Code,BOX_Partnering_Agent_Code,Manifest_Registration_Number;
					}
					actions  (Sub_Mode_of_Shipment == "Air")
					{
						show Destination_Airport,Gate_Way_Airport;
					}
					actions  (Sub_Mode_of_Shipment == "Land")
					{
						show Place_of_Delivery,Place_of_Loading;
					}
					actions  (Cargo_Type == "CONSOLIDATED CARGO ( GROUPAGE CARGO )")
					{
						show Groupage_Sub_Category;
					}
					actions  (Dangerous_Goods == "Yes")
					{
						show Dangerous_Goods_indicator,Storage_request_for_Dangerous_Goods,UN_Number,IMO_Class;
					}
					actions  (Type_of_Container == "Refrigerated Container")
					{
						show Unit_of_Temperature,Max_Temp_of_Refrigeration,Min_Temp_of_Refrigeration;
					}
				}

			}
			pop_sub_mode_of_shipment1 as "pop_sub_mode_of_shipment"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on user input of Mode_of_Shipment
				{
					actions 
					{
						custom deluge script
						(
											fetch_sub_mode = Map_Dependency_Mode[Mode_of_Shipment == input.Mode_of_Shipment].Sub_Mode_of_Shipment;
										input.Sub_Mode_of_Shipment:ui.add(fetch_sub_mode.toList());
						)
					}
				}

			}
			pop_CT_ST_CMT1 as "pop_CT_ST_CMT"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on user input of Sub_Mode_of_Shipment
				{
					actions 
					{
						custom deluge script
						(
											fetch_CT = Map_Submode[Sub_Mode_of_Shipment == input.Sub_Mode_of_Shipment].Cargo_Type;
										fetch_ST = Map_Submode[Sub_Mode_of_Shipment == input.Sub_Mode_of_Shipment].Shipment_Terms;
										fetch_CMT = Map_Submode[Sub_Mode_of_Shipment == input.Sub_Mode_of_Shipment].Container_Movement_Type;
										input.Cargo_Type:ui.add(fetch_CT.toList());
										input.Shipment_Terms:ui.add(fetch_ST.toList());
										input.Container_Movement_Type:ui.add(fetch_CMT.toList());
						)
					}
				}

			}
			Min_Temp_Ref_Criteria1 as "Min_Temp_Ref_Criteria"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on user input of Min_Temp_of_Refrigeration
				{
					actions 
					{
						custom deluge script
						(
											if(input.Min_Temp_of_Refrigeration >= 50)
										{
											alert "Min Temp. of Refrigeration should be below 50";
											input.Min_Temp_of_Refrigeration = null;
										}
						)
					}
				}

			}
			ETD_ETA1 as "ETD<ETA"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on user input of ETD
				{
					actions 
					{
						custom deluge script
						(
											if(input.ETD > input.ETA && input.ETA != null)
										{
											alert "ETA must be greater than ETD";
											input.ETD = null;
											input.ETA = null;
										}
						)
					}
				}

			}
			ETA_ETD1 as "ETA>ETD"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on user input of ETA
				{
					actions 
					{
						custom deluge script
						(
											if(input.ETA < input.ETD && input.ETD != null)
										{
											alert "ETA must be greater than ETD";
											input.ETA = null;
											input.ETD = null;
										}
						)
					}
				}

			}
			Type_of_Container_Validat3 as "Type of Container Validation Rule (MFs)"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Sub_Mode_of_Shipment == "Sea" && input.Port_of_Loading == null && input.Carrier_Vessel == null && input.Port_of_Discharge == null)
										{
											alert "Port of Loading, Carrier (Vessel) and Port of Discharge are mandatory";
											cancel submit;
										}
										else if(input.Sub_Mode_of_Shipment == "Sea" && input.Cargo_Type == "L - LCL CONTAINER" && input.Number_of_Package == null)
										{
											alert "Number of Package is mandatory";
											cancel submit;
										}
										else if(input.Sub_Mode_of_Shipment == "Air" && input.Destination_Airport == null && input.Gate_Way_Airport == null)
										{
											alert "Destination Airport and Gate Way Airport are mandatory";
											cancel submit;
										}
										else if(input.Sub_Mode_of_Shipment == "Land" && input.Place_of_Loading == null && input.Place_of_Delivery == null)
										{
											alert "Place of Load and Place of Delivery are mandatory";
											cancel submit;
										}
						)
					}
				}

			}
			Crt_Job_Card_No as "Crt_Job_Card_No"
			{
				type =  form
				form = New_Deal
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											curYear = zoho.currentdate.getYear();
										if(input.Mode_of_Shipment == "Import - Freight forwarding" && input.Sub_Mode_of_Shipment == "Air")
										{
											jobNumber = "IFA/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Import - Freight forwarding" && input.Sub_Mode_of_Shipment == "Land")
										{
											jobNumber = "IFL/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Import - Freight forwarding" && input.Sub_Mode_of_Shipment == "Sea")
										{
											jobNumber = "IFS/" + curYear + "/" + input.Auto_Number;
										}
										//.................Export - Freight forwarding
										else if(input.Mode_of_Shipment == "Export - Freight forwarding" && input.Sub_Mode_of_Shipment == "Air")
										{
											jobNumber = "EFA/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Export - Freight forwarding" && input.Sub_Mode_of_Shipment == "Land")
										{
											jobNumber = "EFL/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Export - Freight forwarding" && input.Sub_Mode_of_Shipment == "Sea")
										{
											jobNumber = "EFS/" + curYear + "/" + input.Auto_Number;
										}
										//......................Cross Trade
										else if(input.Mode_of_Shipment == "Cross Trade" && input.Sub_Mode_of_Shipment == "Air")
										{
											jobNumber = "CTA/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Cross Trade" && input.Sub_Mode_of_Shipment == "Land")
										{
											jobNumber = "CTL/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Cross Trade" && input.Sub_Mode_of_Shipment == "Sea")
										{
											jobNumber = "CTS/" + curYear + "/" + input.Auto_Number;
										}
										//......................Import - NVOCC
										else if(input.Mode_of_Shipment == "Import - NVOCC" && input.Sub_Mode_of_Shipment == "Air")
										{
											jobNumber = "INA/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Import - NVOCC" && input.Sub_Mode_of_Shipment == "Land")
										{
											jobNumber = "INL/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Import - NVOCC" && input.Sub_Mode_of_Shipment == "Sea")
										{
											jobNumber = "INS/" + curYear + "/" + input.Auto_Number;
										}
										//......................Export - NVOCC
										else if(input.Mode_of_Shipment == "Export - NVOCC" && input.Sub_Mode_of_Shipment == "Air")
										{
											jobNumber = "ENA/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Export - NVOCC" && input.Sub_Mode_of_Shipment == "Land")
										{
											jobNumber = "ENL/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Export - NVOCC" && input.Sub_Mode_of_Shipment == "Sea")
										{
											jobNumber = "ENS/" + curYear + "/" + input.Auto_Number;
										}
										//CS
										else if(input.Mode_of_Shipment == "Container Sale" && input.Sub_Mode_of_Shipment == "NA")
										{
											jobNumber = "CS/" + curYear + "/" + input.Auto_Number;
										}
										//FE
										else if(input.Mode_of_Shipment == "Feeder" && input.Sub_Mode_of_Shipment == "NA")
										{
											jobNumber = "FE/" + curYear + "/" + input.Auto_Number;
										}
										//Warehouse
										else if(input.Mode_of_Shipment == "Warehouse" && input.Sub_Mode_of_Shipment == "NA")
										{
											jobNumber = "WS/" + curYear + "/" + input.Auto_Number;
										}
										//OS
										else if(input.Mode_of_Shipment == "Others" && input.Sub_Mode_of_Shipment == "Others")
										{
											jobNumber = "OS/" + curYear + "/" + input.Auto_Number;
										}
										//Custom Clearance
										else if(input.Mode_of_Shipment == "Custom Clearance" && input.Sub_Mode_of_Shipment == "Air")
										{
											jobNumber = "CCA/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Custom Clearance" && input.Sub_Mode_of_Shipment == "Land")
										{
											jobNumber = "CCL/" + curYear + "/" + input.Auto_Number;
										}
										else if(input.Mode_of_Shipment == "Custom Clearance" && input.Sub_Mode_of_Shipment == "Sea")
										{
											jobNumber = "CCS/" + curYear + "/" + input.Auto_Number;
										}
										else
										{
											jobNumber = input.Auto_Number;
										}
										input.Job_Card_No = jobNumber;
						)
					}
				}

			}
			vol_validation as "vol_validation"
			{
				type =  form
				form = New_Quotation
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Sub_Mode_of_Shipment in {"Air","Land","Sea"} && input.Number_of_Packages == null || input.Width_of_Cargo_cm == null || input.Length_of_Cargo_cm == null || input.Height_of_Cargo_cm == null)
										{
											alert "Provide Length, Width, Height and No. of Packages in Package Details";
											cancel submit;
										}
						)
					}
				}

			}
			auto_pop_do_id as "auto_pop_do_id"
			{
				type =  form
				form = New_Delivery_Order
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											for each  id in input.Table_of_Containers
										{
											srch_id = New_Table_of_Container[ID == id];
											srch_id.DO_ID=input.ID;
										}
						)
					}
				}

			}
		}






		functions
		{
			Convert as "Convert"
			{
				type =  functions
				form = New_Lead
				execution type = for each record	
				on start
				{
					actions  (Is_Converted != "Yes")
					{
					on click
					(
						Lead_Id2 = New_Account[Lead_ID == input.ID];
										info Lead_Id2;
										if(Lead_Id2.Lead_ID == null)
										{
											add_rec2 = insert into New_Account
											[
												Added_User=zoho.loginuser
												Image=input.Photograph
												Account_Owner=input.Lead_Owner
												Account_Name=input.Company
												Rating=input.Rating
												Phone_Number=input.Phone_Number
												Website=input.Website
												Email=input.Email
												Industry=input.Industry
												Annual_Revenue=input.Annual_Revenue
												Employees=input.No_of_Employees
												Cargo_Type=input.Cargo_Type
												Shipment_Terms=input.Shipment_Terms
												Groupage_Sub_Category=input.Groupage_Sub_Category
												Freight_Prepaid_Collect=input.Freight_Prepaid_Collect
												Lead_ID=input.ID
												Billing_City=input.City
												Billing_Country=input.Country
												Billing_Street=input.Street
												Billing_State=input.State
												Billing_Code=input.Zip_Code
												Description=input.Description
											];
											input.Account_ID = add_rec2;
											input.Is_Converted = 'Yes';
											id = add_rec2;
											trigger_acc = thisapp.Zoho_Books_Cus_Updt2(id);
											// 	updt_zoho_cus2 = invokeurl
											// 	[
											// 		url :"https://creator.zoho.com/api/v2.1/2demo1supertroninfotech/bfms-freight-solution/report/Accounts/" + add_rec2
											// 		type :PATCH
											// 		connection:"zoho_creator"
											// 	];
											// converting to contacts
											Lead_Id = New_Contact[Lead_ID == input.ID];
											info Lead_Id;
											if(Lead_Id.Lead_ID == null)
											{
												add_rec = insert into New_Contact
												[
													Added_User=zoho.loginuser
													Lead_ID=input.ID
													Contact_Image=input.Photograph
													Contact_Owner=input.Lead_Owner
													Lead_Source=input.Lead_Source
													Contact_Name=input.Name
													Account_Name=add_rec2
													Email=input.Email
													Phone_Number=input.Phone_Number
													Mobile=input.Mobile
													Mailing_City=input.City
													Mailing_Country=input.Country
													Mailing_Street=input.Street
													Mailing_State=input.State
													Mailing_Zip=input.Zip_Code
													Description=input.Description
												];
												input.Is_Converted = 'Yes';
												// 		for each  rec in New_Account[ID == add_rec2]
												// 		{
												// 			rec.Contact_Name=add_rec;
												// 		}
											}
											// 	converting to Deals
											Lead_Id3 = New_Deal[Lead_ID == input.ID];
											info Lead_Id3;
											if(Lead_Id3.Lead_ID == null)
											{
												add_rec3 = insert into New_Deal
												[
													ETA=input.ETA
													ETD=input.ETD
													Account_Name=add_rec2
													Stage="Qualification"
													Sub_Mode_of_Shipment=input.Mode_of_Shipment
													Mode_of_Shipment=input.Submode
													Deal_Name=input.Company
													Added_User=zoho.loginuser
													BOX_Partnering_Line_Code=input.BOX_Partnering_Line_Code
													BOX_Partnering_Agent_Code=input.BOX_Partnering_Agent_Code
													Cargo_Type=input.Cargo_Type
													Carrier_Vessel=input.Carrier_Vessel
													Vessel_Name=input.Vessel_Name
													Consignee_City=input.Consignee_City
													Consignee_Country=input.Consignee_Country
													Consignee_Name=input.Consignee_Name
													Consignee_State=input.Consignee_State
													Consignee_Street=input.Consignee_Street
													Consignee_Zip_Code=input.Consignee_Zip_Code
													Container_Movement_Type=input.Container_Movement_Type
													Container_Size=input.Container_Size
													Dangerous_Goods=input.Dangerous_Goods
													Dangerous_Goods_indicator=input.Dangerous_Goods_indicator
													Description=input.Description
													Destination_Airport=input.Destination_Airport
													Freight_Prepaid_Collect=input.Freight_Prepaid_Collect
													Gate_Way_Airport=input.Gate_Way_Airport
													General_Description=input.General_Description
													Groupage_Sub_Category=input.Groupage_Sub_Category
													If_Other_Industry_Pls_Specify=input.If_Other_Industry_Pls_Specify
													IMO_Class=input.IMO_Class
													Include_Insurance=input.Include_Insurance
													Is_Stackable=input.Is_Stackable
													Lead_Expiration_Date=input.Lead_Expiration_Date
													Lead_Source=input.Lead_Source
													Manifest_Registration_Number=input.Manifest_Registration_Number
													Max_Temp_of_Refrigeration=input.Max_Temp_of_Refrigeration
													Message_Type=input.Message_Type
													MFD_Required=input.MFD_Required
													Min_Temp_of_Refrigeration=input.Min_Temp_of_Refrigeration
													No_of_Container_Reqd=input.No_of_Containers_Req
													Number_of_Package=input.Number_of_Package
													Package_Code=input.Package_Code
													Package_Description=input.Package_Description
													Photograph=input.Photograph
													Place_of_Delivery=input.Place_of_Delivery
													Place_of_Loading=input.Place_of_Load
													Port_of_Discharge=input.Port_of_Discharge
													Port_of_Loading=input.Port_of_Loading
													Rotaion_Number=input.Rotaion_Number
													Shipment_Terms=input.Shipment_Terms
													Shipper_City=input.Shipper_City
													Shipper_Country=input.Shipper_Country
													Shipper_Name=input.Shipper_Name
													Shipper_State=input.Shipper_State
													Shipper_Street=input.Shipper_Street
													Shipper_Zip_Code=input.Shipper_Zip_Code
													Slac_Indicator=input.Slac_Indicator
													Storage_Request_Code=input.Storage_Request_Code
													Storage_request_for_Dangerous_Goods=input.Storage_request_for_Dangerous_Goods
													TRN=input.TRN
													Type_of_Container=input.Type_of_Container
													UN_Number=input.UN_Number
													Unit_of_Temperature=input.Unit_of_Temperature
													USED_OR_NEW_INDICATOR=input.USED_OR_NEW_INDICATOR
													Lead_ID=input.ID
													Lead_Expiration_Date=zoho.currentdate
													Deal_Owner=input.Lead_Owner
													Closing_Date=zoho.currentdate.addDay(5)
												];
												input.Is_Converted = 'Yes';
												updt_job_card = thisapp.crt_job_card_id(add_rec3);
											}
										}
					)
					}
				}
			}
		}
	}
	share_settings
	{
			"Read"
			{
				name = "Read"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have read permission for all components\n"
			}
			"Write"
			{
				name = "Write"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have write permission for all components\n"
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users."
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 4
		icons = true
		icons style = outline
		font = "lato"
		color options
    	{
        color = "1"
    	}
    	logo
    	{
        	preference = "none"
        	placement = "left"
    	}
	}

	connections
	{
		zoho_book
		(
			displayname = "zoho_book"
			connector = zoho_books
			permissions = {"create_bill","create_chart_of_account","create_contact","create_credit_note","create_estimate","create_expense","create_item","create_journal","create_purchase_order","create_recurring_bill","create_recurring_invoice","create_retainer_invoice","create_sales_invoice","create_sales_order","create_vendor","create_vendor_credit","fetch_chart_of_account","fetch_contact_by_email_or_name","fetch_credit_note_by_number","fetch_customer_payment","fetch_estimate","fetch_expense","fetch_invoice_by_number","fetch_item_by_name","fetch_journal","fetch_purchase_order","fetch_recurring_bill","fetch_recurring_expense","fetch_recurring_invoice","fetch_retainer_invoice_by_number","fetch_salesorder","fetch_vendor","fetch_vendor_credit","fetch_vendor_payment","record_payment","record_vendor_payment","update_bill","update_chart_of_account","update_contact","update_credit_note","update_estimate","update_expense","update_item","update_journal","update_purchase_order","update_recurring_bill","update_recurring_expense","update_recurring_invoice","update_retainer_invoice","update_sales_invoice","update_sales_order","update_vendor","update_vendor_credit"}
		)
	}

	phone
	{
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "default"
            style = "3"
        	color options
        	{
             	color = turquoise
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	tablet
	{
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "default"
            style = "3"
        	color options
        	{
             	color = turquoise
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	translation
{
{"Language_Settings":{"LANGAGUE_WITH_LOGIN":"browser"}}
}
	reports configuration
	{
	
		Version = 1251000277635291
		Key     = "37UAkGUyWKu0OUExrgR4d229pUAy1fgQ1syBMDmkDz69g7Yj1n3MOHQXYeRuzadwYjrWjtB0rSEZT4OHprm8MMFfCJ0OxZVQ0arx"
	}
}
